// <auto-generated />
#if !EXCLUDE_GENERATED_CODE
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 618
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998
using global::Orleans;

[assembly: global::Orleans.Metadata.FeaturePopulatorAttribute(typeof(OrleansGeneratedCode.OrleansCodeGenGrainInterfacesFeaturePopulator))]
[assembly: global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("GrainInterfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Microsoft.CSharp, Version=4.0.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("mscorlib, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("Orleans.Core.Abstractions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Core, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Data, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Memory, Version=4.0.1.1, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Net.Http, Version=4.2.0.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Numerics.Vectors, Version=4.1.3.0, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1, Culture=neutral, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Threading.Tasks.Extensions, Version=4.2.0.1, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKey=00000000000000000400000000000000"), global::Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute("netstandard, Version=2.0.0.0, Culture=neutral, PublicKey=00240000048000009400000006020000002400005253413100040000010001004b86c4cb78549b34bab61a3b1800e23bfeb5b3ec390074041536a7e3cbd97f5f04cf0f857155a8928eaa29ebfd11cfbbad3ba70efea7bda3226c6a8d370a4cd303f714486b6ebc225985a638471e6ef571cc92a4613c00b8fa65d61ccee0cbe5f36330c9a01f4183559f1bef24cc2917c6d913e3a541333a1d05d9bed22b38cb")]
namespace GrainInterfaces
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::Orleans.CodeGeneration.MethodInvokerAttribute(typeof(global::GrainInterfaces.IHelloGrain), (int)0x4E4688BB), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]
    internal class OrleansCodeGenHelloGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        public async global::System.Threading.Tasks.Task<object> Invoke(global::Orleans.Runtime.IAddressable grain, global::Orleans.CodeGeneration.InvokeMethodRequest request)
        {
            int interfaceId = request.InterfaceId;
            int methodId = request.MethodId;
            var arguments = request.Arguments;
            switch (interfaceId)
            {
                case (int)0x4E4688BB:
                {
                    var casted = ((global::GrainInterfaces.IHelloGrain)grain);
                    switch (methodId)
                    {
                        case (int)0x59A1856A:
                            return await casted.List((global::System.Linq.Expressions.Expression<global::System.Func<global::GrainInterfaces.UserDTO, bool>>)arguments[0]);
                        case unchecked((int)0xFAFA277B):
                            return await casted.Test((global::GrainInterfaces.UserDTO)arguments[0]);
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        public int InterfaceId => (int)0x4E4688BB;
        public ushort InterfaceVersion => 0;
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.SerializableAttribute, global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.GrainReferenceAttribute(typeof(global::GrainInterfaces.IHelloGrain))]
    internal class OrleansCodeGenHelloGrainReference : global::Orleans.Runtime.GrainReference, global::GrainInterfaces.IHelloGrain
    {
        OrleansCodeGenHelloGrainReference(global::Orleans.Runtime.GrainReference other): base(other)
        {
        }

        OrleansCodeGenHelloGrainReference(global::Orleans.Runtime.GrainReference other, global::Orleans.CodeGeneration.InvokeMethodOptions invokeMethodOptions): base(other, invokeMethodOptions)
        {
        }

        OrleansCodeGenHelloGrainReference(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context): base(info, context)
        {
        }

        public override int InterfaceId => (int)0x4E4688BB;
        public override ushort InterfaceVersion => 0;
        public override string InterfaceName => "IHelloGrain";
        public override bool IsCompatible(int interfaceId) => interfaceId == (int)0x4E4688BB;
        public override string GetMethodName(int interfaceId, int methodId)
        {
            switch (interfaceId)
            {
                case (int)0x4E4688BB:
                {
                    switch (methodId)
                    {
                        case (int)0x59A1856A:
                            return "List";
                        case unchecked((int)0xFAFA277B):
                            return "Test";
                        default:
                            ThrowMethodNotImplemented(interfaceId, methodId);
                            return null;
                    }
                }

                default:
                    ThrowInterfaceNotImplemented(interfaceId);
                    return null;
            }

            void ThrowInterfaceNotImplemented(int i) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}");
            void ThrowMethodNotImplemented(int i, int m) => throw new global::System.NotImplementedException($"InterfaceId: 0x{i:X}, MethodId: 0x{m:X}");
        }

        global::System.Threading.Tasks.Task<global::System.Collections.Generic.List<global::GrainInterfaces.UserDTO>> global::GrainInterfaces.IHelloGrain.List(global::System.Linq.Expressions.Expression<global::System.Func<global::GrainInterfaces.UserDTO, bool>> expr0)
        {
            return base.InvokeMethodAsync<global::System.Collections.Generic.List<global::GrainInterfaces.UserDTO>>((int)0x59A1856A, new object[]{expr0});
        }

        global::System.Threading.Tasks.Task<string> global::GrainInterfaces.IHelloGrain.Test(global::GrainInterfaces.UserDTO dto0)
        {
            return base.InvokeMethodAsync<string>(unchecked((int)0xFAFA277B), new object[]{dto0});
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0"), global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute, global::Orleans.CodeGeneration.SerializerAttribute(typeof(global::GrainInterfaces.UserDTO))]
    internal sealed class OrleansCodeGenGrainInterfaces_UserDTOSerializer
    {
        public OrleansCodeGenGrainInterfaces_UserDTOSerializer(global::Orleans.Serialization.IFieldUtils fieldUtils)
        {
        }

        [global::Orleans.CodeGeneration.CopierMethodAttribute]
        public object DeepCopier(object original, global::Orleans.Serialization.ICopyContext context)
        {
            global::GrainInterfaces.UserDTO input = ((global::GrainInterfaces.UserDTO)original);
            global::GrainInterfaces.UserDTO result = new global::GrainInterfaces.UserDTO();
            context.RecordCopy(original, result);
            result.CreateTime = input.CreateTime;
            result.Id = input.Id;
            result.Name = input.Name;
            return result;
        }

        [global::Orleans.CodeGeneration.SerializerMethodAttribute]
        public void Serializer(object untypedInput, global::Orleans.Serialization.ISerializationContext context, global::System.Type expected)
        {
            global::GrainInterfaces.UserDTO input = (global::GrainInterfaces.UserDTO)untypedInput;
            context.SerializeInner(input.CreateTime, typeof(global::System.DateTime));
            context.SerializeInner(input.Id, typeof(string));
            context.SerializeInner(input.Name, typeof(string));
        }

        [global::Orleans.CodeGeneration.DeserializerMethodAttribute]
        public object Deserializer(global::System.Type expected, global::Orleans.Serialization.IDeserializationContext context)
        {
            global::GrainInterfaces.UserDTO result = new global::GrainInterfaces.UserDTO();
            context.RecordObject(result);
            result.CreateTime = (global::System.DateTime)context.DeserializeInner(typeof(global::System.DateTime));
            result.Id = (string)context.DeserializeInner(typeof(string));
            result.Name = (string)context.DeserializeInner(typeof(string));
            return (global::GrainInterfaces.UserDTO)result;
        }
    }
}

namespace OrleansGeneratedCode
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("OrleansCodeGen", "2.0.0.0")]
    internal sealed class OrleansCodeGenGrainInterfacesFeaturePopulator : global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainInterfaceFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Metadata.GrainClassFeature>, global::Orleans.Metadata.IFeaturePopulator<global::Orleans.Serialization.SerializerFeature>
    {
        public void Populate(global::Orleans.Metadata.GrainInterfaceFeature feature)
        {
            feature.Interfaces.Add(new global::Orleans.Metadata.GrainInterfaceMetadata(typeof(global::GrainInterfaces.IHelloGrain), typeof(GrainInterfaces.OrleansCodeGenHelloGrainReference), typeof(GrainInterfaces.OrleansCodeGenHelloGrainMethodInvoker), (int)0x4E4688BB));
        }

        public void Populate(global::Orleans.Metadata.GrainClassFeature feature)
        {
        }

        public void Populate(global::Orleans.Serialization.SerializerFeature feature)
        {
            feature.AddSerializerType(typeof(global::GrainInterfaces.UserDTO), typeof(GrainInterfaces.OrleansCodeGenGrainInterfaces_UserDTOSerializer), false);
            feature.AddKnownType("GrainInterfaces.IHelloGrain,GrainInterfaces", "GrainInterfaces.IHelloGrain");
            feature.AddKnownType("System.Threading.Tasks.Task`1", "Task`1'1");
            feature.AddKnownType("System.Collections.Generic.List`1", "List`1'1");
            feature.AddKnownType("GrainInterfaces.UserDTO,GrainInterfaces", "GrainInterfaces.UserDTO");
            feature.AddKnownType("System.Threading.Tasks.Task", "Task");
            feature.AddKnownType("System.Linq.Expressions.Expression`1", "Expression`1'1");
            feature.AddKnownType("System.Linq.Expressions.LambdaExpression", "LambdaExpression");
            feature.AddKnownType("System.Linq.Expressions.Expression", "Expression");
            feature.AddKnownType("GrainInterfaces.User,GrainInterfaces", "GrainInterfaces.User");
            feature.AddKnownType("System.Threading.Tasks.TaskScheduler", "TaskScheduler");
            feature.AddKnownType("System.Threading.Tasks.Task+ContingentProperties", "ContingentProperties");
            feature.AddKnownType("Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo,Microsoft.CSharp", "Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo");
            feature.AddKnownType("Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags,Microsoft.CSharp", "Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags");
            feature.AddKnownType("Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,Microsoft.CSharp", "Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags");
            feature.AddKnownType("Microsoft.CSharp.RuntimeBinder.RuntimeBinderException,Microsoft.CSharp", "Microsoft.CSharp.RuntimeBinder.RuntimeBinderException");
            feature.AddKnownType("Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException,Microsoft.CSharp", "Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException");
            feature.AddKnownType("Microsoft.Runtime.Hosting.IClrStrongNameUsingIntPtr,mscorlib", "Microsoft.Runtime.Hosting.IClrStrongNameUsingIntPtr");
            feature.AddKnownType("Microsoft.Runtime.Hosting.IClrStrongName,mscorlib", "Microsoft.Runtime.Hosting.IClrStrongName");
            feature.AddKnownType("Microsoft.Win32.IAssemblyEnum,mscorlib", "Microsoft.Win32.IAssemblyEnum");
            feature.AddKnownType("Microsoft.Win32.IApplicationContext,mscorlib", "Microsoft.Win32.IApplicationContext");
            feature.AddKnownType("Microsoft.Win32.IAssemblyName,mscorlib", "Microsoft.Win32.IAssemblyName");
            feature.AddKnownType("Microsoft.Win32.Win32Native+SystemTime,mscorlib", "Microsoft.Win32.SystemTime");
            feature.AddKnownType("Microsoft.Win32.Win32Native+TimeZoneInformation,mscorlib", "Microsoft.Win32.TimeZoneInformation");
            feature.AddKnownType("Microsoft.Win32.Win32Native+DynamicTimeZoneInformation,mscorlib", "Microsoft.Win32.DynamicTimeZoneInformation");
            feature.AddKnownType("Microsoft.Win32.Win32Native+RegistryTimeZoneInformation,mscorlib", "Microsoft.Win32.RegistryTimeZoneInformation");
            feature.AddKnownType("Microsoft.Win32.Win32Native+OSVERSIONINFO,mscorlib", "Microsoft.Win32.OSVERSIONINFO");
            feature.AddKnownType("Microsoft.Win32.Win32Native+OSVERSIONINFOEX,mscorlib", "Microsoft.Win32.OSVERSIONINFOEX");
            feature.AddKnownType("Microsoft.Win32.Win32Native+SYSTEM_INFO,mscorlib", "Microsoft.Win32.SYSTEM_INFO");
            feature.AddKnownType("Microsoft.Win32.Win32Native+SECURITY_ATTRIBUTES,mscorlib", "Microsoft.Win32.SECURITY_ATTRIBUTES");
            feature.AddKnownType("Microsoft.Win32.Win32Native+WIN32_FILE_ATTRIBUTE_DATA,mscorlib", "Microsoft.Win32.WIN32_FILE_ATTRIBUTE_DATA");
            feature.AddKnownType("Microsoft.Win32.Win32Native+FILE_TIME,mscorlib", "Microsoft.Win32.FILE_TIME");
            feature.AddKnownType("Microsoft.Win32.Win32Native+KERB_S4U_LOGON,mscorlib", "Microsoft.Win32.KERB_S4U_LOGON");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LSA_OBJECT_ATTRIBUTES,mscorlib", "Microsoft.Win32.LSA_OBJECT_ATTRIBUTES");
            feature.AddKnownType("Microsoft.Win32.Win32Native+UNICODE_STRING,mscorlib", "Microsoft.Win32.UNICODE_STRING");
            feature.AddKnownType("Microsoft.Win32.Win32Native+UNICODE_INTPTR_STRING,mscorlib", "Microsoft.Win32.UNICODE_INTPTR_STRING");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LSA_TRANSLATED_NAME,mscorlib", "Microsoft.Win32.LSA_TRANSLATED_NAME");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LSA_TRANSLATED_SID,mscorlib", "Microsoft.Win32.LSA_TRANSLATED_SID");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LSA_TRANSLATED_SID2,mscorlib", "Microsoft.Win32.LSA_TRANSLATED_SID2");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LSA_TRUST_INFORMATION,mscorlib", "Microsoft.Win32.LSA_TRUST_INFORMATION");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LSA_REFERENCED_DOMAIN_LIST,mscorlib", "Microsoft.Win32.LSA_REFERENCED_DOMAIN_LIST");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LUID,mscorlib", "Microsoft.Win32.LUID");
            feature.AddKnownType("Microsoft.Win32.Win32Native+LUID_AND_ATTRIBUTES,mscorlib", "Microsoft.Win32.LUID_AND_ATTRIBUTES");
            feature.AddKnownType("Microsoft.Win32.Win32Native+QUOTA_LIMITS,mscorlib", "Microsoft.Win32.QUOTA_LIMITS");
            feature.AddKnownType("Microsoft.Win32.Win32Native+SECURITY_LOGON_SESSION_DATA,mscorlib", "Microsoft.Win32.SECURITY_LOGON_SESSION_DATA");
            feature.AddKnownType("Microsoft.Win32.Win32Native+SID_AND_ATTRIBUTES,mscorlib", "Microsoft.Win32.SID_AND_ATTRIBUTES");
            feature.AddKnownType("Microsoft.Win32.Win32Native+TOKEN_GROUPS,mscorlib", "Microsoft.Win32.TOKEN_GROUPS");
            feature.AddKnownType("Microsoft.Win32.Win32Native+TOKEN_PRIMARY_GROUP,mscorlib", "Microsoft.Win32.TOKEN_PRIMARY_GROUP");
            feature.AddKnownType("Microsoft.Win32.Win32Native+TOKEN_PRIVILEGE,mscorlib", "Microsoft.Win32.TOKEN_PRIVILEGE");
            feature.AddKnownType("Microsoft.Win32.Win32Native+TOKEN_SOURCE,mscorlib", "Microsoft.Win32.TOKEN_SOURCE");
            feature.AddKnownType("Microsoft.Win32.Win32Native+TOKEN_STATISTICS,mscorlib", "Microsoft.Win32.TOKEN_STATISTICS");
            feature.AddKnownType("Microsoft.Win32.Win32Native+TOKEN_USER,mscorlib", "Microsoft.Win32.TOKEN_USER");
            feature.AddKnownType("Microsoft.Win32.Win32Native+MEMORYSTATUSEX,mscorlib", "Microsoft.Win32.MEMORYSTATUSEX");
            feature.AddKnownType("Microsoft.Win32.Win32Native+MEMORY_BASIC_INFORMATION,mscorlib", "Microsoft.Win32.MEMORY_BASIC_INFORMATION");
            feature.AddKnownType("Microsoft.Win32.Win32Native+NlsVersionInfoEx,mscorlib", "Microsoft.Win32.NlsVersionInfoEx");
            feature.AddKnownType("Microsoft.Win32.Win32Native+WIN32_FIND_DATA,mscorlib", "Microsoft.Win32.WIN32_FIND_DATA");
            feature.AddKnownType("Microsoft.Win32.Win32Native+COORD,mscorlib", "Microsoft.Win32.COORD");
            feature.AddKnownType("Microsoft.Win32.Win32Native+SMALL_RECT,mscorlib", "Microsoft.Win32.SMALL_RECT");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CONSOLE_SCREEN_BUFFER_INFO,mscorlib", "Microsoft.Win32.CONSOLE_SCREEN_BUFFER_INFO");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CONSOLE_CURSOR_INFO,mscorlib", "Microsoft.Win32.CONSOLE_CURSOR_INFO");
            feature.AddKnownType("Microsoft.Win32.Win32Native+KeyEventRecord,mscorlib", "Microsoft.Win32.KeyEventRecord");
            feature.AddKnownType("Microsoft.Win32.Win32Native+InputRecord,mscorlib", "Microsoft.Win32.InputRecord");
            feature.AddKnownType("Microsoft.Win32.Win32Native+Color,mscorlib", "Microsoft.Win32.Color");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CHAR_INFO,mscorlib", "Microsoft.Win32.CHAR_INFO");
            feature.AddKnownType("Microsoft.Win32.Win32Native+USEROBJECTFLAGS,mscorlib", "Microsoft.Win32.USEROBJECTFLAGS");
            feature.AddKnownType("Microsoft.Win32.Win32Native+SECURITY_IMPERSONATION_LEVEL,mscorlib", "Microsoft.Win32.SECURITY_IMPERSONATION_LEVEL");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CLAIM_SECURITY_ATTRIBUTE_INFORMATION_V1,mscorlib", "Microsoft.Win32.CLAIM_SECURITY_ATTRIBUTE_INFORMATION_V1");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CLAIM_SECURITY_ATTRIBUTES_INFORMATION,mscorlib", "Microsoft.Win32.CLAIM_SECURITY_ATTRIBUTES_INFORMATION");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE,mscorlib", "Microsoft.Win32.CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE,mscorlib", "Microsoft.Win32.CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CLAIM_VALUES_ATTRIBUTE_V1,mscorlib", "Microsoft.Win32.CLAIM_VALUES_ATTRIBUTE_V1");
            feature.AddKnownType("Microsoft.Win32.Win32Native+CLAIM_SECURITY_ATTRIBUTE_V1,mscorlib", "Microsoft.Win32.CLAIM_SECURITY_ATTRIBUTE_V1");
            feature.AddKnownType("Microsoft.Win32.Win32Native+RTL_OSVERSIONINFOEX,mscorlib", "Microsoft.Win32.RTL_OSVERSIONINFOEX");
            feature.AddKnownType("Microsoft.Win32.Win32Native+ProcessorArchitecture,mscorlib", "Microsoft.Win32.ProcessorArchitecture");
            feature.AddKnownType("Microsoft.Win32.RegistryHive,mscorlib", "Microsoft.Win32.RegistryHive");
            feature.AddKnownType("Microsoft.Win32.RegistryKey,mscorlib", "Microsoft.Win32.RegistryKey");
            feature.AddKnownType("Microsoft.Win32.RegistryValueOptions,mscorlib", "Microsoft.Win32.RegistryValueOptions");
            feature.AddKnownType("Microsoft.Win32.RegistryKeyPermissionCheck,mscorlib", "Microsoft.Win32.RegistryKeyPermissionCheck");
            feature.AddKnownType("Microsoft.Win32.RegistryOptions,mscorlib", "Microsoft.Win32.RegistryOptions");
            feature.AddKnownType("Microsoft.Win32.RegistryValueKind,mscorlib", "Microsoft.Win32.RegistryValueKind");
            feature.AddKnownType("Microsoft.Win32.RegistryView,mscorlib", "Microsoft.Win32.RegistryView");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+EVENT_FILTER_DESCRIPTOR,mscorlib", "Microsoft.Win32.EVENT_FILTER_DESCRIPTOR");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+ActivityControl,mscorlib", "Microsoft.Win32.ActivityControl");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+EVENT_INFO_CLASS,mscorlib", "Microsoft.Win32.EVENT_INFO_CLASS");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+TRACE_QUERY_INFO_CLASS,mscorlib", "Microsoft.Win32.TRACE_QUERY_INFO_CLASS");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+TRACE_GUID_INFO,mscorlib", "Microsoft.Win32.TRACE_GUID_INFO");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+TRACE_PROVIDER_INSTANCE_INFO,mscorlib", "Microsoft.Win32.TRACE_PROVIDER_INSTANCE_INFO");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+ManifestEtw+TRACE_ENABLE_INFO,mscorlib", "Microsoft.Win32.TRACE_ENABLE_INFO");
            feature.AddKnownType("Microsoft.Win32.SafeLibraryHandle,mscorlib", "Microsoft.Win32.SafeLibraryHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeFileHandle,mscorlib", "Microsoft.Win32.SafeHandles.SafeFileHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeFileMappingHandle,mscorlib", "Microsoft.Win32.SafeHandles.SafeFileMappingHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeFindHandle,mscorlib", "Microsoft.Win32.SafeHandles.SafeFindHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeLocalAllocHandle,mscorlib", "Microsoft.Win32.SafeHandles.SafeLocalAllocHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafePEFileHandle,mscorlib", "Microsoft.Win32.SafeHandles.SafePEFileHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeRegistryHandle,mscorlib", "Microsoft.Win32.SafeHandles.SafeRegistryHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeViewOfFileHandle,mscorlib", "Microsoft.Win32.SafeHandles.SafeViewOfFileHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeWaitHandle,mscorlib", "Microsoft.Win32.SafeHandles.SafeWaitHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid,mscorlib", "Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid,mscorlib", "Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid,mscorlib", "Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid,mscorlib", "Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,mscorlib", "Microsoft.Win32.SafeHandles.SafeAccessTokenHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle,mscorlib", "Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle,mscorlib", "Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle,mscorlib", "Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeLsaReturnBufferHandle,mscorlib", "Microsoft.Win32.SafeHandles.SafeLsaReturnBufferHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeProcessHandle,mscorlib", "Microsoft.Win32.SafeHandles.SafeProcessHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeThreadHandle,mscorlib", "Microsoft.Win32.SafeHandles.SafeThreadHandle");
            feature.AddKnownType("System.AggregateException", "AggregateException");
            feature.AddKnownType("System.__Canon", "__Canon");
            feature.AddKnownType("System.ICloneable", "ICloneable");
            feature.AddKnownType("System.Array+FunctorComparer`1", "FunctorComparer`1'1");
            feature.AddKnownType("System.SZArrayHelper", "SZArrayHelper");
            feature.AddKnownType("System.ArraySegment`1", "ArraySegment`1'1");
            feature.AddKnownType("System.IComparable", "IComparable");
            feature.AddKnownType("System.IComparable`1", "IComparable`1'1");
            feature.AddKnownType("System.IEquatable`1", "IEquatable`1'1");
            feature.AddKnownType("System.ExceptionArgument", "ExceptionArgument");
            feature.AddKnownType("System.ExceptionResource", "ExceptionResource");
            feature.AddKnownType("System.ITupleInternal", "ITupleInternal");
            feature.AddKnownType("System.Tuple`1", "Tuple`1'1");
            feature.AddKnownType("System.Tuple`2", "Tuple`2'2");
            feature.AddKnownType("System.Tuple`3", "Tuple`3'3");
            feature.AddKnownType("System.Tuple`4", "Tuple`4'4");
            feature.AddKnownType("System.Tuple`5", "Tuple`5'5");
            feature.AddKnownType("System.Tuple`6", "Tuple`6'6");
            feature.AddKnownType("System.Tuple`7", "Tuple`7'7");
            feature.AddKnownType("System.Tuple`8", "Tuple`8'8");
            feature.AddKnownType("System.IValueTupleInternal", "IValueTupleInternal");
            feature.AddKnownType("System.ValueTuple", "ValueTuple");
            feature.AddKnownType("System.ValueTuple`1", "ValueTuple`1'1");
            feature.AddKnownType("System.ValueTuple`2", "ValueTuple`2'2");
            feature.AddKnownType("System.ValueTuple`3", "ValueTuple`3'3");
            feature.AddKnownType("System.ValueTuple`4", "ValueTuple`4'4");
            feature.AddKnownType("System.ValueTuple`5", "ValueTuple`5'5");
            feature.AddKnownType("System.ValueTuple`6", "ValueTuple`6'6");
            feature.AddKnownType("System.ValueTuple`7", "ValueTuple`7'7");
            feature.AddKnownType("System.ValueTuple`8", "ValueTuple`8'8");
            feature.AddKnownType("System.StringSplitOptions", "StringSplitOptions");
            feature.AddKnownType("System.StringComparer", "StringComparer");
            feature.AddKnownType("System.CultureAwareComparer", "CultureAwareComparer");
            feature.AddKnownType("System.CultureAwareRandomizedComparer", "CultureAwareRandomizedComparer");
            feature.AddKnownType("System.OrdinalComparer", "OrdinalComparer");
            feature.AddKnownType("System.OrdinalRandomizedComparer", "OrdinalRandomizedComparer");
            feature.AddKnownType("System.IWellKnownStringEqualityComparer", "IWellKnownStringEqualityComparer");
            feature.AddKnownType("System.StringComparison", "StringComparison");
            feature.AddKnownType("System.Exception", "Exception");
            feature.AddKnownType("System.Exception+__RestrictedErrorObject", "__RestrictedErrorObject");
            feature.AddKnownType("System.Exception+ExceptionMessageKind", "ExceptionMessageKind");
            feature.AddKnownType("System.DateTimeKind", "DateTimeKind");
            feature.AddKnownType("System.DateTimeOffset", "DateTimeOffset");
            feature.AddKnownType("System.SystemException", "SystemException");
            feature.AddKnownType("System.OutOfMemoryException", "OutOfMemoryException");
            feature.AddKnownType("System.StackOverflowException", "StackOverflowException");
            feature.AddKnownType("System.DataMisalignedException", "DataMisalignedException");
            feature.AddKnownType("System.ExecutionEngineException", "ExecutionEngineException");
            feature.AddKnownType("System.DelegateBindingFlags", "DelegateBindingFlags");
            feature.AddKnownType("System.__Filters", "__Filters");
            feature.AddKnownType("System.LogLevel", "LogLevel");
            feature.AddKnownType("System.SwitchStructure", "SwitchStructure");
            feature.AddKnownType("System.MemberAccessException", "MemberAccessException");
            feature.AddKnownType("System.Activator", "Activator");
            feature.AddKnownType("System.AccessViolationException", "AccessViolationException");
            feature.AddKnownType("System.ApplicationException", "ApplicationException");
            feature.AddKnownType("System.ResolveEventArgs", "ResolveEventArgs");
            feature.AddKnownType("System.AssemblyLoadEventArgs", "AssemblyLoadEventArgs");
            feature.AddKnownType("System.AppDomainInitializerInfo", "AppDomainInitializerInfo");
            feature.AddKnownType("System.AppDomainInitializerInfo+ItemInfo", "ItemInfo");
            feature.AddKnownType("System.AppDomain", "AppDomain");
            feature.AddKnownType("System.AppDomainHandle", "AppDomainHandle");
            feature.AddKnownType("System.AppDomainManagerInitializationOptions", "AppDomainManagerInitializationOptions");
            feature.AddKnownType("System.AppDomainManager", "AppDomainManager");
            feature.AddKnownType("System.AppDomainPauseManager", "AppDomainPauseManager");
            feature.AddKnownType("System._AppDomain", "_AppDomain");
            feature.AddKnownType("System.AppDomainSetup", "AppDomainSetup");
            feature.AddKnownType("System.AppDomainSetup+LoaderInformation", "LoaderInformation");
            feature.AddKnownType("System.IAppDomainSetup", "IAppDomainSetup");
            feature.AddKnownType("System.LoaderOptimization", "LoaderOptimization");
            feature.AddKnownType("System.LoaderOptimizationAttribute", "LoaderOptimizationAttribute");
            feature.AddKnownType("System.AppDomainUnloadedException", "AppDomainUnloadedException");
            feature.AddKnownType("System.ActivationContext", "ActivationContext");
            feature.AddKnownType("System.ActivationContext+ContextForm", "ActivationContext.ContextForm");
            feature.AddKnownType("System.ActivationContext+ApplicationState", "ApplicationState");
            feature.AddKnownType("System.ActivationContext+ApplicationStateDisposition", "ApplicationStateDisposition");
            feature.AddKnownType("System.ApplicationIdentity", "ApplicationIdentity");
            feature.AddKnownType("System.ApplicationId", "ApplicationId");
            feature.AddKnownType("System.ArgumentException", "ArgumentException");
            feature.AddKnownType("System.ArgumentNullException", "ArgumentNullException");
            feature.AddKnownType("System.ArgumentOutOfRangeException", "ArgumentOutOfRangeException");
            feature.AddKnownType("System.ArithmeticException", "ArithmeticException");
            feature.AddKnownType("System.ArrayTypeMismatchException", "ArrayTypeMismatchException");
            feature.AddKnownType("System.Attribute", "Attribute");
            feature.AddKnownType("System.AttributeTargets", "AttributeTargets");
            feature.AddKnownType("System.AttributeUsageAttribute", "AttributeUsageAttribute");
            feature.AddKnownType("System.BadImageFormatException", "BadImageFormatException");
            feature.AddKnownType("System.CannotUnloadAppDomainException", "CannotUnloadAppDomainException");
            feature.AddKnownType("System.CharEnumerator", "CharEnumerator");
            feature.AddKnownType("System.ConfigEvents", "ConfigEvents");
            feature.AddKnownType("System.ConfigNodeType", "ConfigNodeType");
            feature.AddKnownType("System.ConfigNodeSubType", "ConfigNodeSubType");
            feature.AddKnownType("System.BaseConfigHandler", "BaseConfigHandler");
            feature.AddKnownType("System.ConfigTreeParser", "ConfigTreeParser");
            feature.AddKnownType("System.ConfigNode", "ConfigNode");
            feature.AddKnownType("System.CLSCompliantAttribute", "CLSCompliantAttribute");
            feature.AddKnownType("System.TypeUnloadedException", "TypeUnloadedException");
            feature.AddKnownType("System.__ComObject", "__ComObject");
            feature.AddKnownType("System.Console+ControlKeyState", "ControlKeyState");
            feature.AddKnownType("System.Console+ControlCHooker", "ControlCHooker");
            feature.AddKnownType("System.ConsoleCancelEventArgs", "ConsoleCancelEventArgs");
            feature.AddKnownType("System.ConsoleColor", "ConsoleColor");
            feature.AddKnownType("System.ConsoleKey", "ConsoleKey");
            feature.AddKnownType("System.ConsoleKeyInfo", "ConsoleKeyInfo");
            feature.AddKnownType("System.ConsoleModifiers", "ConsoleModifiers");
            feature.AddKnownType("System.ConsoleSpecialKey", "ConsoleSpecialKey");
            feature.AddKnownType("System.ContextMarshalException", "ContextMarshalException");
            feature.AddKnownType("System.Base64FormattingOptions", "Base64FormattingOptions");
            feature.AddKnownType("System.ContextBoundObject", "ContextBoundObject");
            feature.AddKnownType("System.ContextStaticAttribute", "ContextStaticAttribute");
            feature.AddKnownType("System.Currency", "Currency");
            feature.AddKnownType("System.CurrentSystemTimeZone", "CurrentSystemTimeZone");
            feature.AddKnownType("System.DayOfWeek", "DayOfWeek");
            feature.AddKnownType("System.DBNull", "DBNull");
            feature.AddKnownType("System.DefaultBinder", "DefaultBinder");
            feature.AddKnownType("System.DefaultBinder+BinderState", "BinderState");
            feature.AddKnownType("System.DelegateSerializationHolder", "DelegateSerializationHolder");
            feature.AddKnownType("System.DelegateSerializationHolder+DelegateEntry", "DelegateEntry");
            feature.AddKnownType("System.DivideByZeroException", "DivideByZeroException");
            feature.AddKnownType("System.DuplicateWaitObjectException", "DuplicateWaitObjectException");
            feature.AddKnownType("System.Empty", "Empty");
            feature.AddKnownType("System.EntryPointNotFoundException", "EntryPointNotFoundException");
            feature.AddKnownType("System.DllNotFoundException", "DllNotFoundException");
            feature.AddKnownType("System.EnvironmentVariableTarget", "EnvironmentVariableTarget");
            feature.AddKnownType("System.Environment+ResourceHelper", "ResourceHelper");
            feature.AddKnownType("System.Environment+ResourceHelper+GetResourceStringUserData", "GetResourceStringUserData");
            feature.AddKnownType("System.Environment+SpecialFolderOption", "Environment.SpecialFolderOption");
            feature.AddKnownType("System.Environment+SpecialFolder", "Environment.SpecialFolder");
            feature.AddKnownType("System.EventArgs", "EventArgs");
            feature.AddKnownType("System.FieldAccessException", "FieldAccessException");
            feature.AddKnownType("System.FlagsAttribute", "FlagsAttribute");
            feature.AddKnownType("System.FormatException", "FormatException");
            feature.AddKnownType("System.FormattableString", "FormattableString");
            feature.AddKnownType("System.GCCollectionMode", "GCCollectionMode");
            feature.AddKnownType("System.InternalGCCollectionMode", "InternalGCCollectionMode");
            feature.AddKnownType("System.GCNotificationStatus", "GCNotificationStatus");
            feature.AddKnownType("System.SizedReference", "SizedReference");
            feature.AddKnownType("System.Guid", "Guid");
            feature.AddKnownType("System.ICustomFormatter", "ICustomFormatter");
            feature.AddKnownType("System.IFormatProvider", "IFormatProvider");
            feature.AddKnownType("System.IFormattable", "IFormattable");
            feature.AddKnownType("System.IndexOutOfRangeException", "IndexOutOfRangeException");
            feature.AddKnownType("System.IObservable`1", "IObservable`1'1");
            feature.AddKnownType("System.IObserver`1", "IObserver`1'1");
            feature.AddKnownType("System.IProgress`1", "IProgress`1'1");
            feature.AddKnownType("System.InsufficientMemoryException", "InsufficientMemoryException");
            feature.AddKnownType("System.InsufficientExecutionStackException", "InsufficientExecutionStackException");
            feature.AddKnownType("System.Lazy`1", "Lazy`1'1");
            feature.AddKnownType("System.System_LazyDebugView`1", "System_LazyDebugView`1'1");
            feature.AddKnownType("System.InvalidCastException", "InvalidCastException");
            feature.AddKnownType("System.InvalidOperationException", "InvalidOperationException");
            feature.AddKnownType("System.InvalidProgramException", "InvalidProgramException");
            feature.AddKnownType("System.InvalidTimeZoneException", "InvalidTimeZoneException");
            feature.AddKnownType("System.IConvertible", "IConvertible");
            feature.AddKnownType("System.IServiceProvider", "IServiceProvider");
            feature.AddKnownType("System.LocalDataStoreHolder", "LocalDataStoreHolder");
            feature.AddKnownType("System.LocalDataStoreElement", "LocalDataStoreElement");
            feature.AddKnownType("System.LocalDataStore", "LocalDataStore");
            feature.AddKnownType("System.LocalDataStoreSlot", "LocalDataStoreSlot");
            feature.AddKnownType("System.LocalDataStoreMgr", "LocalDataStoreMgr");
            feature.AddKnownType("System.MarshalByRefObject", "MarshalByRefObject");
            feature.AddKnownType("System.MethodAccessException", "MethodAccessException");
            feature.AddKnownType("System.MidpointRounding", "MidpointRounding");
            feature.AddKnownType("System.MissingFieldException", "MissingFieldException");
            feature.AddKnownType("System.MissingMemberException", "MissingMemberException");
            feature.AddKnownType("System.MissingMethodException", "MissingMethodException");
            feature.AddKnownType("System.MulticastNotSupportedException", "MulticastNotSupportedException");
            feature.AddKnownType("System.NonSerializedAttribute", "NonSerializedAttribute");
            feature.AddKnownType("System.NotFiniteNumberException", "NotFiniteNumberException");
            feature.AddKnownType("System.NotImplementedException", "NotImplementedException");
            feature.AddKnownType("System.NotSupportedException", "NotSupportedException");
            feature.AddKnownType("System.NullReferenceException", "NullReferenceException");
            feature.AddKnownType("System.Number", "Number");
            feature.AddKnownType("System.Number+NumberBuffer", "NumberBuffer");
            feature.AddKnownType("System.ObjectDisposedException", "ObjectDisposedException");
            feature.AddKnownType("System.ObsoleteAttribute", "ObsoleteAttribute");
            feature.AddKnownType("System.OleAutBinder", "OleAutBinder");
            feature.AddKnownType("System.OperatingSystem", "OperatingSystem");
            feature.AddKnownType("System.OperationCanceledException", "OperationCanceledException");
            feature.AddKnownType("System.OverflowException", "OverflowException");
            feature.AddKnownType("System.ParamArrayAttribute", "ParamArrayAttribute");
            feature.AddKnownType("System.ParamsArray", "ParamsArray");
            feature.AddKnownType("System.PlatformID", "PlatformID");
            feature.AddKnownType("System.PlatformNotSupportedException", "PlatformNotSupportedException");
            feature.AddKnownType("System.Progress`1", "Progress`1'1");
            feature.AddKnownType("System.Random", "Random");
            feature.AddKnownType("System.RankException", "RankException");
            feature.AddKnownType("System.TypeNameFormatFlags", "TypeNameFormatFlags");
            feature.AddKnownType("System.TypeNameKind", "TypeNameKind");
            feature.AddKnownType("System.RuntimeType", "RuntimeType");
            feature.AddKnownType("System.RuntimeType+MemberListType", "MemberListType");
            feature.AddKnownType("System.RuntimeType+RuntimeTypeCache", "RuntimeTypeCache");
            feature.AddKnownType("System.RuntimeType+RuntimeTypeCache+CacheType", "CacheType");
            feature.AddKnownType("System.ReflectionOnlyType", "ReflectionOnlyType");
            feature.AddKnownType("System.Utf8String", "Utf8String");
            feature.AddKnownType("System.RuntimeTypeHandle+IntroducedMethodEnumerator", "IntroducedMethodEnumerator");
            feature.AddKnownType("System.RuntimeMethodHandleInternal", "RuntimeMethodHandleInternal");
            feature.AddKnownType("System.RuntimeMethodInfoStub", "RuntimeMethodInfoStub");
            feature.AddKnownType("System.IRuntimeMethodInfo", "IRuntimeMethodInfo");
            feature.AddKnownType("System.RuntimeFieldHandleInternal", "RuntimeFieldHandleInternal");
            feature.AddKnownType("System.IRuntimeFieldInfo", "IRuntimeFieldInfo");
            feature.AddKnownType("System.RuntimeFieldInfoStub", "RuntimeFieldInfoStub");
            feature.AddKnownType("System.ModuleHandle", "ModuleHandle");
            feature.AddKnownType("System.Signature", "Signature");
            feature.AddKnownType("System.Signature+MdSigCallingConvention", "MdSigCallingConvention");
            feature.AddKnownType("System.Resolver", "Resolver");
            feature.AddKnownType("System.Resolver+CORINFO_EH_CLAUSE", "CORINFO_EH_CLAUSE");
            feature.AddKnownType("System.SerializableAttribute", "SerializableAttribute");
            feature.AddKnownType("System.SharedStatics", "SharedStatics");
            feature.AddKnownType("System.STAThreadAttribute", "STAThreadAttribute");
            feature.AddKnownType("System.MTAThreadAttribute", "MTAThreadAttribute");
            feature.AddKnownType("System.TimeoutException", "TimeoutException");
            feature.AddKnownType("System.TimeSpan", "TimeSpan");
            feature.AddKnownType("System.TimeZone", "TimeZone");
            feature.AddKnownType("System.TimeZoneInfoOptions", "TimeZoneInfoOptions");
            feature.AddKnownType("System.TimeZoneInfo", "TimeZoneInfo");
            feature.AddKnownType("System.TimeZoneInfo+AdjustmentRule", "TimeZoneInfo.AdjustmentRule");
            feature.AddKnownType("System.TimeZoneInfo+TransitionTime", "TimeZoneInfo.TransitionTime");
            feature.AddKnownType("System.TimeZoneNotFoundException", "TimeZoneNotFoundException");
            feature.AddKnownType("System.Type", "Type");
            feature.AddKnownType("System.TypeAccessException", "TypeAccessException");
            feature.AddKnownType("System.SafeTypeNameParserHandle", "SafeTypeNameParserHandle");
            feature.AddKnownType("System.TypeNameParser", "TypeNameParser");
            feature.AddKnownType("System.TypeCode", "TypeCode");
            feature.AddKnownType("System.TypeInitializationException", "TypeInitializationException");
            feature.AddKnownType("System.TypeLoadException", "TypeLoadException");
            feature.AddKnownType("System.UnauthorizedAccessException", "UnauthorizedAccessException");
            feature.AddKnownType("System.UnitySerializationHolder", "UnitySerializationHolder");
            feature.AddKnownType("System.UnhandledExceptionEventArgs", "UnhandledExceptionEventArgs");
            feature.AddKnownType("System.UnSafeCharBuffer", "UnSafeCharBuffer");
            feature.AddKnownType("System.Variant", "Variant");
            feature.AddKnownType("System.Version", "Version");
            feature.AddKnownType("System.Version+ParseFailureKind", "ParseFailureKind");
            feature.AddKnownType("System.Version+VersionResult", "VersionResult");
            feature.AddKnownType("System.WeakReference", "WeakReference");
            feature.AddKnownType("System.WeakReference`1", "WeakReference`1'1");
            feature.AddKnownType("System.XmlIgnoreMemberAttribute", "XmlIgnoreMemberAttribute");
            feature.AddKnownType("System.CLRConfig", "CLRConfig");
            feature.AddKnownType("System.ThreadStaticAttribute", "ThreadStaticAttribute");
            feature.AddKnownType("System.DateTimeParse+DTT", "DTT");
            feature.AddKnownType("System.DateTimeParse+TM", "TM");
            feature.AddKnownType("System.DateTimeParse+DS", "DS");
            feature.AddKnownType("System.__DTString", "__DTString");
            feature.AddKnownType("System.DTSubStringType", "DTSubStringType");
            feature.AddKnownType("System.DTSubString", "DTSubString");
            feature.AddKnownType("System.DateTimeToken", "DateTimeToken");
            feature.AddKnownType("System.DateTimeRawInfo", "DateTimeRawInfo");
            feature.AddKnownType("System.ParseFailureKind", "ParseFailureKind");
            feature.AddKnownType("System.ParseFlags", "ParseFlags");
            feature.AddKnownType("System.DateTimeResult", "DateTimeResult");
            feature.AddKnownType("System.ParsingInfo", "ParsingInfo");
            feature.AddKnownType("System.TokenType", "TokenType");
            feature.AddKnownType("System.CompatibilityFlag", "CompatibilityFlag");
            feature.AddKnownType("System.Collections.CaseInsensitiveComparer", "CaseInsensitiveComparer");
            feature.AddKnownType("System.Collections.CaseInsensitiveHashCodeProvider", "CaseInsensitiveHashCodeProvider");
            feature.AddKnownType("System.Collections.CollectionBase", "CollectionBase");
            feature.AddKnownType("System.Collections.DictionaryBase", "DictionaryBase");
            feature.AddKnownType("System.Collections.ReadOnlyCollectionBase", "ReadOnlyCollectionBase");
            feature.AddKnownType("System.Collections.Queue", "Queue");
            feature.AddKnownType("System.Collections.Queue+QueueDebugView", "QueueDebugView");
            feature.AddKnownType("System.Collections.ArrayList", "ArrayList");
            feature.AddKnownType("System.Collections.ArrayList+ArrayListDebugView", "ArrayListDebugView");
            feature.AddKnownType("System.Collections.BitArray", "BitArray");
            feature.AddKnownType("System.Collections.Stack", "Stack");
            feature.AddKnownType("System.Collections.Stack+StackDebugView", "StackDebugView");
            feature.AddKnownType("System.Collections.Comparer", "Comparer");
            feature.AddKnownType("System.Collections.CompatibleComparer", "CompatibleComparer");
            feature.AddKnownType("System.Collections.ListDictionaryInternal", "ListDictionaryInternal");
            feature.AddKnownType("System.Collections.EmptyReadOnlyDictionaryInternal", "EmptyReadOnlyDictionaryInternal");
            feature.AddKnownType("System.Collections.Hashtable", "Hashtable");
            feature.AddKnownType("System.Collections.Hashtable+HashtableDebugView", "HashtableDebugView");
            feature.AddKnownType("System.Collections.DictionaryEntry", "DictionaryEntry");
            feature.AddKnownType("System.Collections.ICollection", "ICollection");
            feature.AddKnownType("System.Collections.IComparer", "IComparer");
            feature.AddKnownType("System.Collections.IDictionary", "IDictionary");
            feature.AddKnownType("System.Collections.IDictionaryEnumerator", "IDictionaryEnumerator");
            feature.AddKnownType("System.Collections.IEqualityComparer", "IEqualityComparer");
            feature.AddKnownType("System.Collections.IHashCodeProvider", "IHashCodeProvider");
            feature.AddKnownType("System.Collections.IList", "IList");
            feature.AddKnownType("System.Collections.KeyValuePairs", "KeyValuePairs");
            feature.AddKnownType("System.Collections.SortedList", "SortedList");
            feature.AddKnownType("System.Collections.SortedList+SortedListDebugView", "SortedListDebugView");
            feature.AddKnownType("System.Collections.IStructuralEquatable", "IStructuralEquatable");
            feature.AddKnownType("System.Collections.IStructuralComparable", "IStructuralComparable");
            feature.AddKnownType("System.Collections.StructuralEqualityComparer", "StructuralEqualityComparer");
            feature.AddKnownType("System.Collections.StructuralComparer", "StructuralComparer");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentStack`1", "ConcurrentStack`1'1");
            feature.AddKnownType("System.Collections.Concurrent.IProducerConsumerCollection`1", "IProducerConsumerCollection`1'1");
            feature.AddKnownType("System.Collections.Concurrent.SystemCollectionsConcurrent_ProducerConsumerCollectionDebugView`1", "SystemCollectionsConcurrent_ProducerConsumerCollectionDebugView`1'1");
            feature.AddKnownType("System.Collections.Concurrent.CDSCollectionETWBCLProvider", "CDSCollectionETWBCLProvider");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentDictionary`2", "ConcurrentDictionary`2'2");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentQueue`1", "ConcurrentQueue`1'1");
            feature.AddKnownType("System.Collections.Concurrent.VolatileBool", "VolatileBool");
            feature.AddKnownType("System.Collections.Concurrent.Partitioner`1", "Partitioner`1'1");
            feature.AddKnownType("System.Collections.Concurrent.OrderablePartitioner`1", "OrderablePartitioner`1'1");
            feature.AddKnownType("System.Collections.Concurrent.EnumerablePartitionerOptions", "EnumerablePartitionerOptions");
            feature.AddKnownType("System.Collections.Generic.Comparer`1", "Comparer`1'1");
            feature.AddKnownType("System.Collections.Generic.GenericComparer`1", "GenericComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.NullableComparer`1", "NullableComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.ObjectComparer`1", "ObjectComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.ComparisonComparer`1", "ComparisonComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2", "Dictionary`2'2");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2+Enumerator", "Dictionary`2'2.Enumerator'2");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2+KeyCollection", "Dictionary`2'2.KeyCollection'2");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2+KeyCollection+Enumerator", "Dictionary`2'2.KeyCollection'2.Enumerator'2");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2+ValueCollection", "Dictionary`2'2.ValueCollection'2");
            feature.AddKnownType("System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator", "Dictionary`2'2.ValueCollection'2.Enumerator'2");
            feature.AddKnownType("System.Collections.Generic.EqualityComparer`1", "EqualityComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.GenericEqualityComparer`1", "GenericEqualityComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.NullableEqualityComparer`1", "NullableEqualityComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.ObjectEqualityComparer`1", "ObjectEqualityComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.ByteEqualityComparer", "ByteEqualityComparer");
            feature.AddKnownType("System.Collections.Generic.EnumEqualityComparer`1", "EnumEqualityComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.SByteEnumEqualityComparer`1", "SByteEnumEqualityComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.ShortEnumEqualityComparer`1", "ShortEnumEqualityComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.LongEnumEqualityComparer`1", "LongEnumEqualityComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.RandomizedStringEqualityComparer", "RandomizedStringEqualityComparer");
            feature.AddKnownType("System.Collections.Generic.RandomizedObjectEqualityComparer", "RandomizedObjectEqualityComparer");
            feature.AddKnownType("System.Collections.Generic.Mscorlib_CollectionDebugView`1", "Mscorlib_CollectionDebugView`1'1");
            feature.AddKnownType("System.Collections.Generic.Mscorlib_DictionaryKeyCollectionDebugView`2", "Mscorlib_DictionaryKeyCollectionDebugView`2'2");
            feature.AddKnownType("System.Collections.Generic.Mscorlib_DictionaryValueCollectionDebugView`2", "Mscorlib_DictionaryValueCollectionDebugView`2'2");
            feature.AddKnownType("System.Collections.Generic.Mscorlib_DictionaryDebugView`2", "Mscorlib_DictionaryDebugView`2'2");
            feature.AddKnownType("System.Collections.Generic.Mscorlib_KeyedCollectionDebugView`2", "Mscorlib_KeyedCollectionDebugView`2'2");
            feature.AddKnownType("System.Collections.Generic.IComparer`1", "IComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.IDictionary`2", "IDictionary`2'2");
            feature.AddKnownType("System.Collections.Generic.IEqualityComparer`1", "IEqualityComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.IReadOnlyDictionary`2", "IReadOnlyDictionary`2'2");
            feature.AddKnownType("System.Collections.Generic.KeyNotFoundException", "KeyNotFoundException");
            feature.AddKnownType("System.Collections.Generic.KeyValuePair`2", "KeyValuePair`2'2");
            feature.AddKnownType("System.Collections.Generic.List`1+SynchronizedList", "SynchronizedList'1");
            feature.AddKnownType("System.Collections.Generic.List`1+Enumerator", "List`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Generic.IArraySortHelper`1", "IArraySortHelper`1'1");
            feature.AddKnownType("System.Collections.Generic.IArraySortHelper`2", "IArraySortHelper`2'2");
            feature.AddKnownType("System.Collections.Generic.ArraySortHelper`1", "ArraySortHelper`1'1");
            feature.AddKnownType("System.Collections.Generic.ArraySortHelper`2", "ArraySortHelper`2'2");
            feature.AddKnownType("System.Collections.Generic.GenericArraySortHelper`1", "GenericArraySortHelper`1'1");
            feature.AddKnownType("System.Collections.Generic.GenericArraySortHelper`2", "GenericArraySortHelper`2'2");
            feature.AddKnownType("System.Collections.ObjectModel.Collection`1", "Collection`1'1");
            feature.AddKnownType("System.Collections.ObjectModel.ReadOnlyCollection`1", "ReadOnlyCollection`1'1");
            feature.AddKnownType("System.Collections.ObjectModel.ReadOnlyDictionary`2", "ReadOnlyDictionary`2'2");
            feature.AddKnownType("System.Collections.ObjectModel.ReadOnlyDictionary`2+KeyCollection", "ReadOnlyDictionary`2'2.KeyCollection'2");
            feature.AddKnownType("System.Collections.ObjectModel.ReadOnlyDictionary`2+ValueCollection", "ReadOnlyDictionary`2'2.ValueCollection'2");
            feature.AddKnownType("System.Collections.ObjectModel.KeyedCollection`2", "KeyedCollection`2'2");
            feature.AddKnownType("System.Configuration.Assemblies.AssemblyHash", "AssemblyHash");
            feature.AddKnownType("System.Configuration.Assemblies.AssemblyHashAlgorithm", "AssemblyHashAlgorithm");
            feature.AddKnownType("System.Configuration.Assemblies.AssemblyVersionCompatibility", "AssemblyVersionCompatibility");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ISection", "ISection");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ISectionWithStringKey", "ISectionWithStringKey");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ISectionWithReferenceIdentityKey", "ISectionWithReferenceIdentityKey");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ISectionEntry", "ISectionEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumUnknown", "IEnumUnknown");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ICDF", "ICDF");
            feature.AddKnownType("System.Deployment.Internal.Isolation.BLOB", "BLOB");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IDENTITY_ATTRIBUTE", "IDENTITY_ATTRIBUTE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.STORE_ASSEMBLY_STATUS_FLAGS", "STORE_ASSEMBLY_STATUS_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.STORE_ASSEMBLY", "STORE_ASSEMBLY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.STORE_ASSEMBLY_FILE_STATUS_FLAGS", "STORE_ASSEMBLY_FILE_STATUS_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.STORE_ASSEMBLY_FILE", "STORE_ASSEMBLY_FILE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.STORE_CATEGORY", "STORE_CATEGORY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.STORE_CATEGORY_SUBCATEGORY", "STORE_CATEGORY_SUBCATEGORY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.STORE_CATEGORY_INSTANCE", "STORE_CATEGORY_INSTANCE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.CATEGORY", "CATEGORY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.CATEGORY_SUBCATEGORY", "CATEGORY_SUBCATEGORY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.CATEGORY_INSTANCE", "CATEGORY_INSTANCE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY_INSTALLATION_REFERENCE", "IEnumSTORE_ASSEMBLY_INSTALLATION_REFERENCE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_DEPLOYMENT_METADATA", "IEnumSTORE_DEPLOYMENT_METADATA");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreDeploymentMetadataEnumeration", "StoreDeploymentMetadataEnumeration");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_DEPLOYMENT_METADATA_PROPERTY", "IEnumSTORE_DEPLOYMENT_METADATA_PROPERTY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreDeploymentMetadataPropertyEnumeration", "StoreDeploymentMetadataPropertyEnumeration");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY", "IEnumSTORE_ASSEMBLY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreAssemblyEnumeration", "StoreAssemblyEnumeration");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY_FILE", "IEnumSTORE_ASSEMBLY_FILE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreAssemblyFileEnumeration", "StoreAssemblyFileEnumeration");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY", "IEnumSTORE_CATEGORY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreCategoryEnumeration", "StoreCategoryEnumeration");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY_SUBCATEGORY", "IEnumSTORE_CATEGORY_SUBCATEGORY");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreSubcategoryEnumeration", "StoreSubcategoryEnumeration");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY_INSTANCE", "IEnumSTORE_CATEGORY_INSTANCE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreCategoryInstanceEnumeration", "StoreCategoryInstanceEnumeration");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IReferenceIdentity", "IReferenceIdentity");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IDefinitionIdentity", "IDefinitionIdentity");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumIDENTITY_ATTRIBUTE", "IEnumIDENTITY_ATTRIBUTE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumDefinitionIdentity", "IEnumDefinitionIdentity");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IEnumReferenceIdentity", "IEnumReferenceIdentity");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IDefinitionAppId", "IDefinitionAppId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IReferenceAppId", "IReferenceAppId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IIDENTITYAUTHORITY_DEFINITION_IDENTITY_TO_TEXT_FLAGS", "IIDENTITYAUTHORITY_DEFINITION_IDENTITY_TO_TEXT_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IIDENTITYAUTHORITY_REFERENCE_IDENTITY_TO_TEXT_FLAGS", "IIDENTITYAUTHORITY_REFERENCE_IDENTITY_TO_TEXT_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IIDENTITYAUTHORITY_DOES_DEFINITION_MATCH_REFERENCE_FLAGS", "IIDENTITYAUTHORITY_DOES_DEFINITION_MATCH_REFERENCE_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IIdentityAuthority", "IIdentityAuthority");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IAPPIDAUTHORITY_ARE_DEFINITIONS_EQUAL_FLAGS", "IAPPIDAUTHORITY_ARE_DEFINITIONS_EQUAL_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IAPPIDAUTHORITY_ARE_REFERENCES_EQUAL_FLAGS", "IAPPIDAUTHORITY_ARE_REFERENCES_EQUAL_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IAppIdAuthority", "IAppIdAuthority");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ISTORE_BIND_REFERENCE_TO_ASSEMBLY_FLAGS", "ISTORE_BIND_REFERENCE_TO_ASSEMBLY_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ISTORE_ENUM_ASSEMBLIES_FLAGS", "ISTORE_ENUM_ASSEMBLIES_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.ISTORE_ENUM_FILES_FLAGS", "ISTORE_ENUM_FILES_FLAGS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationStageComponent", "StoreOperationStageComponent");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationStageComponent+OpFlags", "StoreOperationStageComponent.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationStageComponent+Disposition", "StoreOperationStageComponent.Disposition");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationStageComponentFile", "StoreOperationStageComponentFile");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationStageComponentFile+OpFlags", "StoreOperationStageComponentFile.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationStageComponentFile+Disposition", "StoreOperationStageComponentFile.Disposition");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreApplicationReference", "StoreApplicationReference");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreApplicationReference+RefFlags", "StoreApplicationReference.RefFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationPinDeployment", "StoreOperationPinDeployment");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationPinDeployment+OpFlags", "StoreOperationPinDeployment.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationPinDeployment+Disposition", "StoreOperationPinDeployment.Disposition");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment", "StoreOperationUnpinDeployment");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment+OpFlags", "StoreOperationUnpinDeployment.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment+Disposition", "StoreOperationUnpinDeployment.Disposition");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationInstallDeployment", "StoreOperationInstallDeployment");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationInstallDeployment+OpFlags", "StoreOperationInstallDeployment.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationInstallDeployment+Disposition", "StoreOperationInstallDeployment.Disposition");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment", "StoreOperationUninstallDeployment");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment+OpFlags", "StoreOperationUninstallDeployment.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment+Disposition", "StoreOperationUninstallDeployment.Disposition");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationMetadataProperty", "StoreOperationMetadataProperty");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata", "StoreOperationSetDeploymentMetadata");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata+OpFlags", "StoreOperationSetDeploymentMetadata.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata+Disposition", "StoreOperationSetDeploymentMetadata.Disposition");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationSetCanonicalizationContext", "StoreOperationSetCanonicalizationContext");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationSetCanonicalizationContext+OpFlags", "StoreOperationSetCanonicalizationContext.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationScavenge", "StoreOperationScavenge");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreOperationScavenge+OpFlags", "StoreOperationScavenge.OpFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreTransactionOperationType", "StoreTransactionOperationType");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreTransactionOperation", "StoreTransactionOperation");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreTransactionData", "StoreTransactionData");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store", "Store");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+EnumAssembliesFlags", "Store.EnumAssembliesFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+EnumAssemblyFilesFlags", "Store.EnumAssemblyFilesFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+EnumApplicationPrivateFiles", "Store.EnumApplicationPrivateFiles");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+EnumAssemblyInstallReferenceFlags", "Store.EnumAssemblyInstallReferenceFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+IPathLock", "Store.IPathLock");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+EnumCategoriesFlags", "Store.EnumCategoriesFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+EnumSubcategoriesFlags", "Store.EnumSubcategoriesFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+EnumCategoryInstancesFlags", "Store.EnumCategoryInstancesFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Store+GetPackagePropertyFlags", "Store.GetPackagePropertyFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IStore_BindingResult_BoundVersion", "IStore_BindingResult_BoundVersion");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IStore_BindingResult", "IStore_BindingResult");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IStore", "IStore");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StoreTransaction", "StoreTransaction");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IManifestParseErrorCallback", "IManifestParseErrorCallback");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParameters", "CreateActContextParameters");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParameters+CreateFlags", "CreateActContextParameters.CreateFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSource", "CreateActContextParametersSource");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSource+SourceFlags", "CreateActContextParametersSource.SourceFlags");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSourceDefinitionAppid", "CreateActContextParametersSourceDefinitionAppid");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IManifestInformation", "IManifestInformation");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IActContext", "IActContext");
            feature.AddKnownType("System.Deployment.Internal.Isolation.StateManager_RunningState", "StateManager_RunningState");
            feature.AddKnownType("System.Deployment.Internal.Isolation.IStateManager", "IStateManager");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMSSECTIONID", "CMSSECTIONID");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_ASSEMBLY_DEPLOYMENT_FLAG", "CMS_ASSEMBLY_DEPLOYMENT_FLAG");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_ASSEMBLY_REFERENCE_FLAG", "CMS_ASSEMBLY_REFERENCE_FLAG");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_ASSEMBLY_REFERENCE_DEPENDENT_ASSEMBLY_FLAG", "CMS_ASSEMBLY_REFERENCE_DEPENDENT_ASSEMBLY_FLAG");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_FILE_FLAG", "CMS_FILE_FLAG");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_ENTRY_POINT_FLAG", "CMS_ENTRY_POINT_FLAG");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_COM_SERVER_FLAG", "CMS_COM_SERVER_FLAG");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_USAGE_PATTERN", "CMS_USAGE_PATTERN");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_SCHEMA_VERSION", "CMS_SCHEMA_VERSION");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_FILE_HASH_ALGORITHM", "CMS_FILE_HASH_ALGORITHM");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_TIME_UNIT_TYPE", "CMS_TIME_UNIT_TYPE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_FILE_WRITABLE_TYPE", "CMS_FILE_WRITABLE_TYPE");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_TRANSFORM", "CMS_HASH_TRANSFORM");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_DIGESTMETHOD", "CMS_HASH_DIGESTMETHOD");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ICMS", "ICMS");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceIdLookupMapEntry", "MuiResourceIdLookupMapEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceIdLookupMapEntryFieldId", "MuiResourceIdLookupMapEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IMuiResourceIdLookupMapEntry", "IMuiResourceIdLookupMapEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdStringEntry", "MuiResourceTypeIdStringEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdStringEntryFieldId", "MuiResourceTypeIdStringEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IMuiResourceTypeIdStringEntry", "IMuiResourceTypeIdStringEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdIntEntry", "MuiResourceTypeIdIntEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdIntEntryFieldId", "MuiResourceTypeIdIntEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IMuiResourceTypeIdIntEntry", "IMuiResourceTypeIdIntEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceMapEntry", "MuiResourceMapEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MuiResourceMapEntryFieldId", "MuiResourceMapEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IMuiResourceMapEntry", "IMuiResourceMapEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.HashElementEntry", "HashElementEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.HashElementEntryFieldId", "HashElementEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IHashElementEntry", "IHashElementEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.FileEntry", "FileEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.FileEntryFieldId", "FileEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IFileEntry", "IFileEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.FileAssociationEntry", "FileAssociationEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.FileAssociationEntryFieldId", "FileAssociationEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IFileAssociationEntry", "IFileAssociationEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CategoryMembershipDataEntry", "CategoryMembershipDataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CategoryMembershipDataEntryFieldId", "CategoryMembershipDataEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ICategoryMembershipDataEntry", "ICategoryMembershipDataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.SubcategoryMembershipEntry", "SubcategoryMembershipEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.SubcategoryMembershipEntryFieldId", "SubcategoryMembershipEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ISubcategoryMembershipEntry", "ISubcategoryMembershipEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CategoryMembershipEntry", "CategoryMembershipEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CategoryMembershipEntryFieldId", "CategoryMembershipEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ICategoryMembershipEntry", "ICategoryMembershipEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.COMServerEntry", "COMServerEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.COMServerEntryFieldId", "COMServerEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ICOMServerEntry", "ICOMServerEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ProgIdRedirectionEntry", "ProgIdRedirectionEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ProgIdRedirectionEntryFieldId", "ProgIdRedirectionEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IProgIdRedirectionEntry", "IProgIdRedirectionEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CLRSurrogateEntry", "CLRSurrogateEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CLRSurrogateEntryFieldId", "CLRSurrogateEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ICLRSurrogateEntry", "ICLRSurrogateEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceDependentAssemblyEntry", "AssemblyReferenceDependentAssemblyEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceDependentAssemblyEntryFieldId", "AssemblyReferenceDependentAssemblyEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IAssemblyReferenceDependentAssemblyEntry", "IAssemblyReferenceDependentAssemblyEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceEntry", "AssemblyReferenceEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceEntryFieldId", "AssemblyReferenceEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IAssemblyReferenceEntry", "IAssemblyReferenceEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.WindowClassEntry", "WindowClassEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.WindowClassEntryFieldId", "WindowClassEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IWindowClassEntry", "IWindowClassEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ResourceTableMappingEntry", "ResourceTableMappingEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ResourceTableMappingEntryFieldId", "ResourceTableMappingEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IResourceTableMappingEntry", "IResourceTableMappingEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.EntryPointEntry", "EntryPointEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.EntryPointEntryFieldId", "EntryPointEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IEntryPointEntry", "IEntryPointEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.PermissionSetEntry", "PermissionSetEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.PermissionSetEntryFieldId", "PermissionSetEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IPermissionSetEntry", "IPermissionSetEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.AssemblyRequestEntry", "AssemblyRequestEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.AssemblyRequestEntryFieldId", "AssemblyRequestEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IAssemblyRequestEntry", "IAssemblyRequestEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.DescriptionMetadataEntry", "DescriptionMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.DescriptionMetadataEntryFieldId", "DescriptionMetadataEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IDescriptionMetadataEntry", "IDescriptionMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.DeploymentMetadataEntry", "DeploymentMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.DeploymentMetadataEntryFieldId", "DeploymentMetadataEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IDeploymentMetadataEntry", "IDeploymentMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.DependentOSMetadataEntry", "DependentOSMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.DependentOSMetadataEntryFieldId", "DependentOSMetadataEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IDependentOSMetadataEntry", "IDependentOSMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworksMetadataEntry", "CompatibleFrameworksMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworksMetadataEntryFieldId", "CompatibleFrameworksMetadataEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.ICompatibleFrameworksMetadataEntry", "ICompatibleFrameworksMetadataEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MetadataSectionEntry", "MetadataSectionEntry");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.MetadataSectionEntryFieldId", "MetadataSectionEntryFieldId");
            feature.AddKnownType("System.Deployment.Internal.Isolation.Manifest.IMetadataSectionEntry", "IMetadataSectionEntry");
            feature.AddKnownType("System.Diagnostics.AssertFilter", "AssertFilter");
            feature.AddKnownType("System.Diagnostics.DefaultFilter", "DefaultFilter");
            feature.AddKnownType("System.Diagnostics.AssertFilters", "AssertFilters");
            feature.AddKnownType("System.Diagnostics.ConditionalAttribute", "ConditionalAttribute");
            feature.AddKnownType("System.Diagnostics.Debugger", "Debugger");
            feature.AddKnownType("System.Diagnostics.DebuggerStepThroughAttribute", "DebuggerStepThroughAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerStepperBoundaryAttribute", "DebuggerStepperBoundaryAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerHiddenAttribute", "DebuggerHiddenAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerNonUserCodeAttribute", "DebuggerNonUserCodeAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggableAttribute", "DebuggableAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggableAttribute+DebuggingModes", "DebuggableAttribute.DebuggingModes");
            feature.AddKnownType("System.Diagnostics.DebuggerBrowsableState", "DebuggerBrowsableState");
            feature.AddKnownType("System.Diagnostics.DebuggerBrowsableAttribute", "DebuggerBrowsableAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerTypeProxyAttribute", "DebuggerTypeProxyAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerDisplayAttribute", "DebuggerDisplayAttribute");
            feature.AddKnownType("System.Diagnostics.DebuggerVisualizerAttribute", "DebuggerVisualizerAttribute");
            feature.AddKnownType("System.Diagnostics.ICustomDebuggerNotification", "ICustomDebuggerNotification");
            feature.AddKnownType("System.Diagnostics.LoggingLevels", "LoggingLevels");
            feature.AddKnownType("System.Diagnostics.LogSwitch", "LogSwitch");
            feature.AddKnownType("System.Diagnostics.StackFrameHelper", "StackFrameHelper");
            feature.AddKnownType("System.Diagnostics.StackTrace", "StackTrace");
            feature.AddKnownType("System.Diagnostics.StackTrace+TraceFormat", "TraceFormat");
            feature.AddKnownType("System.Diagnostics.StackFrame", "StackFrame");
            feature.AddKnownType("System.Diagnostics.EditAndContinueHelper", "EditAndContinueHelper");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute", "SuppressMessageAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.PureAttribute", "PureAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractClassAttribute", "ContractClassAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractClassForAttribute", "ContractClassForAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractInvariantMethodAttribute", "ContractInvariantMethodAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractReferenceAssemblyAttribute", "ContractReferenceAssemblyAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractRuntimeIgnoredAttribute", "ContractRuntimeIgnoredAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractVerificationAttribute", "ContractVerificationAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractPublicPropertyNameAttribute", "ContractPublicPropertyNameAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractArgumentValidatorAttribute", "ContractArgumentValidatorAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractAbbreviatorAttribute", "ContractAbbreviatorAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractOptionAttribute", "ContractOptionAttribute");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractFailureKind", "ContractFailureKind");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractFailedEventArgs", "ContractFailedEventArgs");
            feature.AddKnownType("System.Diagnostics.Contracts.ContractException", "ContractException");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolBinder", "ISymbolBinder");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolBinder1", "ISymbolBinder1");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolDocument", "ISymbolDocument");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolDocumentWriter", "ISymbolDocumentWriter");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolMethod", "ISymbolMethod");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolNamespace", "ISymbolNamespace");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolReader", "ISymbolReader");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolScope", "ISymbolScope");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolVariable", "ISymbolVariable");
            feature.AddKnownType("System.Diagnostics.SymbolStore.ISymbolWriter", "ISymbolWriter");
            feature.AddKnownType("System.Diagnostics.SymbolStore.SymAddressKind", "SymAddressKind");
            feature.AddKnownType("System.Diagnostics.SymbolStore.SymDocumentType", "SymDocumentType");
            feature.AddKnownType("System.Diagnostics.SymbolStore.SymLanguageType", "SymLanguageType");
            feature.AddKnownType("System.Diagnostics.SymbolStore.SymLanguageVendor", "SymLanguageVendor");
            feature.AddKnownType("System.Diagnostics.SymbolStore.SymbolToken", "SymbolToken");
            feature.AddKnownType("System.Diagnostics.Tracing.ActivityTracker", "ActivityTracker");
            feature.AddKnownType("System.Diagnostics.Tracing.EventActivityOptions", "EventActivityOptions");
            feature.AddKnownType("System.Diagnostics.Tracing.EventDescriptor", "EventDescriptor");
            feature.AddKnownType("System.Diagnostics.Tracing.ControllerCommand", "ControllerCommand");
            feature.AddKnownType("System.Diagnostics.Tracing.EventProvider", "EventProvider");
            feature.AddKnownType("System.Diagnostics.Tracing.EventProvider+EventData", "EventProvider.EventData");
            feature.AddKnownType("System.Diagnostics.Tracing.EventProvider+SessionInfo", "EventProvider.SessionInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.EventProvider+WriteEventErrorCode", "EventProvider.WriteEventErrorCode");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSource", "EventSource");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSource+EventData", "EventData");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSource+EventMetadata", "EventMetadata");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceSettings", "EventSourceSettings");
            feature.AddKnownType("System.Diagnostics.Tracing.EventListener", "EventListener");
            feature.AddKnownType("System.Diagnostics.Tracing.EventCommandEventArgs", "EventCommandEventArgs");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceCreatedEventArgs", "EventSourceCreatedEventArgs");
            feature.AddKnownType("System.Diagnostics.Tracing.EventWrittenEventArgs", "EventWrittenEventArgs");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceAttribute", "EventSourceAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventAttribute", "EventAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.NonEventAttribute", "NonEventAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventChannelAttribute", "EventChannelAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventChannelType", "EventChannelType");
            feature.AddKnownType("System.Diagnostics.Tracing.EventCommand", "EventCommand");
            feature.AddKnownType("System.Diagnostics.Tracing.ActivityFilter", "ActivityFilter");
            feature.AddKnownType("System.Diagnostics.Tracing.EtwSession", "EtwSession");
            feature.AddKnownType("System.Diagnostics.Tracing.SessionMask", "SessionMask");
            feature.AddKnownType("System.Diagnostics.Tracing.EventDispatcher", "EventDispatcher");
            feature.AddKnownType("System.Diagnostics.Tracing.EventManifestOptions", "EventManifestOptions");
            feature.AddKnownType("System.Diagnostics.Tracing.ManifestBuilder", "ManifestBuilder");
            feature.AddKnownType("System.Diagnostics.Tracing.ManifestEnvelope", "ManifestEnvelope");
            feature.AddKnownType("System.Diagnostics.Tracing.ManifestEnvelope+ManifestFormats", "ManifestEnvelope.ManifestFormats");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceException", "EventSourceException");
            feature.AddKnownType("System.Diagnostics.Tracing.FrameworkEventSource", "FrameworkEventSource");
            feature.AddKnownType("System.Diagnostics.Tracing.EventLevel", "EventLevel");
            feature.AddKnownType("System.Diagnostics.Tracing.EventTask", "EventTask");
            feature.AddKnownType("System.Diagnostics.Tracing.EventOpcode", "EventOpcode");
            feature.AddKnownType("System.Diagnostics.Tracing.EventChannel", "EventChannel");
            feature.AddKnownType("System.Diagnostics.Tracing.EventKeywords", "EventKeywords");
            feature.AddKnownType("System.Diagnostics.Tracing.ArrayTypeInfo`1", "ArrayTypeInfo`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.ConcurrentSet`2", "ConcurrentSet`2'2");
            feature.AddKnownType("System.Diagnostics.Tracing.ConcurrentSetItem`2", "ConcurrentSetItem`2'2");
            feature.AddKnownType("System.Diagnostics.Tracing.DataCollector", "DataCollector");
            feature.AddKnownType("System.Diagnostics.Tracing.EmptyStruct", "EmptyStruct");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumerableTypeInfo`2", "EnumerableTypeInfo`2'2");
            feature.AddKnownType("System.Diagnostics.Tracing.EventDataAttribute", "EventDataAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventFieldTags", "EventFieldTags");
            feature.AddKnownType("System.Diagnostics.Tracing.EventFieldAttribute", "EventFieldAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventFieldFormat", "EventFieldFormat");
            feature.AddKnownType("System.Diagnostics.Tracing.EventIgnoreAttribute", "EventIgnoreAttribute");
            feature.AddKnownType("System.Diagnostics.Tracing.EventPayload", "EventPayload");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceActivity", "EventSourceActivity");
            feature.AddKnownType("System.Diagnostics.Tracing.EventSourceOptions", "EventSourceOptions");
            feature.AddKnownType("System.Diagnostics.Tracing.FieldMetadata", "FieldMetadata");
            feature.AddKnownType("System.Diagnostics.Tracing.InvokeTypeInfo`1", "InvokeTypeInfo`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.NameInfo", "NameInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.PropertyAccessor`1", "PropertyAccessor`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.NonGenericProperytWriter`1", "NonGenericProperytWriter`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.StructPropertyWriter`2", "StructPropertyWriter`2'2");
            feature.AddKnownType("System.Diagnostics.Tracing.ClassPropertyWriter`2", "ClassPropertyWriter`2'2");
            feature.AddKnownType("System.Diagnostics.Tracing.PropertyAnalysis", "PropertyAnalysis");
            feature.AddKnownType("System.Diagnostics.Tracing.SimpleEventTypes`1", "SimpleEventTypes`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.NullTypeInfo`1", "NullTypeInfo`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.BooleanTypeInfo", "BooleanTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.ByteTypeInfo", "ByteTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.SByteTypeInfo", "SByteTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.Int16TypeInfo", "Int16TypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UInt16TypeInfo", "UInt16TypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.Int32TypeInfo", "Int32TypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UInt32TypeInfo", "UInt32TypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.Int64TypeInfo", "Int64TypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UInt64TypeInfo", "UInt64TypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.IntPtrTypeInfo", "IntPtrTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UIntPtrTypeInfo", "UIntPtrTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.DoubleTypeInfo", "DoubleTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.SingleTypeInfo", "SingleTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.CharTypeInfo", "CharTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.BooleanArrayTypeInfo", "BooleanArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.ByteArrayTypeInfo", "ByteArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.SByteArrayTypeInfo", "SByteArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.Int16ArrayTypeInfo", "Int16ArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UInt16ArrayTypeInfo", "UInt16ArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.Int32ArrayTypeInfo", "Int32ArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UInt32ArrayTypeInfo", "UInt32ArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.Int64ArrayTypeInfo", "Int64ArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UInt64ArrayTypeInfo", "UInt64ArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.IntPtrArrayTypeInfo", "IntPtrArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.UIntPtrArrayTypeInfo", "UIntPtrArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.CharArrayTypeInfo", "CharArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.DoubleArrayTypeInfo", "DoubleArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.SingleArrayTypeInfo", "SingleArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumByteTypeInfo`1", "EnumByteTypeInfo`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumSByteTypeInfo`1", "EnumSByteTypeInfo`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumInt16TypeInfo`1", "EnumInt16TypeInfo`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumUInt16TypeInfo`1", "EnumUInt16TypeInfo`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumInt32TypeInfo`1", "EnumInt32TypeInfo`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumUInt32TypeInfo`1", "EnumUInt32TypeInfo`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumInt64TypeInfo`1", "EnumInt64TypeInfo`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.EnumUInt64TypeInfo`1", "EnumUInt64TypeInfo`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.StringTypeInfo", "StringTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.GuidTypeInfo", "GuidTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.GuidArrayTypeInfo", "GuidArrayTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.DateTimeTypeInfo", "DateTimeTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.DateTimeOffsetTypeInfo", "DateTimeOffsetTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.TimeSpanTypeInfo", "TimeSpanTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.DecimalTypeInfo", "DecimalTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.KeyValuePairTypeInfo`2", "KeyValuePairTypeInfo`2'2");
            feature.AddKnownType("System.Diagnostics.Tracing.NullableTypeInfo`1", "NullableTypeInfo`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.TraceLoggingDataCollector", "TraceLoggingDataCollector");
            feature.AddKnownType("System.Diagnostics.Tracing.TraceLoggingDataType", "TraceLoggingDataType");
            feature.AddKnownType("System.Diagnostics.Tracing.EventTags", "EventTags");
            feature.AddKnownType("System.Diagnostics.Tracing.TraceLoggingEventTypes", "TraceLoggingEventTypes");
            feature.AddKnownType("System.Diagnostics.Tracing.TraceLoggingMetadataCollector", "TraceLoggingMetadataCollector");
            feature.AddKnownType("System.Diagnostics.Tracing.TraceLoggingTypeInfo", "TraceLoggingTypeInfo");
            feature.AddKnownType("System.Diagnostics.Tracing.TraceLoggingTypeInfo`1", "TraceLoggingTypeInfo`1'1");
            feature.AddKnownType("System.Diagnostics.Tracing.TypeAnalysis", "TypeAnalysis");
            feature.AddKnownType("System.Globalization.AppDomainSortingSetupInfo", "AppDomainSortingSetupInfo");
            feature.AddKnownType("System.Globalization.BidiCategory", "BidiCategory");
            feature.AddKnownType("System.Globalization.Calendar", "Calendar");
            feature.AddKnownType("System.Globalization.CalendarData", "CalendarData");
            feature.AddKnownType("System.Globalization.CalendarAlgorithmType", "CalendarAlgorithmType");
            feature.AddKnownType("System.Globalization.CalendarWeekRule", "CalendarWeekRule");
            feature.AddKnownType("System.Globalization.CharUnicodeInfo+UnicodeDataHeader", "UnicodeDataHeader");
            feature.AddKnownType("System.Globalization.CharUnicodeInfo+DigitValues", "DigitValues");
            feature.AddKnownType("System.Globalization.CompareOptions", "CompareOptions");
            feature.AddKnownType("System.Globalization.CompareInfo", "CompareInfo");
            feature.AddKnownType("System.Globalization.CultureInfo", "CultureInfo");
            feature.AddKnownType("System.Globalization.CultureNotFoundException", "CultureNotFoundException");
            feature.AddKnownType("System.Globalization.CultureTypes", "CultureTypes");
            feature.AddKnownType("System.Globalization.DateTimeStyles", "DateTimeStyles");
            feature.AddKnownType("System.Globalization.MonthNameStyles", "MonthNameStyles");
            feature.AddKnownType("System.Globalization.DateTimeFormatFlags", "DateTimeFormatFlags");
            feature.AddKnownType("System.Globalization.DateTimeFormatInfo", "DateTimeFormatInfo");
            feature.AddKnownType("System.Globalization.TokenHashValue", "TokenHashValue");
            feature.AddKnownType("System.Globalization.FORMATFLAGS", "FORMATFLAGS");
            feature.AddKnownType("System.Globalization.CalendarId", "CalendarId");
            feature.AddKnownType("System.Globalization.DateTimeFormatInfoScanner", "DateTimeFormatInfoScanner");
            feature.AddKnownType("System.Globalization.DaylightTime", "DaylightTime");
            feature.AddKnownType("System.Globalization.DaylightTimeStruct", "DaylightTimeStruct");
            feature.AddKnownType("System.Globalization.DigitShapes", "DigitShapes");
            feature.AddKnownType("System.Globalization.CodePageDataItem", "CodePageDataItem");
            feature.AddKnownType("System.Globalization.InternalEncodingDataItem", "InternalEncodingDataItem");
            feature.AddKnownType("System.Globalization.InternalCodePageDataItem", "InternalCodePageDataItem");
            feature.AddKnownType("System.Globalization.GlobalizationAssembly", "GlobalizationAssembly");
            feature.AddKnownType("System.Globalization.GregorianCalendar", "GregorianCalendar");
            feature.AddKnownType("System.Globalization.GregorianCalendarTypes", "GregorianCalendarTypes");
            feature.AddKnownType("System.Globalization.EraInfo", "EraInfo");
            feature.AddKnownType("System.Globalization.GregorianCalendarHelper", "GregorianCalendarHelper");
            feature.AddKnownType("System.Globalization.HebrewCalendar", "HebrewCalendar");
            feature.AddKnownType("System.Globalization.HebrewCalendar+__DateBuffer", "__DateBuffer");
            feature.AddKnownType("System.Globalization.HijriCalendar", "HijriCalendar");
            feature.AddKnownType("System.Globalization.UmAlQuraCalendar", "UmAlQuraCalendar");
            feature.AddKnownType("System.Globalization.UmAlQuraCalendar+DateMapping", "DateMapping");
            feature.AddKnownType("System.Globalization.ChineseLunisolarCalendar", "ChineseLunisolarCalendar");
            feature.AddKnownType("System.Globalization.EastAsianLunisolarCalendar", "EastAsianLunisolarCalendar");
            feature.AddKnownType("System.Globalization.JapaneseLunisolarCalendar", "JapaneseLunisolarCalendar");
            feature.AddKnownType("System.Globalization.JulianCalendar", "JulianCalendar");
            feature.AddKnownType("System.Globalization.KoreanLunisolarCalendar", "KoreanLunisolarCalendar");
            feature.AddKnownType("System.Globalization.PersianCalendar", "PersianCalendar");
            feature.AddKnownType("System.Globalization.CalendricalCalculationsHelper", "CalendricalCalculationsHelper");
            feature.AddKnownType("System.Globalization.TaiwanLunisolarCalendar", "TaiwanLunisolarCalendar");
            feature.AddKnownType("System.Globalization.IdnMapping", "IdnMapping");
            feature.AddKnownType("System.Globalization.JapaneseCalendar", "JapaneseCalendar");
            feature.AddKnownType("System.Globalization.KoreanCalendar", "KoreanCalendar");
            feature.AddKnownType("System.Globalization.RegionInfo", "RegionInfo");
            feature.AddKnownType("System.Globalization.SortKey", "SortKey");
            feature.AddKnownType("System.Globalization.StringInfo", "StringInfo");
            feature.AddKnownType("System.Globalization.TaiwanCalendar", "TaiwanCalendar");
            feature.AddKnownType("System.Globalization.TextElementEnumerator", "TextElementEnumerator");
            feature.AddKnownType("System.Globalization.TextInfo", "TextInfo");
            feature.AddKnownType("System.Globalization.ThaiBuddhistCalendar", "ThaiBuddhistCalendar");
            feature.AddKnownType("System.Globalization.TimeSpanFormat+Pattern", "Pattern");
            feature.AddKnownType("System.Globalization.TimeSpanFormat+FormatLiterals", "FormatLiterals");
            feature.AddKnownType("System.Globalization.TimeSpanStyles", "TimeSpanStyles");
            feature.AddKnownType("System.Globalization.NumberFormatInfo", "NumberFormatInfo");
            feature.AddKnownType("System.Globalization.NumberStyles", "NumberStyles");
            feature.AddKnownType("System.Globalization.UnicodeCategory", "UnicodeCategory");
            feature.AddKnownType("System.Globalization.CultureData", "CultureData");
            feature.AddKnownType("System.Globalization.HebrewNumberParsingContext", "HebrewNumberParsingContext");
            feature.AddKnownType("System.Globalization.HebrewNumberParsingState", "HebrewNumberParsingState");
            feature.AddKnownType("System.Globalization.HebrewNumber", "HebrewNumber");
            feature.AddKnownType("System.Globalization.HebrewNumber+HS", "HS");
            feature.AddKnownType("System.Globalization.SortVersion", "SortVersion");
            feature.AddKnownType("System.IO.__ConsoleStream", "__ConsoleStream");
            feature.AddKnownType("System.IO.BinaryReader", "BinaryReader");
            feature.AddKnownType("System.IO.BinaryWriter", "BinaryWriter");
            feature.AddKnownType("System.IO.BufferedStream", "BufferedStream");
            feature.AddKnownType("System.IO.Directory+SearchData", "SearchData");
            feature.AddKnownType("System.IO.DirectoryInfo", "DirectoryInfo");
            feature.AddKnownType("System.IO.SearchOption", "SearchOption");
            feature.AddKnownType("System.IO.DirectoryNotFoundException", "DirectoryNotFoundException");
            feature.AddKnownType("System.IO.DriveType", "DriveType");
            feature.AddKnownType("System.IO.DriveInfo", "DriveInfo");
            feature.AddKnownType("System.IO.DriveNotFoundException", "DriveNotFoundException");
            feature.AddKnownType("System.IO.EndOfStreamException", "EndOfStreamException");
            feature.AddKnownType("System.IO.FileAccess", "FileAccess");
            feature.AddKnownType("System.IO.FileInfo", "FileInfo");
            feature.AddKnownType("System.IO.FileLoadException", "FileLoadException");
            feature.AddKnownType("System.IO.FileMode", "FileMode");
            feature.AddKnownType("System.IO.FileNotFoundException", "FileNotFoundException");
            feature.AddKnownType("System.IO.FileOptions", "FileOptions");
            feature.AddKnownType("System.IO.FileSecurityStateAccess", "FileSecurityStateAccess");
            feature.AddKnownType("System.IO.FileShare", "FileShare");
            feature.AddKnownType("System.IO.FileStreamAsyncResult", "FileStreamAsyncResult");
            feature.AddKnownType("System.IO.FileStream", "FileStream");
            feature.AddKnownType("System.IO.Iterator`1", "Iterator`1'1");
            feature.AddKnownType("System.IO.FileSystemEnumerableIterator`1", "FileSystemEnumerableIterator`1'1");
            feature.AddKnownType("System.IO.SearchResultHandler`1", "SearchResultHandler`1'1");
            feature.AddKnownType("System.IO.StringResultHandler", "StringResultHandler");
            feature.AddKnownType("System.IO.FileInfoResultHandler", "FileInfoResultHandler");
            feature.AddKnownType("System.IO.DirectoryInfoResultHandler", "DirectoryInfoResultHandler");
            feature.AddKnownType("System.IO.FileSystemInfoResultHandler", "FileSystemInfoResultHandler");
            feature.AddKnownType("System.IO.FileSystemInfo", "FileSystemInfo");
            feature.AddKnownType("System.IO.FileAttributes", "FileAttributes");
            feature.AddKnownType("System.IO.IOException", "IOException");
            feature.AddKnownType("System.IO.LongPathHelper", "LongPathHelper");
            feature.AddKnownType("System.IO.MemoryStream", "MemoryStream");
            feature.AddKnownType("System.IO.PathHelper", "PathHelper");
            feature.AddKnownType("System.IO.PathTooLongException", "PathTooLongException");
            feature.AddKnownType("System.IO.PinnedBufferMemoryStream", "PinnedBufferMemoryStream");
            feature.AddKnownType("System.IO.ReadLinesIterator", "ReadLinesIterator");
            feature.AddKnownType("System.IO.SeekOrigin", "SeekOrigin");
            feature.AddKnownType("System.IO.Stream", "Stream");
            feature.AddKnownType("System.IO.Stream+SynchronousAsyncResult", "SynchronousAsyncResult");
            feature.AddKnownType("System.IO.Stream+SyncStream", "SyncStream");
            feature.AddKnownType("System.IO.StreamReader", "StreamReader");
            feature.AddKnownType("System.IO.StreamWriter", "StreamWriter");
            feature.AddKnownType("System.IO.StringReader", "StringReader");
            feature.AddKnownType("System.IO.StringWriter", "StringWriter");
            feature.AddKnownType("System.IO.TextReader", "TextReader");
            feature.AddKnownType("System.IO.TextReader+SyncTextReader", "SyncTextReader");
            feature.AddKnownType("System.IO.TextWriter", "TextWriter");
            feature.AddKnownType("System.IO.TextWriter+SyncTextWriter", "SyncTextWriter");
            feature.AddKnownType("System.IO.UnmanagedMemoryAccessor", "UnmanagedMemoryAccessor");
            feature.AddKnownType("System.IO.UnmanagedMemoryStream", "UnmanagedMemoryStream");
            feature.AddKnownType("System.IO.UnmanagedMemoryStreamWrapper", "UnmanagedMemoryStreamWrapper");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageScope", "IsolatedStorageScope");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorage", "IsolatedStorage");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageFileStream", "IsolatedStorageFileStream");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageException", "IsolatedStorageException");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageSecurityOptions", "IsolatedStorageSecurityOptions");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageSecurityState", "IsolatedStorageSecurityState");
            feature.AddKnownType("System.IO.IsolatedStorage.INormalizeForIsolatedStorage", "INormalizeForIsolatedStorage");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageFile", "IsolatedStorageFile");
            feature.AddKnownType("System.IO.IsolatedStorage.IsolatedStorageFileEnumerator", "IsolatedStorageFileEnumerator");
            feature.AddKnownType("System.IO.IsolatedStorage.SafeIsolatedStorageFileHandle", "SafeIsolatedStorageFileHandle");
            feature.AddKnownType("System.IO.IsolatedStorage.TwoPaths", "TwoPaths");
            feature.AddKnownType("System.IO.IsolatedStorage.TwoLevelFileEnumerator", "TwoLevelFileEnumerator");
            feature.AddKnownType("System.Reflection.CerHashtable`2", "CerHashtable`2'2");
            feature.AddKnownType("System.Reflection.CerHashtable`2+Table", "Table'2");
            feature.AddKnownType("System.Reflection.__Filters", "__Filters");
            feature.AddKnownType("System.Reflection.AmbiguousMatchException", "AmbiguousMatchException");
            feature.AddKnownType("System.Reflection.Assembly", "Assembly");
            feature.AddKnownType("System.Reflection.LoadContext", "LoadContext");
            feature.AddKnownType("System.Reflection.RuntimeAssembly", "RuntimeAssembly");
            feature.AddKnownType("System.Reflection.AssemblyCopyrightAttribute", "AssemblyCopyrightAttribute");
            feature.AddKnownType("System.Reflection.AssemblyTrademarkAttribute", "AssemblyTrademarkAttribute");
            feature.AddKnownType("System.Reflection.AssemblyProductAttribute", "AssemblyProductAttribute");
            feature.AddKnownType("System.Reflection.AssemblyCompanyAttribute", "AssemblyCompanyAttribute");
            feature.AddKnownType("System.Reflection.AssemblyDescriptionAttribute", "AssemblyDescriptionAttribute");
            feature.AddKnownType("System.Reflection.AssemblyTitleAttribute", "AssemblyTitleAttribute");
            feature.AddKnownType("System.Reflection.AssemblyConfigurationAttribute", "AssemblyConfigurationAttribute");
            feature.AddKnownType("System.Reflection.AssemblyDefaultAliasAttribute", "AssemblyDefaultAliasAttribute");
            feature.AddKnownType("System.Reflection.AssemblyInformationalVersionAttribute", "AssemblyInformationalVersionAttribute");
            feature.AddKnownType("System.Reflection.AssemblyFileVersionAttribute", "AssemblyFileVersionAttribute");
            feature.AddKnownType("System.Reflection.AssemblyCultureAttribute", "AssemblyCultureAttribute");
            feature.AddKnownType("System.Reflection.AssemblyVersionAttribute", "AssemblyVersionAttribute");
            feature.AddKnownType("System.Reflection.AssemblyKeyFileAttribute", "AssemblyKeyFileAttribute");
            feature.AddKnownType("System.Reflection.AssemblyDelaySignAttribute", "AssemblyDelaySignAttribute");
            feature.AddKnownType("System.Reflection.AssemblyAlgorithmIdAttribute", "AssemblyAlgorithmIdAttribute");
            feature.AddKnownType("System.Reflection.AssemblyFlagsAttribute", "AssemblyFlagsAttribute");
            feature.AddKnownType("System.Reflection.AssemblyMetadataAttribute", "AssemblyMetadataAttribute");
            feature.AddKnownType("System.Reflection.AssemblySignatureKeyAttribute", "AssemblySignatureKeyAttribute");
            feature.AddKnownType("System.Reflection.AssemblyKeyNameAttribute", "AssemblyKeyNameAttribute");
            feature.AddKnownType("System.Reflection.AssemblyName", "AssemblyName");
            feature.AddKnownType("System.Reflection.AssemblyNameProxy", "AssemblyNameProxy");
            feature.AddKnownType("System.Reflection.AssemblyNameFlags", "AssemblyNameFlags");
            feature.AddKnownType("System.Reflection.AssemblyContentType", "AssemblyContentType");
            feature.AddKnownType("System.Reflection.ProcessorArchitecture", "ProcessorArchitecture");
            feature.AddKnownType("System.Reflection.Associates+Attributes", "Attributes");
            feature.AddKnownType("System.Reflection.CustomAttributeFormatException", "CustomAttributeFormatException");
            feature.AddKnownType("System.Reflection.Binder", "Binder");
            feature.AddKnownType("System.Reflection.BindingFlags", "BindingFlags");
            feature.AddKnownType("System.Reflection.CallingConventions", "CallingConventions");
            feature.AddKnownType("System.Reflection.ConstructorInfo", "ConstructorInfo");
            feature.AddKnownType("System.Reflection.RuntimeConstructorInfo", "RuntimeConstructorInfo");
            feature.AddKnownType("System.Reflection.CustomAttributeData", "CustomAttributeData");
            feature.AddKnownType("System.Reflection.CustomAttributeNamedArgument", "CustomAttributeNamedArgument");
            feature.AddKnownType("System.Reflection.CustomAttributeTypedArgument", "CustomAttributeTypedArgument");
            feature.AddKnownType("System.Reflection.CustomAttributeRecord", "CustomAttributeRecord");
            feature.AddKnownType("System.Reflection.CustomAttributeEncoding", "CustomAttributeEncoding");
            feature.AddKnownType("System.Reflection.CustomAttributeEncodedArgument", "CustomAttributeEncodedArgument");
            feature.AddKnownType("System.Reflection.CustomAttributeNamedParameter", "CustomAttributeNamedParameter");
            feature.AddKnownType("System.Reflection.CustomAttributeCtorParameter", "CustomAttributeCtorParameter");
            feature.AddKnownType("System.Reflection.SecurityContextFrame", "SecurityContextFrame");
            feature.AddKnownType("System.Reflection.CustomAttributeType", "CustomAttributeType");
            feature.AddKnownType("System.Reflection.DefaultMemberAttribute", "DefaultMemberAttribute");
            feature.AddKnownType("System.Reflection.EventAttributes", "EventAttributes");
            feature.AddKnownType("System.Reflection.EventInfo", "EventInfo");
            feature.AddKnownType("System.Reflection.RuntimeEventInfo", "RuntimeEventInfo");
            feature.AddKnownType("System.Reflection.FieldAttributes", "FieldAttributes");
            feature.AddKnownType("System.Reflection.FieldInfo", "FieldInfo");
            feature.AddKnownType("System.Reflection.RuntimeFieldInfo", "RuntimeFieldInfo");
            feature.AddKnownType("System.Reflection.RtFieldInfo", "RtFieldInfo");
            feature.AddKnownType("System.Reflection.MdFieldInfo", "MdFieldInfo");
            feature.AddKnownType("System.Reflection.GenericParameterAttributes", "GenericParameterAttributes");
            feature.AddKnownType("System.Reflection.ICustomAttributeProvider", "ICustomAttributeProvider");
            feature.AddKnownType("System.Reflection.IReflectableType", "IReflectableType");
            feature.AddKnownType("System.Reflection.InterfaceMapping", "InterfaceMapping");
            feature.AddKnownType("System.Reflection.InvalidFilterCriteriaException", "InvalidFilterCriteriaException");
            feature.AddKnownType("System.Reflection.IReflect", "IReflect");
            feature.AddKnownType("System.Reflection.LoaderAllocatorScout", "LoaderAllocatorScout");
            feature.AddKnownType("System.Reflection.LoaderAllocator", "LoaderAllocator");
            feature.AddKnownType("System.Reflection.ManifestResourceInfo", "ManifestResourceInfo");
            feature.AddKnownType("System.Reflection.ResourceLocation", "ResourceLocation");
            feature.AddKnownType("System.Reflection.CorElementType", "CorElementType");
            feature.AddKnownType("System.Reflection.MdSigCallingConvention", "MdSigCallingConvention");
            feature.AddKnownType("System.Reflection.PInvokeAttributes", "PInvokeAttributes");
            feature.AddKnownType("System.Reflection.MethodSemanticsAttributes", "MethodSemanticsAttributes");
            feature.AddKnownType("System.Reflection.MetadataTokenType", "MetadataTokenType");
            feature.AddKnownType("System.Reflection.ConstArray", "ConstArray");
            feature.AddKnownType("System.Reflection.MetadataToken", "MetadataToken");
            feature.AddKnownType("System.Reflection.MetadataEnumResult", "MetadataEnumResult");
            feature.AddKnownType("System.Reflection.MetadataImport", "MetadataImport");
            feature.AddKnownType("System.Reflection.MetadataException", "MetadataException");
            feature.AddKnownType("System.Reflection.MemberInfo", "MemberInfo");
            feature.AddKnownType("System.Reflection.MemberInfoSerializationHolder", "MemberInfoSerializationHolder");
            feature.AddKnownType("System.Reflection.MemberTypes", "MemberTypes");
            feature.AddKnownType("System.Reflection.MethodAttributes", "MethodAttributes");
            feature.AddKnownType("System.Reflection.INVOCATION_FLAGS", "INVOCATION_FLAGS");
            feature.AddKnownType("System.Reflection.MethodBase", "MethodBase");
            feature.AddKnownType("System.Reflection.MethodImplAttributes", "MethodImplAttributes");
            feature.AddKnownType("System.Reflection.MethodInfo", "MethodInfo");
            feature.AddKnownType("System.Reflection.RuntimeMethodInfo", "RuntimeMethodInfo");
            feature.AddKnownType("System.Reflection.Missing", "Missing");
            feature.AddKnownType("System.Reflection.PortableExecutableKinds", "PortableExecutableKinds");
            feature.AddKnownType("System.Reflection.ImageFileMachine", "ImageFileMachine");
            feature.AddKnownType("System.Reflection.Module", "Module");
            feature.AddKnownType("System.Reflection.RuntimeModule", "RuntimeModule");
            feature.AddKnownType("System.Reflection.ObfuscateAssemblyAttribute", "ObfuscateAssemblyAttribute");
            feature.AddKnownType("System.Reflection.ObfuscationAttribute", "ObfuscationAttribute");
            feature.AddKnownType("System.Reflection.ExceptionHandlingClauseOptions", "ExceptionHandlingClauseOptions");
            feature.AddKnownType("System.Reflection.ExceptionHandlingClause", "ExceptionHandlingClause");
            feature.AddKnownType("System.Reflection.MethodBody", "MethodBody");
            feature.AddKnownType("System.Reflection.LocalVariableInfo", "LocalVariableInfo");
            feature.AddKnownType("System.Reflection.ParameterAttributes", "ParameterAttributes");
            feature.AddKnownType("System.Reflection.ParameterInfo", "ParameterInfo");
            feature.AddKnownType("System.Reflection.RuntimeParameterInfo", "RuntimeParameterInfo");
            feature.AddKnownType("System.Reflection.ParameterModifier", "ParameterModifier");
            feature.AddKnownType("System.Reflection.Pointer", "Pointer");
            feature.AddKnownType("System.Reflection.PropertyAttributes", "PropertyAttributes");
            feature.AddKnownType("System.Reflection.PropertyInfo", "PropertyInfo");
            feature.AddKnownType("System.Reflection.RuntimePropertyInfo", "RuntimePropertyInfo");
            feature.AddKnownType("System.Reflection.ReflectionContext", "ReflectionContext");
            feature.AddKnownType("System.Reflection.ReflectionTypeLoadException", "ReflectionTypeLoadException");
            feature.AddKnownType("System.Reflection.ResourceAttributes", "ResourceAttributes");
            feature.AddKnownType("System.Reflection.StrongNameKeyPair", "StrongNameKeyPair");
            feature.AddKnownType("System.Reflection.TargetException", "TargetException");
            feature.AddKnownType("System.Reflection.TargetInvocationException", "TargetInvocationException");
            feature.AddKnownType("System.Reflection.TargetParameterCountException", "TargetParameterCountException");
            feature.AddKnownType("System.Reflection.TypeAttributes", "TypeAttributes");
            feature.AddKnownType("System.Reflection.TypeDelegator", "TypeDelegator");
            feature.AddKnownType("System.Reflection.TypeInfo", "TypeInfo");
            feature.AddKnownType("System.Reflection.Emit.DynamicAssemblyFlags", "DynamicAssemblyFlags");
            feature.AddKnownType("System.Reflection.Emit.InternalAssemblyBuilder", "InternalAssemblyBuilder");
            feature.AddKnownType("System.Reflection.Emit.AssemblyBuilder", "AssemblyBuilder");
            feature.AddKnownType("System.Reflection.Emit.AssemblyBuilderData", "AssemblyBuilderData");
            feature.AddKnownType("System.Reflection.Emit.ResWriterData", "ResWriterData");
            feature.AddKnownType("System.Reflection.Emit.NativeVersionInfo", "NativeVersionInfo");
            feature.AddKnownType("System.Reflection.Emit.AssemblyBuilderAccess", "AssemblyBuilderAccess");
            feature.AddKnownType("System.Reflection.Emit.TypeNameBuilder", "TypeNameBuilder");
            feature.AddKnownType("System.Reflection.Emit.TypeNameBuilder+Format", "Format");
            feature.AddKnownType("System.Reflection.Emit.ConstructorBuilder", "ConstructorBuilder");
            feature.AddKnownType("System.Reflection.Emit.DynamicILGenerator", "DynamicILGenerator");
            feature.AddKnownType("System.Reflection.Emit.DynamicResolver", "DynamicResolver");
            feature.AddKnownType("System.Reflection.Emit.DynamicResolver+SecurityControlFlags", "SecurityControlFlags");
            feature.AddKnownType("System.Reflection.Emit.DynamicILInfo", "DynamicILInfo");
            feature.AddKnownType("System.Reflection.Emit.DynamicScope", "DynamicScope");
            feature.AddKnownType("System.Reflection.Emit.GenericMethodInfo", "GenericMethodInfo");
            feature.AddKnownType("System.Reflection.Emit.GenericFieldInfo", "GenericFieldInfo");
            feature.AddKnownType("System.Reflection.Emit.VarArgMethod", "VarArgMethod");
            feature.AddKnownType("System.Reflection.Emit.DynamicMethod", "DynamicMethod");
            feature.AddKnownType("System.Reflection.Emit.DynamicMethod+RTDynamicMethod", "RTDynamicMethod");
            feature.AddKnownType("System.Reflection.Emit.EventBuilder", "EventBuilder");
            feature.AddKnownType("System.Reflection.Emit.EventToken", "EventToken");
            feature.AddKnownType("System.Reflection.Emit.FieldBuilder", "FieldBuilder");
            feature.AddKnownType("System.Reflection.Emit.FieldToken", "FieldToken");
            feature.AddKnownType("System.Reflection.Emit.ILGenerator", "ILGenerator");
            feature.AddKnownType("System.Reflection.Emit.__FixupData", "__FixupData");
            feature.AddKnownType("System.Reflection.Emit.__ExceptionInfo", "__ExceptionInfo");
            feature.AddKnownType("System.Reflection.Emit.ScopeAction", "ScopeAction");
            feature.AddKnownType("System.Reflection.Emit.ScopeTree", "ScopeTree");
            feature.AddKnownType("System.Reflection.Emit.LineNumberInfo", "LineNumberInfo");
            feature.AddKnownType("System.Reflection.Emit.REDocument", "REDocument");
            feature.AddKnownType("System.Reflection.Emit.Label", "Label");
            feature.AddKnownType("System.Reflection.Emit.LocalBuilder", "LocalBuilder");
            feature.AddKnownType("System.Reflection.Emit.MethodBuilder", "MethodBuilder");
            feature.AddKnownType("System.Reflection.Emit.LocalSymInfo", "LocalSymInfo");
            feature.AddKnownType("System.Reflection.Emit.ExceptionHandler", "ExceptionHandler");
            feature.AddKnownType("System.Reflection.Emit.MethodBuilderInstantiation", "MethodBuilderInstantiation");
            feature.AddKnownType("System.Reflection.Emit.TypeKind", "TypeKind");
            feature.AddKnownType("System.Reflection.Emit.SymbolType", "SymbolType");
            feature.AddKnownType("System.Reflection.Emit.SymbolMethod", "SymbolMethod");
            feature.AddKnownType("System.Reflection.Emit.CustomAttributeBuilder", "CustomAttributeBuilder");
            feature.AddKnownType("System.Reflection.Emit.MethodRental", "MethodRental");
            feature.AddKnownType("System.Reflection.Emit.MethodToken", "MethodToken");
            feature.AddKnownType("System.Reflection.Emit.InternalModuleBuilder", "InternalModuleBuilder");
            feature.AddKnownType("System.Reflection.Emit.ModuleBuilder", "ModuleBuilder");
            feature.AddKnownType("System.Reflection.Emit.ModuleBuilderData", "ModuleBuilderData");
            feature.AddKnownType("System.Reflection.Emit.PEFileKinds", "PEFileKinds");
            feature.AddKnownType("System.Reflection.Emit.OpCodeValues", "OpCodeValues");
            feature.AddKnownType("System.Reflection.Emit.OpCodes", "OpCodes");
            feature.AddKnownType("System.Reflection.Emit.OpCode", "OpCode");
            feature.AddKnownType("System.Reflection.Emit.OpCodeType", "OpCodeType");
            feature.AddKnownType("System.Reflection.Emit.StackBehaviour", "StackBehaviour");
            feature.AddKnownType("System.Reflection.Emit.OperandType", "OperandType");
            feature.AddKnownType("System.Reflection.Emit.FlowControl", "FlowControl");
            feature.AddKnownType("System.Reflection.Emit.ParameterBuilder", "ParameterBuilder");
            feature.AddKnownType("System.Reflection.Emit.ParameterToken", "ParameterToken");
            feature.AddKnownType("System.Reflection.Emit.PropertyBuilder", "PropertyBuilder");
            feature.AddKnownType("System.Reflection.Emit.PropertyToken", "PropertyToken");
            feature.AddKnownType("System.Reflection.Emit.SignatureHelper", "SignatureHelper");
            feature.AddKnownType("System.Reflection.Emit.SignatureToken", "SignatureToken");
            feature.AddKnownType("System.Reflection.Emit.StringToken", "StringToken");
            feature.AddKnownType("System.Reflection.Emit.PackingSize", "PackingSize");
            feature.AddKnownType("System.Reflection.Emit.TypeBuilder", "TypeBuilder");
            feature.AddKnownType("System.Reflection.Emit.TypeBuilderInstantiation", "TypeBuilderInstantiation");
            feature.AddKnownType("System.Reflection.Emit.GenericTypeParameterBuilder", "GenericTypeParameterBuilder");
            feature.AddKnownType("System.Reflection.Emit.EnumBuilder", "EnumBuilder");
            feature.AddKnownType("System.Reflection.Emit.TypeToken", "TypeToken");
            feature.AddKnownType("System.Reflection.Emit.MethodOnTypeBuilderInstantiation", "MethodOnTypeBuilderInstantiation");
            feature.AddKnownType("System.Reflection.Emit.ConstructorOnTypeBuilderInstantiation", "ConstructorOnTypeBuilderInstantiation");
            feature.AddKnownType("System.Reflection.Emit.FieldOnTypeBuilderInstantiation", "FieldOnTypeBuilderInstantiation");
            feature.AddKnownType("System.Reflection.Emit.UnmanagedMarshal", "UnmanagedMarshal");
            feature.AddKnownType("System.Resources.FastResourceComparer", "FastResourceComparer");
            feature.AddKnownType("System.Resources.FileBasedResourceGroveler", "FileBasedResourceGroveler");
            feature.AddKnownType("System.Resources.IResourceGroveler", "IResourceGroveler");
            feature.AddKnownType("System.Resources.IResourceReader", "IResourceReader");
            feature.AddKnownType("System.Resources.IResourceWriter", "IResourceWriter");
            feature.AddKnownType("System.Resources.ManifestBasedResourceGroveler", "ManifestBasedResourceGroveler");
            feature.AddKnownType("System.Resources.MissingManifestResourceException", "MissingManifestResourceException");
            feature.AddKnownType("System.Resources.MissingSatelliteAssemblyException", "MissingSatelliteAssemblyException");
            feature.AddKnownType("System.Resources.NeutralResourcesLanguageAttribute", "NeutralResourcesLanguageAttribute");
            feature.AddKnownType("System.Resources.ResourceFallbackManager", "ResourceFallbackManager");
            feature.AddKnownType("System.Resources.WindowsRuntimeResourceManagerBase", "WindowsRuntimeResourceManagerBase");
            feature.AddKnownType("System.Resources.PRIExceptionInfo", "PRIExceptionInfo");
            feature.AddKnownType("System.Resources.ResourceManager", "ResourceManager");
            feature.AddKnownType("System.Resources.ResourceManager+CultureNameResourceSetPair", "CultureNameResourceSetPair");
            feature.AddKnownType("System.Resources.ResourceManager+ResourceManagerMediator", "ResourceManagerMediator");
            feature.AddKnownType("System.Resources.ResourceLocator", "ResourceLocator");
            feature.AddKnownType("System.Resources.ResourceReader", "ResourceReader");
            feature.AddKnownType("System.Resources.ResourceReader+TypeLimitingDeserializationBinder", "TypeLimitingDeserializationBinder");
            feature.AddKnownType("System.Resources.ResourceReader+ResourceEnumerator", "ResourceEnumerator");
            feature.AddKnownType("System.Resources.ResourceSet", "ResourceSet");
            feature.AddKnownType("System.Resources.ResourceTypeCode", "ResourceTypeCode");
            feature.AddKnownType("System.Resources.ResourceWriter", "ResourceWriter");
            feature.AddKnownType("System.Resources.RuntimeResourceSet", "RuntimeResourceSet");
            feature.AddKnownType("System.Resources.SatelliteContractVersionAttribute", "SatelliteContractVersionAttribute");
            feature.AddKnownType("System.Resources.UltimateResourceFallbackLocation", "UltimateResourceFallbackLocation");
            feature.AddKnownType("System.Runtime.MemoryFailPoint", "MemoryFailPoint");
            feature.AddKnownType("System.Runtime.GCLargeObjectHeapCompactionMode", "GCLargeObjectHeapCompactionMode");
            feature.AddKnownType("System.Runtime.GCLatencyMode", "GCLatencyMode");
            feature.AddKnownType("System.Runtime.AssemblyTargetedPatchBandAttribute", "AssemblyTargetedPatchBandAttribute");
            feature.AddKnownType("System.Runtime.TargetedPatchingOptOutAttribute", "TargetedPatchingOptOutAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.StringFreezingAttribute", "StringFreezingAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.AccessedThroughPropertyAttribute", "AccessedThroughPropertyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.AssemblyAttributesGoHere", "AssemblyAttributesGoHere");
            feature.AddKnownType("System.Runtime.CompilerServices.AssemblyAttributesGoHereS", "AssemblyAttributesGoHereS");
            feature.AddKnownType("System.Runtime.CompilerServices.AssemblyAttributesGoHereM", "AssemblyAttributesGoHereM");
            feature.AddKnownType("System.Runtime.CompilerServices.AssemblyAttributesGoHereSM", "AssemblyAttributesGoHereSM");
            feature.AddKnownType("System.Runtime.CompilerServices.CallConvCdecl", "CallConvCdecl");
            feature.AddKnownType("System.Runtime.CompilerServices.CallConvStdcall", "CallConvStdcall");
            feature.AddKnownType("System.Runtime.CompilerServices.CallConvThiscall", "CallConvThiscall");
            feature.AddKnownType("System.Runtime.CompilerServices.CallConvFastcall", "CallConvFastcall");
            feature.AddKnownType("System.Runtime.CompilerServices.CompilerGeneratedAttribute", "CompilerGeneratedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CustomConstantAttribute", "CustomConstantAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DateTimeConstantAttribute", "DateTimeConstantAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DiscardableAttribute", "DiscardableAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DecimalConstantAttribute", "DecimalConstantAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DisablePrivateReflectionAttribute", "DisablePrivateReflectionAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CompilationRelaxations", "CompilationRelaxations");
            feature.AddKnownType("System.Runtime.CompilerServices.CompilationRelaxationsAttribute", "CompilationRelaxationsAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CompilerGlobalScopeAttribute", "CompilerGlobalScopeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.ExtensionAttribute", "ExtensionAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.FixedBufferAttribute", "FixedBufferAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IndexerNameAttribute", "IndexerNameAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.InternalsVisibleToAttribute", "InternalsVisibleToAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.FriendAccessAllowedAttribute", "FriendAccessAllowedAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IsByRefLikeAttribute", "IsByRefLikeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.MethodImplOptions", "MethodImplOptions");
            feature.AddKnownType("System.Runtime.CompilerServices.MethodCodeType", "MethodCodeType");
            feature.AddKnownType("System.Runtime.CompilerServices.MethodImplAttribute", "MethodImplAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.FixedAddressValueTypeAttribute", "FixedAddressValueTypeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.UnsafeValueTypeAttribute", "UnsafeValueTypeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RequiredAttributeAttribute", "RequiredAttributeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.LoadHint", "LoadHint");
            feature.AddKnownType("System.Runtime.CompilerServices.DefaultDependencyAttribute", "DefaultDependencyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DependencyAttribute", "DependencyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.TypeDependencyAttribute", "TypeDependencyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.HasCopySemanticsAttribute", "HasCopySemanticsAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.StringHandleOnStack", "StringHandleOnStack");
            feature.AddKnownType("System.Runtime.CompilerServices.ObjectHandleOnStack", "ObjectHandleOnStack");
            feature.AddKnownType("System.Runtime.CompilerServices.StackCrawlMarkHandle", "StackCrawlMarkHandle");
            feature.AddKnownType("System.Runtime.CompilerServices.PinningHelper", "PinningHelper");
            feature.AddKnownType("System.Runtime.CompilerServices.ScopelessEnumAttribute", "ScopelessEnumAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.SpecialNameAttribute", "SpecialNameAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.SuppressMergeCheckAttribute", "SuppressMergeCheckAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute", "IsReadOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.SuppressIldasmAttribute", "SuppressIldasmAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.NativeCppClassAttribute", "NativeCppClassAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.DecoratedNameAttribute", "DecoratedNameAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.TypeForwardedToAttribute", "TypeForwardedToAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.TypeForwardedFromAttribute", "TypeForwardedFromAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.ReferenceAssemblyAttribute", "ReferenceAssemblyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RuntimeCompatibilityAttribute", "RuntimeCompatibilityAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.RuntimeWrappedException", "RuntimeWrappedException");
            feature.AddKnownType("System.Runtime.CompilerServices.ConditionalWeakTable`2", "ConditionalWeakTable`2'2");
            feature.AddKnownType("System.Runtime.CompilerServices.DependentHandle", "DependentHandle");
            feature.AddKnownType("System.Runtime.CompilerServices.CallerFilePathAttribute", "CallerFilePathAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CallerLineNumberAttribute", "CallerLineNumberAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CallerMemberNameAttribute", "CallerMemberNameAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.StateMachineAttribute", "StateMachineAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IteratorStateMachineAttribute", "IteratorStateMachineAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.ITuple", "ITuple");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncStateMachineAttribute", "AsyncStateMachineAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncVoidMethodBuilder", "AsyncVoidMethodBuilder");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncTaskMethodBuilder", "AsyncTaskMethodBuilder");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1", "AsyncTaskMethodBuilder`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncMethodBuilderCore", "AsyncMethodBuilderCore");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner", "MoveNextRunner");
            feature.AddKnownType("System.Runtime.CompilerServices.IAsyncStateMachine", "IAsyncStateMachine");
            feature.AddKnownType("System.Runtime.CompilerServices.INotifyCompletion", "INotifyCompletion");
            feature.AddKnownType("System.Runtime.CompilerServices.ICriticalNotifyCompletion", "ICriticalNotifyCompletion");
            feature.AddKnownType("System.Runtime.CompilerServices.TaskAwaiter", "TaskAwaiter");
            feature.AddKnownType("System.Runtime.CompilerServices.TaskAwaiter`1", "TaskAwaiter`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredTaskAwaitable", "ConfiguredTaskAwaitable");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter", "ConfiguredTaskAwaitable.ConfiguredTaskAwaiter");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1", "ConfiguredTaskAwaitable`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter", "ConfiguredTaskAwaitable`1'1.ConfiguredTaskAwaiter'1");
            feature.AddKnownType("System.Runtime.CompilerServices.YieldAwaitable", "YieldAwaitable");
            feature.AddKnownType("System.Runtime.CompilerServices.YieldAwaitable+YieldAwaiter", "YieldAwaitable.YieldAwaiter");
            feature.AddKnownType("System.Runtime.CompilerServices.IDispatchConstantAttribute", "IDispatchConstantAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IUnknownConstantAttribute", "IUnknownConstantAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.TupleElementNamesAttribute", "TupleElementNamesAttribute");
            feature.AddKnownType("System.Runtime.ConstrainedExecution.CriticalFinalizerObject", "CriticalFinalizerObject");
            feature.AddKnownType("System.Runtime.ConstrainedExecution.Consistency", "Consistency");
            feature.AddKnownType("System.Runtime.ConstrainedExecution.Cer", "Cer");
            feature.AddKnownType("System.Runtime.ConstrainedExecution.ReliabilityContractAttribute", "ReliabilityContractAttribute");
            feature.AddKnownType("System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute", "PrePrepareMethodAttribute");
            feature.AddKnownType("System.Runtime.DesignerServices.WindowsRuntimeDesignerContext", "WindowsRuntimeDesignerContext");
            feature.AddKnownType("System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute", "HandleProcessCorruptedStateExceptionsAttribute");
            feature.AddKnownType("System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs", "FirstChanceExceptionEventArgs");
            feature.AddKnownType("System.Runtime.ExceptionServices.ExceptionDispatchInfo", "ExceptionDispatchInfo");
            feature.AddKnownType("System.Runtime.Hosting.ManifestRunner", "ManifestRunner");
            feature.AddKnownType("System.Runtime.Hosting.ApplicationActivator", "ApplicationActivator");
            feature.AddKnownType("System.Runtime.Hosting.ActivationArguments", "ActivationArguments");
            feature.AddKnownType("System.Runtime.InteropServices._Activator", "_Activator");
            feature.AddKnownType("System.Runtime.InteropServices._Attribute", "_Attribute");
            feature.AddKnownType("System.Runtime.InteropServices._Thread", "_Thread");
            feature.AddKnownType("System.Runtime.InteropServices._Type", "_Type");
            feature.AddKnownType("System.Runtime.InteropServices._Assembly", "_Assembly");
            feature.AddKnownType("System.Runtime.InteropServices._MemberInfo", "_MemberInfo");
            feature.AddKnownType("System.Runtime.InteropServices._MethodBase", "_MethodBase");
            feature.AddKnownType("System.Runtime.InteropServices._MethodInfo", "_MethodInfo");
            feature.AddKnownType("System.Runtime.InteropServices._ConstructorInfo", "_ConstructorInfo");
            feature.AddKnownType("System.Runtime.InteropServices._FieldInfo", "_FieldInfo");
            feature.AddKnownType("System.Runtime.InteropServices._PropertyInfo", "_PropertyInfo");
            feature.AddKnownType("System.Runtime.InteropServices._EventInfo", "_EventInfo");
            feature.AddKnownType("System.Runtime.InteropServices._ParameterInfo", "_ParameterInfo");
            feature.AddKnownType("System.Runtime.InteropServices._Module", "_Module");
            feature.AddKnownType("System.Runtime.InteropServices._AssemblyName", "_AssemblyName");
            feature.AddKnownType("System.Runtime.InteropServices.ArrayWithOffset", "ArrayWithOffset");
            feature.AddKnownType("System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute", "UnmanagedFunctionPointerAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeIdentifierAttribute", "TypeIdentifierAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute", "AllowReversePInvokeCallsAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.DispIdAttribute", "DispIdAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComInterfaceType", "ComInterfaceType");
            feature.AddKnownType("System.Runtime.InteropServices.InterfaceTypeAttribute", "InterfaceTypeAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComDefaultInterfaceAttribute", "ComDefaultInterfaceAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ClassInterfaceType", "ClassInterfaceType");
            feature.AddKnownType("System.Runtime.InteropServices.ClassInterfaceAttribute", "ClassInterfaceAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComVisibleAttribute", "ComVisibleAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibImportClassAttribute", "TypeLibImportClassAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.LCIDConversionAttribute", "LCIDConversionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComRegisterFunctionAttribute", "ComRegisterFunctionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComUnregisterFunctionAttribute", "ComUnregisterFunctionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ProgIdAttribute", "ProgIdAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ImportedFromTypeLibAttribute", "ImportedFromTypeLibAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.IDispatchImplType", "IDispatchImplType");
            feature.AddKnownType("System.Runtime.InteropServices.IDispatchImplAttribute", "IDispatchImplAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComSourceInterfacesAttribute", "ComSourceInterfacesAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComConversionLossAttribute", "ComConversionLossAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibTypeFlags", "TypeLibTypeFlags");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibFuncFlags", "TypeLibFuncFlags");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibVarFlags", "TypeLibVarFlags");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibTypeAttribute", "TypeLibTypeAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibFuncAttribute", "TypeLibFuncAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibVarAttribute", "TypeLibVarAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.VarEnum", "VarEnum");
            feature.AddKnownType("System.Runtime.InteropServices.UnmanagedType", "UnmanagedType");
            feature.AddKnownType("System.Runtime.InteropServices.MarshalAsAttribute", "MarshalAsAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComImportAttribute", "ComImportAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.GuidAttribute", "GuidAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.PreserveSigAttribute", "PreserveSigAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.InAttribute", "InAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.OutAttribute", "OutAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.OptionalAttribute", "OptionalAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.DllImportSearchPath", "DllImportSearchPath");
            feature.AddKnownType("System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute", "DefaultDllImportSearchPathsAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.DllImportAttribute", "DllImportAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.StructLayoutAttribute", "StructLayoutAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.FieldOffsetAttribute", "FieldOffsetAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComAliasNameAttribute", "ComAliasNameAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.AutomationProxyAttribute", "AutomationProxyAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute", "PrimaryInteropAssemblyAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.CoClassAttribute", "CoClassAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComEventInterfaceAttribute", "ComEventInterfaceAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibVersionAttribute", "TypeLibVersionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ComCompatibleVersionAttribute", "ComCompatibleVersionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.BestFitMappingAttribute", "BestFitMappingAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.DefaultCharSetAttribute", "DefaultCharSetAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.SetWin32ContextInIDispatchAttribute", "SetWin32ContextInIDispatchAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute", "ManagedToNativeComInteropStubAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.CallingConvention", "CallingConvention");
            feature.AddKnownType("System.Runtime.InteropServices.CharSet", "CharSet");
            feature.AddKnownType("System.Runtime.InteropServices.COMException", "COMException");
            feature.AddKnownType("System.Runtime.InteropServices.CriticalHandle", "CriticalHandle");
            feature.AddKnownType("System.Runtime.InteropServices.ExternalException", "ExternalException");
            feature.AddKnownType("System.Runtime.InteropServices.GCHandleType", "GCHandleType");
            feature.AddKnownType("System.Runtime.InteropServices.GCHandle", "GCHandle");
            feature.AddKnownType("System.Runtime.InteropServices.GCHandleCookieTable", "GCHandleCookieTable");
            feature.AddKnownType("System.Runtime.InteropServices.HandleRef", "HandleRef");
            feature.AddKnownType("System.Runtime.InteropServices.ICustomMarshaler", "ICustomMarshaler");
            feature.AddKnownType("System.Runtime.InteropServices._Exception", "_Exception");
            feature.AddKnownType("System.Runtime.InteropServices.InvalidOleVariantTypeException", "InvalidOleVariantTypeException");
            feature.AddKnownType("System.Runtime.InteropServices.LayoutKind", "LayoutKind");
            feature.AddKnownType("System.Runtime.InteropServices.CustomQueryInterfaceMode", "CustomQueryInterfaceMode");
            feature.AddKnownType("System.Runtime.InteropServices.ImporterCallback", "ImporterCallback");
            feature.AddKnownType("System.Runtime.InteropServices.MarshalDirectiveException", "MarshalDirectiveException");
            feature.AddKnownType("System.Runtime.InteropServices.PInvokeMap", "PInvokeMap");
            feature.AddKnownType("System.Runtime.InteropServices.RuntimeEnvironment", "RuntimeEnvironment");
            feature.AddKnownType("System.Runtime.InteropServices.SEHException", "SEHException");
            feature.AddKnownType("System.Runtime.InteropServices.SafeBuffer", "SafeBuffer");
            feature.AddKnownType("System.Runtime.InteropServices.SafeHandle", "SafeHandle");
            feature.AddKnownType("System.Runtime.InteropServices.SafeHeapHandle", "SafeHeapHandle");
            feature.AddKnownType("System.Runtime.InteropServices.SafeHeapHandleCache", "SafeHeapHandleCache");
            feature.AddKnownType("System.Runtime.InteropServices.StringBuffer", "StringBuffer");
            feature.AddKnownType("System.Runtime.InteropServices.NativeBuffer", "NativeBuffer");
            feature.AddKnownType("System.Runtime.InteropServices.BStrWrapper", "BStrWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.CurrencyWrapper", "CurrencyWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.DispatchWrapper", "DispatchWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.ErrorWrapper", "ErrorWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.UnknownWrapper", "UnknownWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.VariantWrapper", "VariantWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.ComMemberType", "ComMemberType");
            feature.AddKnownType("System.Runtime.InteropServices.ExtensibleClassFactory", "ExtensibleClassFactory");
            feature.AddKnownType("System.Runtime.InteropServices.ICustomAdapter", "ICustomAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.ICustomFactory", "ICustomFactory");
            feature.AddKnownType("System.Runtime.InteropServices.CustomQueryInterfaceResult", "CustomQueryInterfaceResult");
            feature.AddKnownType("System.Runtime.InteropServices.ICustomQueryInterface", "ICustomQueryInterface");
            feature.AddKnownType("System.Runtime.InteropServices.InvalidComObjectException", "InvalidComObjectException");
            feature.AddKnownType("System.Runtime.InteropServices.AssemblyRegistrationFlags", "AssemblyRegistrationFlags");
            feature.AddKnownType("System.Runtime.InteropServices.IRegistrationServices", "IRegistrationServices");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibImporterFlags", "TypeLibImporterFlags");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibExporterFlags", "TypeLibExporterFlags");
            feature.AddKnownType("System.Runtime.InteropServices.ImporterEventKind", "ImporterEventKind");
            feature.AddKnownType("System.Runtime.InteropServices.ExporterEventKind", "ExporterEventKind");
            feature.AddKnownType("System.Runtime.InteropServices.ITypeLibImporterNotifySink", "ITypeLibImporterNotifySink");
            feature.AddKnownType("System.Runtime.InteropServices.ITypeLibExporterNotifySink", "ITypeLibExporterNotifySink");
            feature.AddKnownType("System.Runtime.InteropServices.ITypeLibConverter", "ITypeLibConverter");
            feature.AddKnownType("System.Runtime.InteropServices.ITypeLibExporterNameProvider", "ITypeLibExporterNameProvider");
            feature.AddKnownType("System.Runtime.InteropServices.RegistrationClassContext", "RegistrationClassContext");
            feature.AddKnownType("System.Runtime.InteropServices.RegistrationConnectionType", "RegistrationConnectionType");
            feature.AddKnownType("System.Runtime.InteropServices.RegistrationServices", "RegistrationServices");
            feature.AddKnownType("System.Runtime.InteropServices.SafeArrayRankMismatchException", "SafeArrayRankMismatchException");
            feature.AddKnownType("System.Runtime.InteropServices.SafeArrayTypeMismatchException", "SafeArrayTypeMismatchException");
            feature.AddKnownType("System.Runtime.InteropServices.TypeLibConverter", "TypeLibConverter");
            feature.AddKnownType("System.Runtime.InteropServices.BIND_OPTS", "BIND_OPTS");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIBindCtx", "UCOMIBindCtx");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIConnectionPointContainer", "UCOMIConnectionPointContainer");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIConnectionPoint", "UCOMIConnectionPoint");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIEnumerable", "UCOMIEnumerable");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIEnumerator", "UCOMIEnumerator");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIEnumMoniker", "UCOMIEnumMoniker");
            feature.AddKnownType("System.Runtime.InteropServices.CONNECTDATA", "CONNECTDATA");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIEnumConnections", "UCOMIEnumConnections");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIEnumConnectionPoints", "UCOMIEnumConnectionPoints");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIEnumString", "UCOMIEnumString");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIEnumVARIANT", "UCOMIEnumVARIANT");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIExpando", "UCOMIExpando");
            feature.AddKnownType("System.Runtime.InteropServices.FILETIME", "FILETIME");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIMoniker", "UCOMIMoniker");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIPersistFile", "UCOMIPersistFile");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIReflect", "UCOMIReflect");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIRunningObjectTable", "UCOMIRunningObjectTable");
            feature.AddKnownType("System.Runtime.InteropServices.STATSTG", "STATSTG");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMIStream", "UCOMIStream");
            feature.AddKnownType("System.Runtime.InteropServices.DESCKIND", "DESCKIND");
            feature.AddKnownType("System.Runtime.InteropServices.BINDPTR", "BINDPTR");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMITypeComp", "UCOMITypeComp");
            feature.AddKnownType("System.Runtime.InteropServices.TYPEKIND", "TYPEKIND");
            feature.AddKnownType("System.Runtime.InteropServices.TYPEFLAGS", "TYPEFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.IMPLTYPEFLAGS", "IMPLTYPEFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.TYPEATTR", "TYPEATTR");
            feature.AddKnownType("System.Runtime.InteropServices.FUNCDESC", "FUNCDESC");
            feature.AddKnownType("System.Runtime.InteropServices.IDLFLAG", "IDLFLAG");
            feature.AddKnownType("System.Runtime.InteropServices.IDLDESC", "IDLDESC");
            feature.AddKnownType("System.Runtime.InteropServices.PARAMFLAG", "PARAMFLAG");
            feature.AddKnownType("System.Runtime.InteropServices.PARAMDESC", "PARAMDESC");
            feature.AddKnownType("System.Runtime.InteropServices.TYPEDESC", "TYPEDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ELEMDESC", "ELEMDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ELEMDESC+DESCUNION", "ELEMDESC.DESCUNION");
            feature.AddKnownType("System.Runtime.InteropServices.VARDESC", "VARDESC");
            feature.AddKnownType("System.Runtime.InteropServices.VARDESC+DESCUNION", "VARDESC.DESCUNION");
            feature.AddKnownType("System.Runtime.InteropServices.DISPPARAMS", "DISPPARAMS");
            feature.AddKnownType("System.Runtime.InteropServices.EXCEPINFO", "EXCEPINFO");
            feature.AddKnownType("System.Runtime.InteropServices.FUNCKIND", "FUNCKIND");
            feature.AddKnownType("System.Runtime.InteropServices.INVOKEKIND", "INVOKEKIND");
            feature.AddKnownType("System.Runtime.InteropServices.CALLCONV", "CALLCONV");
            feature.AddKnownType("System.Runtime.InteropServices.FUNCFLAGS", "FUNCFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.VARFLAGS", "VARFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMITypeInfo", "UCOMITypeInfo");
            feature.AddKnownType("System.Runtime.InteropServices.SYSKIND", "SYSKIND");
            feature.AddKnownType("System.Runtime.InteropServices.LIBFLAGS", "LIBFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.TYPELIBATTR", "TYPELIBATTR");
            feature.AddKnownType("System.Runtime.InteropServices.UCOMITypeLib", "UCOMITypeLib");
            feature.AddKnownType("System.Runtime.InteropServices.Architecture", "Architecture");
            feature.AddKnownType("System.Runtime.InteropServices.OSPlatform", "OSPlatform");
            feature.AddKnownType("System.Runtime.InteropServices.ComEventsInfo", "ComEventsInfo");
            feature.AddKnownType("System.Runtime.InteropServices.ComEventsMethod", "ComEventsMethod");
            feature.AddKnownType("System.Runtime.InteropServices.ComEventsMethod+DelegateWrapper", "DelegateWrapper");
            feature.AddKnownType("System.Runtime.InteropServices.ComEventsSink", "ComEventsSink");
            feature.AddKnownType("System.Runtime.InteropServices.NativeMethods+IDispatch", "IDispatch");
            feature.AddKnownType("System.Runtime.InteropServices.Variant", "Variant");
            feature.AddKnownType("System.Runtime.InteropServices.Variant+TypeUnion", "TypeUnion");
            feature.AddKnownType("System.Runtime.InteropServices.Variant+Record", "Record");
            feature.AddKnownType("System.Runtime.InteropServices.Variant+UnionTypes", "UnionTypes");
            feature.AddKnownType("System.Runtime.InteropServices._AssemblyBuilder", "_AssemblyBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._ConstructorBuilder", "_ConstructorBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._CustomAttributeBuilder", "_CustomAttributeBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._EnumBuilder", "_EnumBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._EventBuilder", "_EventBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._FieldBuilder", "_FieldBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._ILGenerator", "_ILGenerator");
            feature.AddKnownType("System.Runtime.InteropServices._LocalBuilder", "_LocalBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._MethodBuilder", "_MethodBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._MethodRental", "_MethodRental");
            feature.AddKnownType("System.Runtime.InteropServices._ModuleBuilder", "_ModuleBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._ParameterBuilder", "_ParameterBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._PropertyBuilder", "_PropertyBuilder");
            feature.AddKnownType("System.Runtime.InteropServices._SignatureHelper", "_SignatureHelper");
            feature.AddKnownType("System.Runtime.InteropServices._TypeBuilder", "_TypeBuilder");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.BIND_OPTS", "BIND_OPTS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IBindCtx", "IBindCtx");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IConnectionPointContainer", "IConnectionPointContainer");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IConnectionPoint", "IConnectionPoint");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumerable", "IEnumerable");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumerator", "IEnumerator");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumMoniker", "IEnumMoniker");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.CONNECTDATA", "CONNECTDATA");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumConnections", "IEnumConnections");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints", "IEnumConnectionPoints");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumString", "IEnumString");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumVARIANT", "IEnumVARIANT");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IExpando", "IExpando");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.FILETIME", "FILETIME");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IMoniker", "IMoniker");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IPersistFile", "IPersistFile");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IReflect", "IReflect");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IRunningObjectTable", "IRunningObjectTable");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.STATSTG", "STATSTG");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IStream", "IStream");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.DESCKIND", "DESCKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.BINDPTR", "BINDPTR");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ITypeComp", "ITypeComp");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYPEKIND", "TYPEKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYPEFLAGS", "TYPEFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS", "IMPLTYPEFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYPEATTR", "TYPEATTR");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.FUNCDESC", "FUNCDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IDLFLAG", "IDLFLAG");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IDLDESC", "IDLDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.PARAMFLAG", "PARAMFLAG");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.PARAMDESC", "PARAMDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYPEDESC", "TYPEDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ELEMDESC", "ELEMDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ELEMDESC+DESCUNION", "ELEMDESC.DESCUNION");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.VARKIND", "VARKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.VARDESC", "VARDESC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.VARDESC+DESCUNION", "VARDESC.DESCUNION");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.DISPPARAMS", "DISPPARAMS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.EXCEPINFO", "EXCEPINFO");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.FUNCKIND", "FUNCKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.INVOKEKIND", "INVOKEKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.CALLCONV", "CALLCONV");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.FUNCFLAGS", "FUNCFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.VARFLAGS", "VARFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ITypeInfo", "ITypeInfo");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.SYSKIND", "SYSKIND");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.LIBFLAGS", "LIBFLAGS");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYPELIBATTR", "TYPELIBATTR");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ITypeLib", "ITypeLib");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ITypeLib2", "ITypeLib2");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ITypeInfo2", "ITypeInfo2");
            feature.AddKnownType("System.Runtime.InteropServices.Expando.IExpando", "IExpando");
            feature.AddKnownType("System.Runtime.InteropServices.TCEAdapterGen.EventProviderWriter", "EventProviderWriter");
            feature.AddKnownType("System.Runtime.InteropServices.TCEAdapterGen.EventSinkHelperWriter", "EventSinkHelperWriter");
            feature.AddKnownType("System.Runtime.InteropServices.TCEAdapterGen.EventItfInfo", "EventItfInfo");
            feature.AddKnownType("System.Runtime.InteropServices.TCEAdapterGen.TCEAdapterGenerator", "TCEAdapterGenerator");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.DefaultInterfaceAttribute", "DefaultInterfaceAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeImportAttribute", "WindowsRuntimeImportAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute", "InterfaceImplementedInVersionAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute", "ReadOnlyArrayAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute", "WriteOnlyArrayAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute", "ReturnValueNameAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ConstantSplittableMap`2", "ConstantSplittableMap`2'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ConstantSplittableMap`2+IKeyValuePairEnumerator", "IKeyValuePairEnumerator'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.DictionaryKeyCollection`2", "DictionaryKeyCollection`2'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.DictionaryKeyEnumerator`2", "DictionaryKeyEnumerator`2'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.DictionaryValueCollection`2", "DictionaryValueCollection`2'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.DictionaryValueEnumerator`2", "DictionaryValueEnumerator`2'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.EnumerableToIterableAdapter", "EnumerableToIterableAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.EnumerableToBindableIterableAdapter", "EnumerableToBindableIterableAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.EnumerableToBindableIterableAdapter+NonGenericToGenericEnumerator", "NonGenericToGenericEnumerator");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.EnumeratorToIteratorAdapter`1", "EnumeratorToIteratorAdapter`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.VectorToListAdapter", "VectorToListAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.VectorToCollectionAdapter", "VectorToCollectionAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.VectorViewToReadOnlyCollectionAdapter", "VectorViewToReadOnlyCollectionAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.MapToDictionaryAdapter", "MapToDictionaryAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.MapToCollectionAdapter", "MapToCollectionAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.MapViewToReadOnlyCollectionAdapter", "MapViewToReadOnlyCollectionAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ListToVectorAdapter", "ListToVectorAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.DictionaryToMapAdapter", "DictionaryToMapAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.BindableVectorToListAdapter", "BindableVectorToListAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.BindableVectorToCollectionAdapter", "BindableVectorToCollectionAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ListToBindableVectorAdapter", "ListToBindableVectorAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ListToBindableVectorViewAdapter", "ListToBindableVectorViewAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken", "EventRegistrationToken");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1", "EventRegistrationTokenTable`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IActivationFactory", "IActivationFactory");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IRestrictedErrorInfo", "IRestrictedErrorInfo");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IMapViewToIReadOnlyDictionaryAdapter", "IMapViewToIReadOnlyDictionaryAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ReadOnlyDictionaryKeyCollection`2", "ReadOnlyDictionaryKeyCollection`2'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ReadOnlyDictionaryKeyEnumerator`2", "ReadOnlyDictionaryKeyEnumerator`2'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ReadOnlyDictionaryValueCollection`2", "ReadOnlyDictionaryValueCollection`2'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ReadOnlyDictionaryValueEnumerator`2", "ReadOnlyDictionaryValueEnumerator`2'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IVectorViewToIReadOnlyListAdapter", "IVectorViewToIReadOnlyListAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IReadOnlyDictionaryToIMapViewAdapter", "IReadOnlyDictionaryToIMapViewAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IReadOnlyListToIVectorViewAdapter", "IReadOnlyListToIVectorViewAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IterableToEnumerableAdapter", "IterableToEnumerableAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.BindableIterableToEnumerableAdapter", "BindableIterableToEnumerableAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IteratorToEnumeratorAdapter`1", "IteratorToEnumeratorAdapter`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IManagedActivationFactory", "IManagedActivationFactory");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ManagedActivationFactory", "ManagedActivationFactory");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.HSTRING_HEADER", "HSTRING_HEADER");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.PropertyType", "PropertyType");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+EventRegistrationTokenList", "EventRegistrationTokenList");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+EventCacheKey", "EventCacheKey");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+EventCacheKeyEqualityComparer", "EventCacheKeyEqualityComparer");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+EventRegistrationTokenListWithCount", "EventRegistrationTokenListWithCount");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+TokenListCount", "TokenListCount");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+EventCacheEntry", "EventCacheEntry");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+ReaderWriterLockTimedOutException", "ReaderWriterLockTimedOutException");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal+NativeOrStaticEventRegistrationImpl+MyReaderWriterLock", "MyReaderWriterLock");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs", "NamespaceResolveEventArgs");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs", "DesignerNamespaceResolveEventArgs");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IClosable", "IClosable");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IDisposableToIClosableAdapter", "IDisposableToIClosableAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IClosableToIDisposableAdapter", "IClosableToIDisposableAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IStringable", "IStringable");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IStringableHelper", "IStringableHelper");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.RuntimeClass", "RuntimeClass");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.CLRIPropertyValueImpl", "CLRIPropertyValueImpl");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.CLRIReferenceImpl`1", "CLRIReferenceImpl`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.CLRIReferenceArrayImpl`1", "CLRIReferenceArrayImpl`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IPropertyValue", "IPropertyValue");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.Point", "Point");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.Size", "Size");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.Rect", "Rect");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IReference`1", "IReference`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IReferenceArray`1", "IReferenceArray`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ICustomPropertyProvider", "ICustomPropertyProvider");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.InterfaceForwardingSupport", "InterfaceForwardingSupport");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IGetProxyTarget", "IGetProxyTarget");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ICustomPropertyProviderProxy`2", "ICustomPropertyProviderProxy`2'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ICustomProperty", "ICustomProperty");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.CustomPropertyImpl", "CustomPropertyImpl");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IWinRTClassActivator", "IWinRTClassActivator");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.WinRTClassActivator", "WinRTClassActivator");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IIterable`1", "IIterable`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IBindableIterable", "IBindableIterable");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IIterator`1", "IIterator`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IBindableIterator", "IBindableIterator");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IVector`1", "IVector`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IVector_Raw`1", "IVector_Raw`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IVectorView`1", "IVectorView`1'1");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IBindableVector", "IBindableVector");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IBindableVectorView", "IBindableVectorView");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IMap`2", "IMap`2'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IMapView`2", "IMapView`2'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IKeyValuePair`2", "IKeyValuePair`2'2");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.CLRIKeyValuePairImpl`2", "CLRIKeyValuePairImpl`2'2");
            feature.AddKnownType("System.Runtime.Remoting.IObjectHandle", "IObjectHandle");
            feature.AddKnownType("System.Runtime.Remoting.__HResults", "__HResults");
            feature.AddKnownType("System.Runtime.Remoting.WellKnownObjectMode", "WellKnownObjectMode");
            feature.AddKnownType("System.Runtime.Remoting.DomainSpecificRemotingData", "DomainSpecificRemotingData");
            feature.AddKnownType("System.Runtime.Remoting.RemotingConfigHandler+RemotingConfigInfo", "RemotingConfigInfo");
            feature.AddKnownType("System.Runtime.Remoting.DelayLoadClientChannelEntry", "DelayLoadClientChannelEntry");
            feature.AddKnownType("System.Runtime.Remoting.Identity", "Identity");
            feature.AddKnownType("System.Runtime.Remoting.IdOps", "IdOps");
            feature.AddKnownType("System.Runtime.Remoting.DuplicateIdentityOption", "DuplicateIdentityOption");
            feature.AddKnownType("System.Runtime.Remoting.IdentityHolder", "IdentityHolder");
            feature.AddKnownType("System.Runtime.Remoting.IRemotingTypeInfo", "IRemotingTypeInfo");
            feature.AddKnownType("System.Runtime.Remoting.IChannelInfo", "IChannelInfo");
            feature.AddKnownType("System.Runtime.Remoting.IEnvoyInfo", "IEnvoyInfo");
            feature.AddKnownType("System.Runtime.Remoting.TypeInfo", "TypeInfo");
            feature.AddKnownType("System.Runtime.Remoting.DynamicTypeInfo", "DynamicTypeInfo");
            feature.AddKnownType("System.Runtime.Remoting.ChannelInfo", "ChannelInfo");
            feature.AddKnownType("System.Runtime.Remoting.EnvoyInfo", "EnvoyInfo");
            feature.AddKnownType("System.Runtime.Remoting.ObjRef", "ObjRef");
            feature.AddKnownType("System.Runtime.Remoting.RedirectionProxy", "RedirectionProxy");
            feature.AddKnownType("System.Runtime.Remoting.ComRedirectionProxy", "ComRedirectionProxy");
            feature.AddKnownType("System.Runtime.Remoting.TypeEntry", "TypeEntry");
            feature.AddKnownType("System.Runtime.Remoting.ActivatedClientTypeEntry", "ActivatedClientTypeEntry");
            feature.AddKnownType("System.Runtime.Remoting.ActivatedServiceTypeEntry", "ActivatedServiceTypeEntry");
            feature.AddKnownType("System.Runtime.Remoting.WellKnownClientTypeEntry", "WellKnownClientTypeEntry");
            feature.AddKnownType("System.Runtime.Remoting.WellKnownServiceTypeEntry", "WellKnownServiceTypeEntry");
            feature.AddKnownType("System.Runtime.Remoting.RemoteAppEntry", "RemoteAppEntry");
            feature.AddKnownType("System.Runtime.Remoting.CustomErrorsModes", "CustomErrorsModes");
            feature.AddKnownType("System.Runtime.Remoting.RemotingException", "RemotingException");
            feature.AddKnownType("System.Runtime.Remoting.ServerException", "ServerException");
            feature.AddKnownType("System.Runtime.Remoting.RemotingTimeoutException", "RemotingTimeoutException");
            feature.AddKnownType("System.Runtime.Remoting.InternalRemotingServices", "InternalRemotingServices");
            feature.AddKnownType("System.Runtime.Remoting.ServerIdentity", "ServerIdentity");
            feature.AddKnownType("System.Runtime.Remoting.SoapServices", "SoapServices");
            feature.AddKnownType("System.Runtime.Remoting.ObjectHandle", "ObjectHandle");
            feature.AddKnownType("System.Runtime.Remoting.Activation.LocalActivator", "LocalActivator");
            feature.AddKnownType("System.Runtime.Remoting.Activation.ActivationListener", "ActivationListener");
            feature.AddKnownType("System.Runtime.Remoting.Activation.AppDomainLevelActivator", "AppDomainLevelActivator");
            feature.AddKnownType("System.Runtime.Remoting.Activation.ContextLevelActivator", "ContextLevelActivator");
            feature.AddKnownType("System.Runtime.Remoting.Activation.ConstructionLevelActivator", "ConstructionLevelActivator");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotePropertyHolderAttribute", "RemotePropertyHolderAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Activation.ActivationAttributeStack", "ActivationAttributeStack");
            feature.AddKnownType("System.Runtime.Remoting.Activation.IActivator", "IActivator");
            feature.AddKnownType("System.Runtime.Remoting.Activation.ActivatorLevel", "ActivatorLevel");
            feature.AddKnownType("System.Runtime.Remoting.Activation.IConstructionCallMessage", "IConstructionCallMessage");
            feature.AddKnownType("System.Runtime.Remoting.Activation.IConstructionReturnMessage", "IConstructionReturnMessage");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData", "RemotingXmlConfigFileData");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+ChannelEntry", "ChannelEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+ClientWellKnownEntry", "ClientWellKnownEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+ContextAttributeEntry", "ContextAttributeEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+InteropXmlElementEntry", "InteropXmlElementEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+CustomErrorsEntry", "CustomErrorsEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+InteropXmlTypeEntry", "InteropXmlTypeEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+LifetimeEntry", "LifetimeEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+PreLoadEntry", "PreLoadEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+RemoteAppEntry", "RemoteAppEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+ServerWellKnownEntry", "ServerWellKnownEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+SinkProviderEntry", "SinkProviderEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.RemotingXmlConfigFileData+TypeEntry", "TypeEntry");
            feature.AddKnownType("System.Runtime.Remoting.Activation.UrlAttribute", "UrlAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Channels.Perf_Contexts", "Perf_Contexts");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ChannelServices", "ChannelServices");
            feature.AddKnownType("System.Runtime.Remoting.Channels.RemotingProfilerEvent", "RemotingProfilerEvent");
            feature.AddKnownType("System.Runtime.Remoting.Channels.RegisteredChannel", "RegisteredChannel");
            feature.AddKnownType("System.Runtime.Remoting.Channels.RegisteredChannelList", "RegisteredChannelList");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ChannelServicesData", "ChannelServicesData");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ServerAsyncReplyTerminatorSink", "ServerAsyncReplyTerminatorSink");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IClientChannelSinkStack", "IClientChannelSinkStack");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack", "IClientResponseChannelSinkStack");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ClientChannelSinkStack", "ClientChannelSinkStack");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IServerChannelSinkStack", "IServerChannelSinkStack");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack", "IServerResponseChannelSinkStack");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ServerChannelSinkStack", "ServerChannelSinkStack");
            feature.AddKnownType("System.Runtime.Remoting.Channels.CrossContextChannel", "CrossContextChannel");
            feature.AddKnownType("System.Runtime.Remoting.Channels.AsyncWorkItem", "AsyncWorkItem");
            feature.AddKnownType("System.Runtime.Remoting.Channels.CrossAppDomainChannel", "CrossAppDomainChannel");
            feature.AddKnownType("System.Runtime.Remoting.Channels.CrossAppDomainData", "CrossAppDomainData");
            feature.AddKnownType("System.Runtime.Remoting.Channels.CrossAppDomainSink", "CrossAppDomainSink");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ADAsyncWorkItem", "ADAsyncWorkItem");
            feature.AddKnownType("System.Runtime.Remoting.Channels.DispatchChannelSinkProvider", "DispatchChannelSinkProvider");
            feature.AddKnownType("System.Runtime.Remoting.Channels.DispatchChannelSink", "DispatchChannelSink");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IChannel", "IChannel");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IChannelSender", "IChannelSender");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IChannelReceiver", "IChannelReceiver");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IChannelReceiverHook", "IChannelReceiverHook");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IClientChannelSinkProvider", "IClientChannelSinkProvider");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IServerChannelSinkProvider", "IServerChannelSinkProvider");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IClientFormatterSinkProvider", "IClientFormatterSinkProvider");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IServerFormatterSinkProvider", "IServerFormatterSinkProvider");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IClientChannelSink", "IClientChannelSink");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ServerProcessing", "ServerProcessing");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IServerChannelSink", "IServerChannelSink");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IChannelSinkBase", "IChannelSinkBase");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IClientFormatterSink", "IClientFormatterSink");
            feature.AddKnownType("System.Runtime.Remoting.Channels.IChannelDataStore", "IChannelDataStore");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ChannelDataStore", "ChannelDataStore");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ITransportHeaders", "ITransportHeaders");
            feature.AddKnownType("System.Runtime.Remoting.Channels.TransportHeaders", "TransportHeaders");
            feature.AddKnownType("System.Runtime.Remoting.Channels.SinkProviderData", "SinkProviderData");
            feature.AddKnownType("System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties", "BaseChannelSinkWithProperties");
            feature.AddKnownType("System.Runtime.Remoting.Channels.BaseChannelWithProperties", "BaseChannelWithProperties");
            feature.AddKnownType("System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties", "BaseChannelObjectWithProperties");
            feature.AddKnownType("System.Runtime.Remoting.Channels.DictionaryEnumeratorByKeys", "DictionaryEnumeratorByKeys");
            feature.AddKnownType("System.Runtime.Remoting.Channels.AggregateDictionary", "AggregateDictionary");
            feature.AddKnownType("System.Runtime.Remoting.Channels.ISecurableChannel", "ISecurableChannel");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.Context", "Context");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.CallBackHelper", "CallBackHelper");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.ContextProperty", "ContextProperty");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContextAttribute", "IContextAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContextProperty", "IContextProperty");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContextPropertyActivator", "IContextPropertyActivator");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.ContextAttribute", "ContextAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.DynamicPropertyHolder", "DynamicPropertyHolder");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.ArrayWithSize", "ArrayWithSize");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContributeClientContextSink", "IContributeClientContextSink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContributeDynamicSink", "IContributeDynamicSink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContributeEnvoySink", "IContributeEnvoySink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContributeObjectSink", "IContributeObjectSink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IContributeServerContextSink", "IContributeServerContextSink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IDynamicProperty", "IDynamicProperty");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.IDynamicMessageSink", "IDynamicMessageSink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.SynchronizationAttribute", "SynchronizationAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.SynchronizedServerContextSink", "SynchronizedServerContextSink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.WorkItem", "WorkItem");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.SynchronizedClientContextSink", "SynchronizedClientContextSink");
            feature.AddKnownType("System.Runtime.Remoting.Contexts.SynchronizedClientContextSink+AsyncReplySink", "AsyncReplySink");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.ClientSponsor", "ClientSponsor");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.ILease", "ILease");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.ISponsor", "ISponsor");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.Lease", "Lease");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.Lease+SponsorState", "SponsorState");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.Lease+SponsorStateInfo", "SponsorStateInfo");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.LeaseSink", "LeaseSink");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.LeaseManager", "LeaseManager");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.LeaseManager+SponsorInfo", "SponsorInfo");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.LeaseState", "LeaseState");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.LifetimeServices", "LifetimeServices");
            feature.AddKnownType("System.Runtime.Remoting.Lifetime.LeaseLifeTimeServiceProperty", "LeaseLifeTimeServiceProperty");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.AsyncResult", "AsyncResult");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IInternalMessage", "IInternalMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IMessage", "IMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IMessageCtrl", "IMessageCtrl");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IMessageSink", "IMessageSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IMethodMessage", "IMethodMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IMethodCallMessage", "IMethodCallMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IMethodReturnMessage", "IMethodReturnMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IRemotingFormatter", "IRemotingFormatter");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.Message", "Message");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ConstructorReturnMessage", "ConstructorReturnMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ConstructorCallMessage", "ConstructorCallMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.CCMDictionary", "CCMDictionary");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.CRMDictionary", "CRMDictionary");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MCMDictionary", "MCMDictionary");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MRMDictionary", "MRMDictionary");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MessageDictionary", "MessageDictionary");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MessageDictionaryEnumerator", "MessageDictionaryEnumerator");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.StackBasedReturnMessage", "StackBasedReturnMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ReturnMessage", "ReturnMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MethodCall", "MethodCall");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ConstructionCall", "ConstructionCall");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MethodResponse", "MethodResponse");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ISerializationRootObject", "ISerializationRootObject");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.SerializationMonkey", "SerializationMonkey");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ConstructionResponse", "ConstructionResponse");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.TransitionCall", "TransitionCall");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ArgMapper", "ArgMapper");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ErrorMessage", "ErrorMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.InternalMessageWrapper", "InternalMessageWrapper");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MethodCallMessageWrapper", "MethodCallMessageWrapper");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper", "MethodReturnMessageWrapper");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MessageSmuggler", "MessageSmuggler");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MessageSmuggler+SerializedArg", "SerializedArg");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.SmuggledObjRef", "SmuggledObjRef");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.SmuggledMethodCallMessage", "SmuggledMethodCallMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.SmuggledMethodReturnMessage", "SmuggledMethodReturnMessage");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.OneWayAttribute", "OneWayAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.RemotingSurrogateSelector", "RemotingSurrogateSelector");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.RemotingSurrogate", "RemotingSurrogate");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ObjRefSurrogate", "ObjRefSurrogate");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.SoapMessageSurrogate", "SoapMessageSurrogate");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.MessageSurrogate", "MessageSurrogate");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.StackBuilderSink", "StackBuilderSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.InternalSink", "InternalSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.EnvoyTerminatorSink", "EnvoyTerminatorSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ClientContextTerminatorSink", "ClientContextTerminatorSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.AsyncReplySink", "AsyncReplySink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ServerContextTerminatorSink", "ServerContextTerminatorSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.DisposeSink", "DisposeSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ServerObjectTerminatorSink", "ServerObjectTerminatorSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ClientAsyncReplyTerminatorSink", "ClientAsyncReplyTerminatorSink");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.Header", "Header");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.CallContext", "CallContext");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.ILogicalThreadAffinative", "ILogicalThreadAffinative");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IllogicalCallContext", "IllogicalCallContext");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.IllogicalCallContext+Reader", "Reader");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.LogicalCallContext", "LogicalCallContext");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.LogicalCallContext+Reader", "Reader");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.CallContextSecurityData", "CallContextSecurityData");
            feature.AddKnownType("System.Runtime.Remoting.Messaging.CallContextRemotingData", "CallContextRemotingData");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.RemotingCachedData", "RemotingCachedData");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.RemotingFieldCachedData", "RemotingFieldCachedData");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.RemotingParameterCachedData", "RemotingParameterCachedData");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.RemotingTypeCachedData", "RemotingTypeCachedData");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.RemotingMethodCachedData", "RemotingMethodCachedData");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.SoapOption", "SoapOption");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.XmlFieldOrderOption", "XmlFieldOrderOption");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.SoapTypeAttribute", "SoapTypeAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.SoapMethodAttribute", "SoapMethodAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.SoapFieldAttribute", "SoapFieldAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.SoapParameterAttribute", "SoapParameterAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.SoapAttribute", "SoapAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.ISoapXsd", "ISoapXsd");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDateTime", "SoapDateTime");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDuration", "SoapDuration");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapTime", "SoapTime");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDate", "SoapDate");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYearMonth", "SoapYearMonth");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYear", "SoapYear");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonthDay", "SoapMonthDay");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDay", "SoapDay");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonth", "SoapMonth");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinary", "SoapHexBinary");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapBase64Binary", "SoapBase64Binary");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapInteger", "SoapInteger");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapPositiveInteger", "SoapPositiveInteger");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonPositiveInteger", "SoapNonPositiveInteger");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonNegativeInteger", "SoapNonNegativeInteger");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNegativeInteger", "SoapNegativeInteger");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapAnyUri", "SoapAnyUri");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapQName", "SoapQName");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNotation", "SoapNotation");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNormalizedString", "SoapNormalizedString");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapToken", "SoapToken");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapLanguage", "SoapLanguage");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapName", "SoapName");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdrefs", "SoapIdrefs");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntities", "SoapEntities");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtoken", "SoapNmtoken");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtokens", "SoapNmtokens");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNcName", "SoapNcName");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapId", "SoapId");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdref", "SoapIdref");
            feature.AddKnownType("System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntity", "SoapEntity");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.ProxyAttribute", "ProxyAttribute");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.CallType", "CallType");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.RealProxyFlags", "RealProxyFlags");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.MessageData", "MessageData");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.RealProxy", "RealProxy");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.RemotingProxy", "RemotingProxy");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.AgileAsyncWorkerItem", "AgileAsyncWorkerItem");
            feature.AddKnownType("System.Runtime.Remoting.Proxies.__TransparentProxy", "__TransparentProxy");
            feature.AddKnownType("System.Runtime.Remoting.Services.EnterpriseServicesHelper", "EnterpriseServicesHelper");
            feature.AddKnownType("System.Runtime.Remoting.Services.ITrackingHandler", "ITrackingHandler");
            feature.AddKnownType("System.Runtime.Remoting.Services.TrackingServices", "TrackingServices");
            feature.AddKnownType("System.Runtime.Serialization.FormatterConverter", "FormatterConverter");
            feature.AddKnownType("System.Runtime.Serialization.SurrogateForCyclicalReference", "SurrogateForCyclicalReference");
            feature.AddKnownType("System.Runtime.Serialization.IDeserializationCallback", "IDeserializationCallback");
            feature.AddKnownType("System.Runtime.Serialization.IFormatter", "IFormatter");
            feature.AddKnownType("System.Runtime.Serialization.IFormatterConverter", "IFormatterConverter");
            feature.AddKnownType("System.Runtime.Serialization.IObjectReference", "IObjectReference");
            feature.AddKnownType("System.Runtime.Serialization.ISerializable", "ISerializable");
            feature.AddKnownType("System.Runtime.Serialization.ISerializationSurrogate", "ISerializationSurrogate");
            feature.AddKnownType("System.Runtime.Serialization.ISurrogateSelector", "ISurrogateSelector");
            feature.AddKnownType("System.Runtime.Serialization.MemberHolder", "MemberHolder");
            feature.AddKnownType("System.Runtime.Serialization.OptionalFieldAttribute", "OptionalFieldAttribute");
            feature.AddKnownType("System.Runtime.Serialization.OnSerializingAttribute", "OnSerializingAttribute");
            feature.AddKnownType("System.Runtime.Serialization.OnSerializedAttribute", "OnSerializedAttribute");
            feature.AddKnownType("System.Runtime.Serialization.OnDeserializingAttribute", "OnDeserializingAttribute");
            feature.AddKnownType("System.Runtime.Serialization.OnDeserializedAttribute", "OnDeserializedAttribute");
            feature.AddKnownType("System.Runtime.Serialization.SerializationBinder", "SerializationBinder");
            feature.AddKnownType("System.Runtime.Serialization.SerializationException", "SerializationException");
            feature.AddKnownType("System.Runtime.Serialization.SerializationFieldInfo", "SerializationFieldInfo");
            feature.AddKnownType("System.Runtime.Serialization.SerializationInfo", "SerializationInfo");
            feature.AddKnownType("System.Runtime.Serialization.SerializationEntry", "SerializationEntry");
            feature.AddKnownType("System.Runtime.Serialization.SerializationInfoEnumerator", "SerializationInfoEnumerator");
            feature.AddKnownType("System.Runtime.Serialization.StreamingContext", "StreamingContext");
            feature.AddKnownType("System.Runtime.Serialization.StreamingContextStates", "StreamingContextStates");
            feature.AddKnownType("System.Runtime.Serialization.Formatter", "Formatter");
            feature.AddKnownType("System.Runtime.Serialization.ObjectIDGenerator", "ObjectIDGenerator");
            feature.AddKnownType("System.Runtime.Serialization.ObjectManager", "ObjectManager");
            feature.AddKnownType("System.Runtime.Serialization.ObjectHolder", "ObjectHolder");
            feature.AddKnownType("System.Runtime.Serialization.FixupHolder", "FixupHolder");
            feature.AddKnownType("System.Runtime.Serialization.FixupHolderList", "FixupHolderList");
            feature.AddKnownType("System.Runtime.Serialization.LongList", "LongList");
            feature.AddKnownType("System.Runtime.Serialization.ObjectHolderList", "ObjectHolderList");
            feature.AddKnownType("System.Runtime.Serialization.ObjectHolderListEnumerator", "ObjectHolderListEnumerator");
            feature.AddKnownType("System.Runtime.Serialization.TypeLoadExceptionHolder", "TypeLoadExceptionHolder");
            feature.AddKnownType("System.Runtime.Serialization.SafeSerializationEventArgs", "SafeSerializationEventArgs");
            feature.AddKnownType("System.Runtime.Serialization.ISafeSerializationData", "ISafeSerializationData");
            feature.AddKnownType("System.Runtime.Serialization.SafeSerializationManager", "SafeSerializationManager");
            feature.AddKnownType("System.Runtime.Serialization.SerializationObjectManager", "SerializationObjectManager");
            feature.AddKnownType("System.Runtime.Serialization.SerializationEvents", "SerializationEvents");
            feature.AddKnownType("System.Runtime.Serialization.SurrogateSelector", "SurrogateSelector");
            feature.AddKnownType("System.Runtime.Serialization.SurrogateKey", "SurrogateKey");
            feature.AddKnownType("System.Runtime.Serialization.SurrogateHashtable", "SurrogateHashtable");
            feature.AddKnownType("System.Runtime.Serialization.ValueTypeFixupInfo", "ValueTypeFixupInfo");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.FormatterTypeStyle", "FormatterTypeStyle");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.FormatterAssemblyStyle", "FormatterAssemblyStyle");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.TypeFilterLevel", "TypeFilterLevel");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.ISoapMessage", "ISoapMessage");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.IFieldInfo", "IFieldInfo");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.InternalRM", "InternalRM");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.InternalST", "InternalST");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.SoapMessage", "SoapMessage");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.SoapFault", "SoapFault");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.ServerFault", "ServerFault");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum", "BinaryHeaderEnum");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum", "BinaryTypeEnum");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum", "BinaryArrayTypeEnum");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalSerializerTypeE", "InternalSerializerTypeE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalElementTypeE", "InternalElementTypeE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE", "InternalParseTypeE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalObjectTypeE", "InternalObjectTypeE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalObjectPositionE", "InternalObjectPositionE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalArrayTypeE", "InternalArrayTypeE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalMemberTypeE", "InternalMemberTypeE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalMemberValueE", "InternalMemberValueE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalParseStateE", "InternalParseStateE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE", "InternalPrimitiveTypeE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.MessageEnum", "MessageEnum");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ValueFixupEnum", "ValueFixupEnum");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalNameSpaceE", "InternalNameSpaceE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.SoapAttributeType", "SoapAttributeType");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryFormatter", "BinaryFormatter");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.__BinaryParser", "__BinaryParser");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.__BinaryWriter", "__BinaryWriter");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectMapInfo", "ObjectMapInfo");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.IStreamable", "IStreamable");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo", "BinaryAssemblyInfo");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.SerializationHeaderRecord", "SerializationHeaderRecord");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryAssembly", "BinaryAssembly");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainAssembly", "BinaryCrossAppDomainAssembly");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryObject", "BinaryObject");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryMethodCall", "BinaryMethodCall");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryMethodReturn", "BinaryMethodReturn");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryObjectString", "BinaryObjectString");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainString", "BinaryCrossAppDomainString");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainMap", "BinaryCrossAppDomainMap");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveTyped", "MemberPrimitiveTyped");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMap", "BinaryObjectWithMap");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMapTyped", "BinaryObjectWithMapTyped");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryArray", "BinaryArray");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveUnTyped", "MemberPrimitiveUnTyped");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.MemberReference", "MemberReference");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectNull", "ObjectNull");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.MessageEnd", "MessageEnd");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectMap", "ObjectMap");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectProgress", "ObjectProgress");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ParseRecord", "ParseRecord");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.SerStack", "SerStack");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.SizedArray", "SizedArray");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.IntSizedArray", "IntSizedArray");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.NameCache", "NameCache");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ValueFixup", "ValueFixup");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.InternalFE", "InternalFE");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.NameInfo", "NameInfo");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.PrimitiveArray", "PrimitiveArray");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectReader", "ObjectReader");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectReader+TypeNAssembly", "TypeNAssembly");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectReader+TopLevelAssemblyTypeResolver", "TopLevelAssemblyTypeResolver");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ObjectWriter", "ObjectWriter");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.Converter", "Converter");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo", "WriteObjectInfo");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo", "ReadObjectInfo");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit", "SerObjectInfoInit");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.SerObjectInfoCache", "SerObjectInfoCache");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.TypeInformation", "TypeInformation");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryMethodCallMessage", "BinaryMethodCallMessage");
            feature.AddKnownType("System.Runtime.Serialization.Formatters.Binary.BinaryMethodReturnMessage", "BinaryMethodReturnMessage");
            feature.AddKnownType("System.Runtime.Versioning.ComponentGuaranteesOptions", "ComponentGuaranteesOptions");
            feature.AddKnownType("System.Runtime.Versioning.ComponentGuaranteesAttribute", "ComponentGuaranteesAttribute");
            feature.AddKnownType("System.Runtime.Versioning.ResourceConsumptionAttribute", "ResourceConsumptionAttribute");
            feature.AddKnownType("System.Runtime.Versioning.ResourceExposureAttribute", "ResourceExposureAttribute");
            feature.AddKnownType("System.Runtime.Versioning.ResourceScope", "ResourceScope");
            feature.AddKnownType("System.Runtime.Versioning.SxSRequirements", "SxSRequirements");
            feature.AddKnownType("System.Runtime.Versioning.TargetFrameworkAttribute", "TargetFrameworkAttribute");
            feature.AddKnownType("System.Runtime.Versioning.TargetFrameworkId", "TargetFrameworkId");
            feature.AddKnownType("System.Runtime.Versioning.NonVersionableAttribute", "NonVersionableAttribute");
            feature.AddKnownType("System.Security.SecurityElementType", "SecurityElementType");
            feature.AddKnownType("System.Security.ISecurityElementFactory", "ISecurityElementFactory");
            feature.AddKnownType("System.Security.SecurityElement", "SecurityElement");
            feature.AddKnownType("System.Security.SecurityDocumentElement", "SecurityDocumentElement");
            feature.AddKnownType("System.Security.SecurityDocument", "SecurityDocument");
            feature.AddKnownType("System.Security.XmlSyntaxException", "XmlSyntaxException");
            feature.AddKnownType("System.Security.DynamicSecurityMethodAttribute", "DynamicSecurityMethodAttribute");
            feature.AddKnownType("System.Security.SuppressUnmanagedCodeSecurityAttribute", "SuppressUnmanagedCodeSecurityAttribute");
            feature.AddKnownType("System.Security.UnverifiableCodeAttribute", "UnverifiableCodeAttribute");
            feature.AddKnownType("System.Security.AllowPartiallyTrustedCallersAttribute", "AllowPartiallyTrustedCallersAttribute");
            feature.AddKnownType("System.Security.PartialTrustVisibilityLevel", "PartialTrustVisibilityLevel");
            feature.AddKnownType("System.Security.SecurityCriticalScope", "SecurityCriticalScope");
            feature.AddKnownType("System.Security.SecurityCriticalAttribute", "SecurityCriticalAttribute");
            feature.AddKnownType("System.Security.SecurityTreatAsSafeAttribute", "SecurityTreatAsSafeAttribute");
            feature.AddKnownType("System.Security.SecuritySafeCriticalAttribute", "SecuritySafeCriticalAttribute");
            feature.AddKnownType("System.Security.SecurityTransparentAttribute", "SecurityTransparentAttribute");
            feature.AddKnownType("System.Security.SecurityRuleSet", "SecurityRuleSet");
            feature.AddKnownType("System.Security.SecurityRulesAttribute", "SecurityRulesAttribute");
            feature.AddKnownType("System.Security.CodeAccessPermission", "CodeAccessPermission");
            feature.AddKnownType("System.Security.PermissionType", "PermissionType");
            feature.AddKnownType("System.Security.IEvidenceFactory", "IEvidenceFactory");
            feature.AddKnownType("System.Security.IPermission", "IPermission");
            feature.AddKnownType("System.Security.ISecurityEncodable", "ISecurityEncodable");
            feature.AddKnownType("System.Security.ISecurityPolicyEncodable", "ISecurityPolicyEncodable");
            feature.AddKnownType("System.Security.IStackWalk", "IStackWalk");
            feature.AddKnownType("System.Security.FrameSecurityDescriptor", "FrameSecurityDescriptor");
            feature.AddKnownType("System.Security.FrameSecurityDescriptorWithResolver", "FrameSecurityDescriptorWithResolver");
            feature.AddKnownType("System.Security.HostSecurityManagerOptions", "HostSecurityManagerOptions");
            feature.AddKnownType("System.Security.HostSecurityManager", "HostSecurityManager");
            feature.AddKnownType("System.Security.NamedPermissionSet", "NamedPermissionSet");
            feature.AddKnownType("System.Security.PermissionSetEnumerator", "PermissionSetEnumerator");
            feature.AddKnownType("System.Security.PermissionSetEnumeratorInternal", "PermissionSetEnumeratorInternal");
            feature.AddKnownType("System.Security.SpecialPermissionSetFlag", "SpecialPermissionSetFlag");
            feature.AddKnownType("System.Security.PermissionSet", "PermissionSet");
            feature.AddKnownType("System.Security.PermissionSet+IsSubsetOfType", "IsSubsetOfType");
            feature.AddKnownType("System.Security.PermissionTokenType", "PermissionTokenType");
            feature.AddKnownType("System.Security.PermissionTokenKeyComparer", "PermissionTokenKeyComparer");
            feature.AddKnownType("System.Security.PermissionToken", "PermissionToken");
            feature.AddKnownType("System.Security.PermissionTokenFactory", "PermissionTokenFactory");
            feature.AddKnownType("System.Security.PermissionSetTriple", "PermissionSetTriple");
            feature.AddKnownType("System.Security.PermissionListSet", "PermissionListSet");
            feature.AddKnownType("System.Security.PolicyManager", "PolicyManager");
            feature.AddKnownType("System.Security.ReadOnlyPermissionSet", "ReadOnlyPermissionSet");
            feature.AddKnownType("System.Security.ReadOnlyPermissionSetEnumerator", "ReadOnlyPermissionSetEnumerator");
            feature.AddKnownType("System.Security.SecureString", "SecureString");
            feature.AddKnownType("System.Security.SafeBSTRHandle", "SafeBSTRHandle");
            feature.AddKnownType("System.Security.SecurityContextSource", "SecurityContextSource");
            feature.AddKnownType("System.Security.SecurityContextDisableFlow", "SecurityContextDisableFlow");
            feature.AddKnownType("System.Security.WindowsImpersonationFlowMode", "WindowsImpersonationFlowMode");
            feature.AddKnownType("System.Security.SecurityContextSwitcher", "SecurityContextSwitcher");
            feature.AddKnownType("System.Security.SecurityContext", "SecurityContext");
            feature.AddKnownType("System.Security.SecurityContext+Reader", "Reader");
            feature.AddKnownType("System.Security.SecurityContext+SecurityContextRunData", "SecurityContextRunData");
            feature.AddKnownType("System.Security.SecurityException", "SecurityException");
            feature.AddKnownType("System.Security.SecurityState", "SecurityState");
            feature.AddKnownType("System.Security.HostProtectionException", "HostProtectionException");
            feature.AddKnownType("System.Security.PolicyLevelType", "PolicyLevelType");
            feature.AddKnownType("System.Security.SecurityRuntime", "SecurityRuntime");
            feature.AddKnownType("System.Security.SecurityZone", "SecurityZone");
            feature.AddKnownType("System.Security.VerificationException", "VerificationException");
            feature.AddKnownType("System.Security.AccessControl.InheritanceFlags", "InheritanceFlags");
            feature.AddKnownType("System.Security.AccessControl.PropagationFlags", "PropagationFlags");
            feature.AddKnownType("System.Security.AccessControl.AuditFlags", "AuditFlags");
            feature.AddKnownType("System.Security.AccessControl.SecurityInfos", "SecurityInfos");
            feature.AddKnownType("System.Security.AccessControl.ResourceType", "ResourceType");
            feature.AddKnownType("System.Security.AccessControl.AccessControlSections", "AccessControlSections");
            feature.AddKnownType("System.Security.AccessControl.AccessControlActions", "AccessControlActions");
            feature.AddKnownType("System.Security.AccessControl.AceType", "AceType");
            feature.AddKnownType("System.Security.AccessControl.AceFlags", "AceFlags");
            feature.AddKnownType("System.Security.AccessControl.GenericAce", "GenericAce");
            feature.AddKnownType("System.Security.AccessControl.KnownAce", "KnownAce");
            feature.AddKnownType("System.Security.AccessControl.CustomAce", "CustomAce");
            feature.AddKnownType("System.Security.AccessControl.CompoundAceType", "CompoundAceType");
            feature.AddKnownType("System.Security.AccessControl.CompoundAce", "CompoundAce");
            feature.AddKnownType("System.Security.AccessControl.AceQualifier", "AceQualifier");
            feature.AddKnownType("System.Security.AccessControl.QualifiedAce", "QualifiedAce");
            feature.AddKnownType("System.Security.AccessControl.CommonAce", "CommonAce");
            feature.AddKnownType("System.Security.AccessControl.ObjectAceFlags", "ObjectAceFlags");
            feature.AddKnownType("System.Security.AccessControl.ObjectAce", "ObjectAce");
            feature.AddKnownType("System.Security.AccessControl.AceEnumerator", "AceEnumerator");
            feature.AddKnownType("System.Security.AccessControl.GenericAcl", "GenericAcl");
            feature.AddKnownType("System.Security.AccessControl.RawAcl", "RawAcl");
            feature.AddKnownType("System.Security.AccessControl.CommonAcl", "CommonAcl");
            feature.AddKnownType("System.Security.AccessControl.SystemAcl", "SystemAcl");
            feature.AddKnownType("System.Security.AccessControl.DiscretionaryAcl", "DiscretionaryAcl");
            feature.AddKnownType("System.Security.AccessControl.CryptoKeyRights", "CryptoKeyRights");
            feature.AddKnownType("System.Security.AccessControl.CryptoKeyAccessRule", "CryptoKeyAccessRule");
            feature.AddKnownType("System.Security.AccessControl.CryptoKeyAuditRule", "CryptoKeyAuditRule");
            feature.AddKnownType("System.Security.AccessControl.CryptoKeySecurity", "CryptoKeySecurity");
            feature.AddKnownType("System.Security.AccessControl.EventWaitHandleRights", "EventWaitHandleRights");
            feature.AddKnownType("System.Security.AccessControl.EventWaitHandleAccessRule", "EventWaitHandleAccessRule");
            feature.AddKnownType("System.Security.AccessControl.EventWaitHandleAuditRule", "EventWaitHandleAuditRule");
            feature.AddKnownType("System.Security.AccessControl.EventWaitHandleSecurity", "EventWaitHandleSecurity");
            feature.AddKnownType("System.Security.AccessControl.FileSystemRights", "FileSystemRights");
            feature.AddKnownType("System.Security.AccessControl.FileSystemAccessRule", "FileSystemAccessRule");
            feature.AddKnownType("System.Security.AccessControl.FileSystemAuditRule", "FileSystemAuditRule");
            feature.AddKnownType("System.Security.AccessControl.FileSystemSecurity", "FileSystemSecurity");
            feature.AddKnownType("System.Security.AccessControl.FileSecurity", "FileSecurity");
            feature.AddKnownType("System.Security.AccessControl.DirectorySecurity", "DirectorySecurity");
            feature.AddKnownType("System.Security.AccessControl.MutexRights", "MutexRights");
            feature.AddKnownType("System.Security.AccessControl.MutexAccessRule", "MutexAccessRule");
            feature.AddKnownType("System.Security.AccessControl.MutexAuditRule", "MutexAuditRule");
            feature.AddKnownType("System.Security.AccessControl.MutexSecurity", "MutexSecurity");
            feature.AddKnownType("System.Security.AccessControl.NativeObjectSecurity", "NativeObjectSecurity");
            feature.AddKnownType("System.Security.AccessControl.AccessControlModification", "AccessControlModification");
            feature.AddKnownType("System.Security.AccessControl.ObjectSecurity", "ObjectSecurity");
            feature.AddKnownType("System.Security.AccessControl.ObjectSecurity`1", "ObjectSecurity`1'1");
            feature.AddKnownType("System.Security.AccessControl.AccessRule`1", "AccessRule`1'1");
            feature.AddKnownType("System.Security.AccessControl.AccessRule", "AccessRule");
            feature.AddKnownType("System.Security.AccessControl.AuditRule`1", "AuditRule`1'1");
            feature.AddKnownType("System.Security.AccessControl.AuditRule", "AuditRule");
            feature.AddKnownType("System.Security.AccessControl.CommonObjectSecurity", "CommonObjectSecurity");
            feature.AddKnownType("System.Security.AccessControl.DirectoryObjectSecurity", "DirectoryObjectSecurity");
            feature.AddKnownType("System.Security.AccessControl.Privilege", "Privilege");
            feature.AddKnownType("System.Security.AccessControl.PrivilegeNotHeldException", "PrivilegeNotHeldException");
            feature.AddKnownType("System.Security.AccessControl.RegistryRights", "RegistryRights");
            feature.AddKnownType("System.Security.AccessControl.RegistryAccessRule", "RegistryAccessRule");
            feature.AddKnownType("System.Security.AccessControl.RegistryAuditRule", "RegistryAuditRule");
            feature.AddKnownType("System.Security.AccessControl.RegistrySecurity", "RegistrySecurity");
            feature.AddKnownType("System.Security.AccessControl.AccessControlType", "AccessControlType");
            feature.AddKnownType("System.Security.AccessControl.AuthorizationRule", "AuthorizationRule");
            feature.AddKnownType("System.Security.AccessControl.ObjectAccessRule", "ObjectAccessRule");
            feature.AddKnownType("System.Security.AccessControl.ObjectAuditRule", "ObjectAuditRule");
            feature.AddKnownType("System.Security.AccessControl.AuthorizationRuleCollection", "AuthorizationRuleCollection");
            feature.AddKnownType("System.Security.AccessControl.ControlFlags", "ControlFlags");
            feature.AddKnownType("System.Security.AccessControl.GenericSecurityDescriptor", "GenericSecurityDescriptor");
            feature.AddKnownType("System.Security.AccessControl.RawSecurityDescriptor", "RawSecurityDescriptor");
            feature.AddKnownType("System.Security.AccessControl.CommonSecurityDescriptor", "CommonSecurityDescriptor");
            feature.AddKnownType("System.Security.Claims.Claim", "Claim");
            feature.AddKnownType("System.Security.Claims.ClaimsIdentity", "ClaimsIdentity");
            feature.AddKnownType("System.Security.Claims.ClaimsPrincipal", "ClaimsPrincipal");
            feature.AddKnownType("System.Security.Claims.RoleClaimProvider", "RoleClaimProvider");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+AlgorithmClass", "AlgorithmClass");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+AlgorithmType", "AlgorithmType");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+AlgorithmSubId", "AlgorithmSubId");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+AlgorithmID", "AlgorithmID");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+CryptAcquireContextFlags", "CryptAcquireContextFlags");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+ErrorCode", "ErrorCode");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+HashProperty", "HashProperty");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+KeyGenerationFlags", "KeyGenerationFlags");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+KeyProperty", "KeyProperty");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+KeySpec", "KeySpec");
            feature.AddKnownType("System.Security.Cryptography.CapiNative+ProviderType", "ProviderType");
            feature.AddKnownType("System.Security.Cryptography.SafeCspHandle", "SafeCspHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeCspHashHandle", "SafeCspHashHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeCspKeyHandle", "SafeCspKeyHandle");
            feature.AddKnownType("System.Security.Cryptography.CipherMode", "CipherMode");
            feature.AddKnownType("System.Security.Cryptography.PaddingMode", "PaddingMode");
            feature.AddKnownType("System.Security.Cryptography.KeySizes", "KeySizes");
            feature.AddKnownType("System.Security.Cryptography.CryptographicException", "CryptographicException");
            feature.AddKnownType("System.Security.Cryptography.CryptographicUnexpectedOperationException", "CryptographicUnexpectedOperationException");
            feature.AddKnownType("System.Security.Cryptography.ICryptoTransform", "ICryptoTransform");
            feature.AddKnownType("System.Security.Cryptography.RandomNumberGenerator", "RandomNumberGenerator");
            feature.AddKnownType("System.Security.Cryptography.RNGCryptoServiceProvider", "RNGCryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.Aes", "Aes");
            feature.AddKnownType("System.Security.Cryptography.AsymmetricAlgorithm", "AsymmetricAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.AsymmetricKeyExchangeDeformatter", "AsymmetricKeyExchangeDeformatter");
            feature.AddKnownType("System.Security.Cryptography.AsymmetricKeyExchangeFormatter", "AsymmetricKeyExchangeFormatter");
            feature.AddKnownType("System.Security.Cryptography.AsymmetricSignatureDeformatter", "AsymmetricSignatureDeformatter");
            feature.AddKnownType("System.Security.Cryptography.AsymmetricSignatureFormatter", "AsymmetricSignatureFormatter");
            feature.AddKnownType("System.Security.Cryptography.FromBase64TransformMode", "FromBase64TransformMode");
            feature.AddKnownType("System.Security.Cryptography.ToBase64Transform", "ToBase64Transform");
            feature.AddKnownType("System.Security.Cryptography.FromBase64Transform", "FromBase64Transform");
            feature.AddKnownType("System.Security.Cryptography.CryptoAPITransformMode", "CryptoAPITransformMode");
            feature.AddKnownType("System.Security.Cryptography.CryptoAPITransform", "CryptoAPITransform");
            feature.AddKnownType("System.Security.Cryptography.CspProviderFlags", "CspProviderFlags");
            feature.AddKnownType("System.Security.Cryptography.CspParameters", "CspParameters");
            feature.AddKnownType("System.Security.Cryptography.CryptoConfig", "CryptoConfig");
            feature.AddKnownType("System.Security.Cryptography.CryptoStreamMode", "CryptoStreamMode");
            feature.AddKnownType("System.Security.Cryptography.CryptoStream", "CryptoStream");
            feature.AddKnownType("System.Security.Cryptography.DES", "DES");
            feature.AddKnownType("System.Security.Cryptography.DESCryptoServiceProvider", "DESCryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.DeriveBytes", "DeriveBytes");
            feature.AddKnownType("System.Security.Cryptography.DSAParameters", "DSAParameters");
            feature.AddKnownType("System.Security.Cryptography.DSA", "DSA");
            feature.AddKnownType("System.Security.Cryptography.DSACspObject", "DSACspObject");
            feature.AddKnownType("System.Security.Cryptography.DSACryptoServiceProvider", "DSACryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.DSASignatureDeformatter", "DSASignatureDeformatter");
            feature.AddKnownType("System.Security.Cryptography.DSASignatureFormatter", "DSASignatureFormatter");
            feature.AddKnownType("System.Security.Cryptography.HMAC", "HMAC");
            feature.AddKnownType("System.Security.Cryptography.HMACMD5", "HMACMD5");
            feature.AddKnownType("System.Security.Cryptography.HMACRIPEMD160", "HMACRIPEMD160");
            feature.AddKnownType("System.Security.Cryptography.HMACSHA1", "HMACSHA1");
            feature.AddKnownType("System.Security.Cryptography.HMACSHA256", "HMACSHA256");
            feature.AddKnownType("System.Security.Cryptography.HMACSHA384", "HMACSHA384");
            feature.AddKnownType("System.Security.Cryptography.HMACSHA512", "HMACSHA512");
            feature.AddKnownType("System.Security.Cryptography.HashAlgorithm", "HashAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.HashAlgorithmName", "HashAlgorithmName");
            feature.AddKnownType("System.Security.Cryptography.KeyNumber", "KeyNumber");
            feature.AddKnownType("System.Security.Cryptography.CspKeyContainerInfo", "CspKeyContainerInfo");
            feature.AddKnownType("System.Security.Cryptography.ICspAsymmetricAlgorithm", "ICspAsymmetricAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.KeyedHashAlgorithm", "KeyedHashAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.MACTripleDES", "MACTripleDES");
            feature.AddKnownType("System.Security.Cryptography.TailStream", "TailStream");
            feature.AddKnownType("System.Security.Cryptography.MD5", "MD5");
            feature.AddKnownType("System.Security.Cryptography.MD5CryptoServiceProvider", "MD5CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.MaskGenerationMethod", "MaskGenerationMethod");
            feature.AddKnownType("System.Security.Cryptography.PasswordDeriveBytes", "PasswordDeriveBytes");
            feature.AddKnownType("System.Security.Cryptography.PKCS1MaskGenerationMethod", "PKCS1MaskGenerationMethod");
            feature.AddKnownType("System.Security.Cryptography.RC2", "RC2");
            feature.AddKnownType("System.Security.Cryptography.RC2CryptoServiceProvider", "RC2CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.Rfc2898DeriveBytes", "Rfc2898DeriveBytes");
            feature.AddKnownType("System.Security.Cryptography.RIPEMD160", "RIPEMD160");
            feature.AddKnownType("System.Security.Cryptography.RIPEMD160Managed", "RIPEMD160Managed");
            feature.AddKnownType("System.Security.Cryptography.RSAParameters", "RSAParameters");
            feature.AddKnownType("System.Security.Cryptography.RSA", "RSA");
            feature.AddKnownType("System.Security.Cryptography.RSASignaturePadding", "RSASignaturePadding");
            feature.AddKnownType("System.Security.Cryptography.RSASignaturePaddingMode", "RSASignaturePaddingMode");
            feature.AddKnownType("System.Security.Cryptography.RSACspObject", "RSACspObject");
            feature.AddKnownType("System.Security.Cryptography.RSACryptoServiceProvider", "RSACryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.RSAEncryptionPadding", "RSAEncryptionPadding");
            feature.AddKnownType("System.Security.Cryptography.RSAEncryptionPaddingMode", "RSAEncryptionPaddingMode");
            feature.AddKnownType("System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter", "RSAOAEPKeyExchangeDeformatter");
            feature.AddKnownType("System.Security.Cryptography.RSAOAEPKeyExchangeFormatter", "RSAOAEPKeyExchangeFormatter");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter", "RSAPKCS1KeyExchangeDeformatter");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter", "RSAPKCS1KeyExchangeFormatter");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1SignatureDeformatter", "RSAPKCS1SignatureDeformatter");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1SignatureFormatter", "RSAPKCS1SignatureFormatter");
            feature.AddKnownType("System.Security.Cryptography.Rijndael", "Rijndael");
            feature.AddKnownType("System.Security.Cryptography.RijndaelManaged", "RijndaelManaged");
            feature.AddKnownType("System.Security.Cryptography.RijndaelManagedTransformMode", "RijndaelManagedTransformMode");
            feature.AddKnownType("System.Security.Cryptography.RijndaelManagedTransform", "RijndaelManagedTransform");
            feature.AddKnownType("System.Security.Cryptography.SafeProvHandle", "SafeProvHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeKeyHandle", "SafeKeyHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeHashHandle", "SafeHashHandle");
            feature.AddKnownType("System.Security.Cryptography.SHA1", "SHA1");
            feature.AddKnownType("System.Security.Cryptography.SHA1CryptoServiceProvider", "SHA1CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.SHA1Managed", "SHA1Managed");
            feature.AddKnownType("System.Security.Cryptography.SHA256", "SHA256");
            feature.AddKnownType("System.Security.Cryptography.SHA256Managed", "SHA256Managed");
            feature.AddKnownType("System.Security.Cryptography.SHA384", "SHA384");
            feature.AddKnownType("System.Security.Cryptography.SHA384Managed", "SHA384Managed");
            feature.AddKnownType("System.Security.Cryptography.SHA512", "SHA512");
            feature.AddKnownType("System.Security.Cryptography.SHA512Managed", "SHA512Managed");
            feature.AddKnownType("System.Security.Cryptography.SignatureDescription", "SignatureDescription");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1SignatureDescription", "RSAPKCS1SignatureDescription");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1SHA1SignatureDescription", "RSAPKCS1SHA1SignatureDescription");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1SHA256SignatureDescription", "RSAPKCS1SHA256SignatureDescription");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1SHA384SignatureDescription", "RSAPKCS1SHA384SignatureDescription");
            feature.AddKnownType("System.Security.Cryptography.RSAPKCS1SHA512SignatureDescription", "RSAPKCS1SHA512SignatureDescription");
            feature.AddKnownType("System.Security.Cryptography.DSASignatureDescription", "DSASignatureDescription");
            feature.AddKnownType("System.Security.Cryptography.SymmetricAlgorithm", "SymmetricAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.TripleDES", "TripleDES");
            feature.AddKnownType("System.Security.Cryptography.TripleDESCryptoServiceProvider", "TripleDESCryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.CspAlgorithmType", "CspAlgorithmType");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.SafeCertContextHandle", "SafeCertContextHandle");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.SafeCertStoreHandle", "SafeCertStoreHandle");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.OidGroup", "OidGroup");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.OidKeyType", "OidKeyType");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.CRYPT_OID_INFO", "CRYPT_OID_INFO");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ContentType", "X509ContentType");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509KeyStorageFlags", "X509KeyStorageFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Certificate", "X509Certificate");
            feature.AddKnownType("System.Security.Permissions.EnvironmentPermissionAccess", "EnvironmentPermissionAccess");
            feature.AddKnownType("System.Security.Permissions.EnvironmentStringExpressionSet", "EnvironmentStringExpressionSet");
            feature.AddKnownType("System.Security.Permissions.EnvironmentPermission", "EnvironmentPermission");
            feature.AddKnownType("System.Security.Permissions.FileDialogPermissionAccess", "FileDialogPermissionAccess");
            feature.AddKnownType("System.Security.Permissions.FileDialogPermission", "FileDialogPermission");
            feature.AddKnownType("System.Security.Permissions.FileIOPermissionAccess", "FileIOPermissionAccess");
            feature.AddKnownType("System.Security.Permissions.FileIOPermission", "FileIOPermission");
            feature.AddKnownType("System.Security.Permissions.FileIOAccess", "FileIOAccess");
            feature.AddKnownType("System.Security.Permissions.HostProtectionResource", "HostProtectionResource");
            feature.AddKnownType("System.Security.Permissions.HostProtectionAttribute", "HostProtectionAttribute");
            feature.AddKnownType("System.Security.Permissions.HostProtectionPermission", "HostProtectionPermission");
            feature.AddKnownType("System.Security.Permissions.IBuiltInPermission", "IBuiltInPermission");
            feature.AddKnownType("System.Security.Permissions.BuiltInPermissionFlag", "BuiltInPermissionFlag");
            feature.AddKnownType("System.Security.Permissions.IsolatedStorageContainment", "IsolatedStorageContainment");
            feature.AddKnownType("System.Security.Permissions.IsolatedStoragePermission", "IsolatedStoragePermission");
            feature.AddKnownType("System.Security.Permissions.IsolatedStorageFilePermission", "IsolatedStorageFilePermission");
            feature.AddKnownType("System.Security.Permissions.PermissionState", "PermissionState");
            feature.AddKnownType("System.Security.Permissions.SecurityAction", "SecurityAction");
            feature.AddKnownType("System.Security.Permissions.SecurityAttribute", "SecurityAttribute");
            feature.AddKnownType("System.Security.Permissions.CodeAccessSecurityAttribute", "CodeAccessSecurityAttribute");
            feature.AddKnownType("System.Security.Permissions.EnvironmentPermissionAttribute", "EnvironmentPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.FileDialogPermissionAttribute", "FileDialogPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.FileIOPermissionAttribute", "FileIOPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.KeyContainerPermissionAttribute", "KeyContainerPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.PrincipalPermissionAttribute", "PrincipalPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.ReflectionPermissionAttribute", "ReflectionPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.RegistryPermissionAttribute", "RegistryPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.SecurityPermissionAttribute", "SecurityPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.UIPermissionAttribute", "UIPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.ZoneIdentityPermissionAttribute", "ZoneIdentityPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.StrongNameIdentityPermissionAttribute", "StrongNameIdentityPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.SiteIdentityPermissionAttribute", "SiteIdentityPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.UrlIdentityPermissionAttribute", "UrlIdentityPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.PublisherIdentityPermissionAttribute", "PublisherIdentityPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.IsolatedStoragePermissionAttribute", "IsolatedStoragePermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.IsolatedStorageFilePermissionAttribute", "IsolatedStorageFilePermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.PermissionSetAttribute", "PermissionSetAttribute");
            feature.AddKnownType("System.Security.Permissions.ReflectionPermissionFlag", "ReflectionPermissionFlag");
            feature.AddKnownType("System.Security.Permissions.ReflectionPermission", "ReflectionPermission");
            feature.AddKnownType("System.Security.Permissions.IDRole", "IDRole");
            feature.AddKnownType("System.Security.Permissions.PrincipalPermission", "PrincipalPermission");
            feature.AddKnownType("System.Security.Permissions.SecurityPermissionFlag", "SecurityPermissionFlag");
            feature.AddKnownType("System.Security.Permissions.SecurityPermission", "SecurityPermission");
            feature.AddKnownType("System.Security.Permissions.SiteIdentityPermission", "SiteIdentityPermission");
            feature.AddKnownType("System.Security.Permissions.StrongName2", "StrongName2");
            feature.AddKnownType("System.Security.Permissions.StrongNameIdentityPermission", "StrongNameIdentityPermission");
            feature.AddKnownType("System.Security.Permissions.StrongNamePublicKeyBlob", "StrongNamePublicKeyBlob");
            feature.AddKnownType("System.Security.Permissions.UIPermissionWindow", "UIPermissionWindow");
            feature.AddKnownType("System.Security.Permissions.UIPermissionClipboard", "UIPermissionClipboard");
            feature.AddKnownType("System.Security.Permissions.UIPermission", "UIPermission");
            feature.AddKnownType("System.Security.Permissions.UrlIdentityPermission", "UrlIdentityPermission");
            feature.AddKnownType("System.Security.Permissions.ZoneIdentityPermission", "ZoneIdentityPermission");
            feature.AddKnownType("System.Security.Permissions.GacIdentityPermissionAttribute", "GacIdentityPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.GacIdentityPermission", "GacIdentityPermission");
            feature.AddKnownType("System.Security.Permissions.IUnrestrictedPermission", "IUnrestrictedPermission");
            feature.AddKnownType("System.Security.Permissions.KeyContainerPermissionFlags", "KeyContainerPermissionFlags");
            feature.AddKnownType("System.Security.Permissions.KeyContainerPermissionAccessEntry", "KeyContainerPermissionAccessEntry");
            feature.AddKnownType("System.Security.Permissions.KeyContainerPermissionAccessEntryCollection", "KeyContainerPermissionAccessEntryCollection");
            feature.AddKnownType("System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator", "KeyContainerPermissionAccessEntryEnumerator");
            feature.AddKnownType("System.Security.Permissions.KeyContainerPermission", "KeyContainerPermission");
            feature.AddKnownType("System.Security.Permissions.PublisherIdentityPermission", "PublisherIdentityPermission");
            feature.AddKnownType("System.Security.Permissions.RegistryPermissionAccess", "RegistryPermissionAccess");
            feature.AddKnownType("System.Security.Permissions.RegistryPermission", "RegistryPermission");
            feature.AddKnownType("System.Security.Policy.AllMembershipCondition", "AllMembershipCondition");
            feature.AddKnownType("System.Security.Policy.AppDomainEvidenceFactory", "AppDomainEvidenceFactory");
            feature.AddKnownType("System.Security.Policy.ApplicationDirectory", "ApplicationDirectory");
            feature.AddKnownType("System.Security.Policy.ApplicationDirectoryMembershipCondition", "ApplicationDirectoryMembershipCondition");
            feature.AddKnownType("System.Security.Policy.ApplicationSecurityInfo", "ApplicationSecurityInfo");
            feature.AddKnownType("System.Security.Policy.ApplicationVersionMatch", "ApplicationVersionMatch");
            feature.AddKnownType("System.Security.Policy.ApplicationTrust", "ApplicationTrust");
            feature.AddKnownType("System.Security.Policy.ApplicationTrustCollection", "ApplicationTrustCollection");
            feature.AddKnownType("System.Security.Policy.ApplicationTrustEnumerator", "ApplicationTrustEnumerator");
            feature.AddKnownType("System.Security.Policy.AssemblyEvidenceFactory", "AssemblyEvidenceFactory");
            feature.AddKnownType("System.Security.Policy.IUnionSemanticCodeGroup", "IUnionSemanticCodeGroup");
            feature.AddKnownType("System.Security.Policy.CodeGroup", "CodeGroup");
            feature.AddKnownType("System.Security.Policy.CodeGroupPositionMarker", "CodeGroupPositionMarker");
            feature.AddKnownType("System.Security.Policy.Evidence", "Evidence");
            feature.AddKnownType("System.Security.Policy.Evidence+RawEvidenceEnumerator", "RawEvidenceEnumerator");
            feature.AddKnownType("System.Security.Policy.EvidenceBase", "EvidenceBase");
            feature.AddKnownType("System.Security.Policy.ILegacyEvidenceAdapter", "ILegacyEvidenceAdapter");
            feature.AddKnownType("System.Security.Policy.LegacyEvidenceWrapper", "LegacyEvidenceWrapper");
            feature.AddKnownType("System.Security.Policy.LegacyEvidenceList", "LegacyEvidenceList");
            feature.AddKnownType("System.Security.Policy.EvidenceTypeDescriptor", "EvidenceTypeDescriptor");
            feature.AddKnownType("System.Security.Policy.FileCodeGroup", "FileCodeGroup");
            feature.AddKnownType("System.Security.Policy.FirstMatchCodeGroup", "FirstMatchCodeGroup");
            feature.AddKnownType("System.Security.Policy.IIdentityPermissionFactory", "IIdentityPermissionFactory");
            feature.AddKnownType("System.Security.Policy.IConstantMembershipCondition", "IConstantMembershipCondition");
            feature.AddKnownType("System.Security.Policy.IDelayEvaluatedEvidence", "IDelayEvaluatedEvidence");
            feature.AddKnownType("System.Security.Policy.IMembershipCondition", "IMembershipCondition");
            feature.AddKnownType("System.Security.Policy.IReportMatchMembershipCondition", "IReportMatchMembershipCondition");
            feature.AddKnownType("System.Security.Policy.IRuntimeEvidenceFactory", "IRuntimeEvidenceFactory");
            feature.AddKnownType("System.Security.Policy.IApplicationTrustManager", "IApplicationTrustManager");
            feature.AddKnownType("System.Security.Policy.TrustManagerUIContext", "TrustManagerUIContext");
            feature.AddKnownType("System.Security.Policy.TrustManagerContext", "TrustManagerContext");
            feature.AddKnownType("System.Security.Policy.CodeConnectAccess", "CodeConnectAccess");
            feature.AddKnownType("System.Security.Policy.NetCodeGroup", "NetCodeGroup");
            feature.AddKnownType("System.Security.Policy.EvidenceTypeGenerated", "EvidenceTypeGenerated");
            feature.AddKnownType("System.Security.Policy.PEFileEvidenceFactory", "PEFileEvidenceFactory");
            feature.AddKnownType("System.Security.Policy.PermissionRequestEvidence", "PermissionRequestEvidence");
            feature.AddKnownType("System.Security.Policy.PolicyException", "PolicyException");
            feature.AddKnownType("System.Security.Policy.ConfigId", "ConfigId");
            feature.AddKnownType("System.Security.Policy.PolicyLevel", "PolicyLevel");
            feature.AddKnownType("System.Security.Policy.CodeGroupStackFrame", "CodeGroupStackFrame");
            feature.AddKnownType("System.Security.Policy.CodeGroupStack", "CodeGroupStack");
            feature.AddKnownType("System.Security.Policy.PolicyStatementAttribute", "PolicyStatementAttribute");
            feature.AddKnownType("System.Security.Policy.PolicyStatement", "PolicyStatement");
            feature.AddKnownType("System.Security.Policy.Site", "Site");
            feature.AddKnownType("System.Security.Policy.SiteMembershipCondition", "SiteMembershipCondition");
            feature.AddKnownType("System.Security.Policy.StrongName", "StrongName");
            feature.AddKnownType("System.Security.Policy.StrongNameMembershipCondition", "StrongNameMembershipCondition");
            feature.AddKnownType("System.Security.Policy.UnionCodeGroup", "UnionCodeGroup");
            feature.AddKnownType("System.Security.Policy.Url", "Url");
            feature.AddKnownType("System.Security.Policy.UrlMembershipCondition", "UrlMembershipCondition");
            feature.AddKnownType("System.Security.Policy.Zone", "Zone");
            feature.AddKnownType("System.Security.Policy.ZoneMembershipCondition", "ZoneMembershipCondition");
            feature.AddKnownType("System.Security.Policy.GacInstalled", "GacInstalled");
            feature.AddKnownType("System.Security.Policy.GacMembershipCondition", "GacMembershipCondition");
            feature.AddKnownType("System.Security.Policy.Hash", "Hash");
            feature.AddKnownType("System.Security.Policy.HashMembershipCondition", "HashMembershipCondition");
            feature.AddKnownType("System.Security.Policy.Publisher", "Publisher");
            feature.AddKnownType("System.Security.Policy.PublisherMembershipCondition", "PublisherMembershipCondition");
            feature.AddKnownType("System.Security.Principal.GenericIdentity", "GenericIdentity");
            feature.AddKnownType("System.Security.Principal.GenericPrincipal", "GenericPrincipal");
            feature.AddKnownType("System.Security.Principal.IIdentity", "IIdentity");
            feature.AddKnownType("System.Security.Principal.IPrincipal", "IPrincipal");
            feature.AddKnownType("System.Security.Principal.PrincipalPolicy", "PrincipalPolicy");
            feature.AddKnownType("System.Security.Principal.TokenAccessLevels", "TokenAccessLevels");
            feature.AddKnownType("System.Security.Principal.TokenImpersonationLevel", "TokenImpersonationLevel");
            feature.AddKnownType("System.Security.Principal.WindowsAccountType", "WindowsAccountType");
            feature.AddKnownType("System.Security.Principal.WinSecurityContext", "WinSecurityContext");
            feature.AddKnownType("System.Security.Principal.ImpersonationQueryResult", "ImpersonationQueryResult");
            feature.AddKnownType("System.Security.Principal.WindowsIdentity", "WindowsIdentity");
            feature.AddKnownType("System.Security.Principal.KerbLogonSubmitType", "KerbLogonSubmitType");
            feature.AddKnownType("System.Security.Principal.SecurityLogonType", "SecurityLogonType");
            feature.AddKnownType("System.Security.Principal.TokenType", "TokenType");
            feature.AddKnownType("System.Security.Principal.TokenInformationClass", "TokenInformationClass");
            feature.AddKnownType("System.Security.Principal.WindowsImpersonationContext", "WindowsImpersonationContext");
            feature.AddKnownType("System.Security.Principal.WindowsBuiltInRole", "WindowsBuiltInRole");
            feature.AddKnownType("System.Security.Principal.WindowsPrincipal", "WindowsPrincipal");
            feature.AddKnownType("System.Security.Principal.IdentityReference", "IdentityReference");
            feature.AddKnownType("System.Security.Principal.IdentityReferenceCollection", "IdentityReferenceCollection");
            feature.AddKnownType("System.Security.Principal.IdentityReferenceEnumerator", "IdentityReferenceEnumerator");
            feature.AddKnownType("System.Security.Principal.NTAccount", "NTAccount");
            feature.AddKnownType("System.Security.Principal.IdentifierAuthority", "IdentifierAuthority");
            feature.AddKnownType("System.Security.Principal.SidNameUse", "SidNameUse");
            feature.AddKnownType("System.Security.Principal.WellKnownSidType", "WellKnownSidType");
            feature.AddKnownType("System.Security.Principal.SecurityIdentifier", "SecurityIdentifier");
            feature.AddKnownType("System.Security.Principal.PolicyRights", "PolicyRights");
            feature.AddKnownType("System.Security.Principal.IdentityNotMappedException", "IdentityNotMappedException");
            feature.AddKnownType("System.Security.Util.QuickCacheEntryType", "QuickCacheEntryType");
            feature.AddKnownType("System.Security.Util.SiteString", "SiteString");
            feature.AddKnownType("System.Security.Util.StringExpressionSet", "StringExpressionSet");
            feature.AddKnownType("System.Security.Util.TokenBasedSet", "TokenBasedSet");
            feature.AddKnownType("System.Security.Util.TokenBasedSetEnumerator", "TokenBasedSetEnumerator");
            feature.AddKnownType("System.Security.Util.URLString", "URLString");
            feature.AddKnownType("System.Security.Util.DirectoryString", "DirectoryString");
            feature.AddKnownType("System.Security.Util.LocalSiteString", "LocalSiteString");
            feature.AddKnownType("System.Security.Util.Parser", "Parser");
            feature.AddKnownType("System.Security.Util.Tokenizer", "Tokenizer");
            feature.AddKnownType("System.Security.Util.Tokenizer+ByteTokenEncoding", "ByteTokenEncoding");
            feature.AddKnownType("System.Security.Util.Tokenizer+StringMaker", "StringMaker");
            feature.AddKnownType("System.Security.Util.Tokenizer+ITokenReader", "ITokenReader");
            feature.AddKnownType("System.Security.Util.Tokenizer+StreamTokenReader", "StreamTokenReader");
            feature.AddKnownType("System.Security.Util.TokenizerShortBlock", "TokenizerShortBlock");
            feature.AddKnownType("System.Security.Util.TokenizerStringBlock", "TokenizerStringBlock");
            feature.AddKnownType("System.Security.Util.TokenizerStream", "TokenizerStream");
            feature.AddKnownType("System.StubHelpers.DateTimeNative", "DateTimeNative");
            feature.AddKnownType("System.StubHelpers.AsAnyMarshaler", "AsAnyMarshaler");
            feature.AddKnownType("System.StubHelpers.AsAnyMarshaler+BackPropAction", "BackPropAction");
            feature.AddKnownType("System.StubHelpers.TypeNameNative", "TypeNameNative");
            feature.AddKnownType("System.StubHelpers.TypeKind", "TypeKind");
            feature.AddKnownType("System.StubHelpers.NativeVariant", "NativeVariant");
            feature.AddKnownType("System.StubHelpers.CopyCtorStubCookie", "CopyCtorStubCookie");
            feature.AddKnownType("System.StubHelpers.CopyCtorStubDesc", "CopyCtorStubDesc");
            feature.AddKnownType("System.StubHelpers.CleanupWorkListElement", "CleanupWorkListElement");
            feature.AddKnownType("System.StubHelpers.CleanupWorkList", "CleanupWorkList");
            feature.AddKnownType("System.Text.StringBuilder", "StringBuilder");
            feature.AddKnownType("System.Text.ASCIIEncoding", "ASCIIEncoding");
            feature.AddKnownType("System.Text.BaseCodePageEncoding", "BaseCodePageEncoding");
            feature.AddKnownType("System.Text.BaseCodePageEncoding+CodePageDataFileHeader", "CodePageDataFileHeader");
            feature.AddKnownType("System.Text.BaseCodePageEncoding+CodePageIndex", "CodePageIndex");
            feature.AddKnownType("System.Text.BaseCodePageEncoding+CodePageHeader", "CodePageHeader");
            feature.AddKnownType("System.Text.CodePageEncoding", "CodePageEncoding");
            feature.AddKnownType("System.Text.CodePageEncoding+Decoder", "Decoder");
            feature.AddKnownType("System.Text.Decoder", "Decoder");
            feature.AddKnownType("System.Text.DecoderNLS", "DecoderNLS");
            feature.AddKnownType("System.Text.InternalDecoderBestFitFallback", "InternalDecoderBestFitFallback");
            feature.AddKnownType("System.Text.InternalDecoderBestFitFallbackBuffer", "InternalDecoderBestFitFallbackBuffer");
            feature.AddKnownType("System.Text.DecoderExceptionFallback", "DecoderExceptionFallback");
            feature.AddKnownType("System.Text.DecoderExceptionFallbackBuffer", "DecoderExceptionFallbackBuffer");
            feature.AddKnownType("System.Text.DecoderFallbackException", "DecoderFallbackException");
            feature.AddKnownType("System.Text.DecoderFallback", "DecoderFallback");
            feature.AddKnownType("System.Text.DecoderFallbackBuffer", "DecoderFallbackBuffer");
            feature.AddKnownType("System.Text.DecoderReplacementFallback", "DecoderReplacementFallback");
            feature.AddKnownType("System.Text.DecoderReplacementFallbackBuffer", "DecoderReplacementFallbackBuffer");
            feature.AddKnownType("System.Text.Encoder", "Encoder");
            feature.AddKnownType("System.Text.EncoderNLS", "EncoderNLS");
            feature.AddKnownType("System.Text.InternalEncoderBestFitFallback", "InternalEncoderBestFitFallback");
            feature.AddKnownType("System.Text.InternalEncoderBestFitFallbackBuffer", "InternalEncoderBestFitFallbackBuffer");
            feature.AddKnownType("System.Text.EncoderExceptionFallback", "EncoderExceptionFallback");
            feature.AddKnownType("System.Text.EncoderExceptionFallbackBuffer", "EncoderExceptionFallbackBuffer");
            feature.AddKnownType("System.Text.EncoderFallbackException", "EncoderFallbackException");
            feature.AddKnownType("System.Text.EncoderFallback", "EncoderFallback");
            feature.AddKnownType("System.Text.EncoderFallbackBuffer", "EncoderFallbackBuffer");
            feature.AddKnownType("System.Text.EncoderReplacementFallback", "EncoderReplacementFallback");
            feature.AddKnownType("System.Text.EncoderReplacementFallbackBuffer", "EncoderReplacementFallbackBuffer");
            feature.AddKnownType("System.Text.Encoding", "Encoding");
            feature.AddKnownType("System.Text.Encoding+DefaultEncoder", "DefaultEncoder");
            feature.AddKnownType("System.Text.Encoding+DefaultDecoder", "DefaultDecoder");
            feature.AddKnownType("System.Text.Encoding+EncodingCharBuffer", "EncodingCharBuffer");
            feature.AddKnownType("System.Text.Encoding+EncodingByteBuffer", "EncodingByteBuffer");
            feature.AddKnownType("System.Text.EncodingInfo", "EncodingInfo");
            feature.AddKnownType("System.Text.EncodingNLS", "EncodingNLS");
            feature.AddKnownType("System.Text.EncodingProvider", "EncodingProvider");
            feature.AddKnownType("System.Text.ISCIIEncoding", "ISCIIEncoding");
            feature.AddKnownType("System.Text.ISCIIEncoding+ISCIIEncoder", "ISCIIEncoder");
            feature.AddKnownType("System.Text.ISCIIEncoding+ISCIIDecoder", "ISCIIDecoder");
            feature.AddKnownType("System.Text.Latin1Encoding", "Latin1Encoding");
            feature.AddKnownType("System.Text.MLangCodePageEncoding", "MLangCodePageEncoding");
            feature.AddKnownType("System.Text.MLangCodePageEncoding+MLangEncoder", "MLangEncoder");
            feature.AddKnownType("System.Text.MLangCodePageEncoding+MLangDecoder", "MLangDecoder");
            feature.AddKnownType("System.Text.NormalizationForm", "NormalizationForm");
            feature.AddKnownType("System.Text.ExtendedNormalizationForms", "ExtendedNormalizationForms");
            feature.AddKnownType("System.Text.Normalization", "Normalization");
            feature.AddKnownType("System.Text.DBCSCodePageEncoding", "DBCSCodePageEncoding");
            feature.AddKnownType("System.Text.DBCSCodePageEncoding+DBCSDecoder", "DBCSDecoder");
            feature.AddKnownType("System.Text.SBCSCodePageEncoding", "SBCSCodePageEncoding");
            feature.AddKnownType("System.Text.SurrogateEncoder", "SurrogateEncoder");
            feature.AddKnownType("System.Text.UnicodeEncoding", "UnicodeEncoding");
            feature.AddKnownType("System.Text.UTF7Encoding", "UTF7Encoding");
            feature.AddKnownType("System.Text.UTF7Encoding+DecoderUTF7Fallback", "DecoderUTF7Fallback");
            feature.AddKnownType("System.Text.UTF7Encoding+DecoderUTF7FallbackBuffer", "DecoderUTF7FallbackBuffer");
            feature.AddKnownType("System.Text.UTF8Encoding", "UTF8Encoding");
            feature.AddKnownType("System.Text.UTF8Encoding+UTF8EncodingSealed", "UTF8EncodingSealed");
            feature.AddKnownType("System.Text.UTF8Encoding+UTF8Encoder", "UTF8Encoder");
            feature.AddKnownType("System.Text.UTF8Encoding+UTF8Decoder", "UTF8Decoder");
            feature.AddKnownType("System.Text.UTF32Encoding", "UTF32Encoding");
            feature.AddKnownType("System.Text.UTF32Encoding+UTF32Decoder", "UTF32Decoder");
            feature.AddKnownType("System.Text.GB18030Encoding", "GB18030Encoding");
            feature.AddKnownType("System.Text.GB18030Encoding+GB18030Decoder", "GB18030Decoder");
            feature.AddKnownType("System.Text.ISO2022Encoding", "ISO2022Encoding");
            feature.AddKnownType("System.Text.ISO2022Encoding+ISO2022Modes", "ISO2022Modes");
            feature.AddKnownType("System.Text.ISO2022Encoding+ISO2022Encoder", "ISO2022Encoder");
            feature.AddKnownType("System.Text.ISO2022Encoding+ISO2022Decoder", "ISO2022Decoder");
            feature.AddKnownType("System.Text.EUCJPEncoding", "EUCJPEncoding");
            feature.AddKnownType("System.Threading.AbandonedMutexException", "AbandonedMutexException");
            feature.AddKnownType("System.Threading.AsyncLocal`1", "AsyncLocal`1'1");
            feature.AddKnownType("System.Threading.IAsyncLocal", "IAsyncLocal");
            feature.AddKnownType("System.Threading.AsyncLocalValueChangedArgs`1", "AsyncLocalValueChangedArgs`1'1");
            feature.AddKnownType("System.Threading.AutoResetEvent", "AutoResetEvent");
            feature.AddKnownType("System.Threading.SynchronizationContextProperties", "SynchronizationContextProperties");
            feature.AddKnownType("System.Threading.WinRTSynchronizationContextFactoryBase", "WinRTSynchronizationContextFactoryBase");
            feature.AddKnownType("System.Threading.SynchronizationContext", "SynchronizationContext");
            feature.AddKnownType("System.Threading.CompressedStackSwitcher", "CompressedStackSwitcher");
            feature.AddKnownType("System.Threading.SafeCompressedStackHandle", "SafeCompressedStackHandle");
            feature.AddKnownType("System.Threading.CompressedStack", "CompressedStack");
            feature.AddKnownType("System.Threading.CompressedStack+CompressedStackRunData", "CompressedStackRunData");
            feature.AddKnownType("System.Threading.DomainCompressedStack", "DomainCompressedStack");
            feature.AddKnownType("System.Threading.EventResetMode", "EventResetMode");
            feature.AddKnownType("System.Threading.EventWaitHandle", "EventWaitHandle");
            feature.AddKnownType("System.Threading.ExecutionContextSwitcher", "ExecutionContextSwitcher");
            feature.AddKnownType("System.Threading.AsyncFlowControl", "AsyncFlowControl");
            feature.AddKnownType("System.Threading.ExecutionContext", "ExecutionContext");
            feature.AddKnownType("System.Threading.ExecutionContext+Reader", "Reader");
            feature.AddKnownType("System.Threading.ExecutionContext+CaptureOptions", "CaptureOptions");
            feature.AddKnownType("System.Threading.HostExecutionContextSwitcher", "HostExecutionContextSwitcher");
            feature.AddKnownType("System.Threading.HostExecutionContext", "HostExecutionContext");
            feature.AddKnownType("System.Threading.IUnknownSafeHandle", "IUnknownSafeHandle");
            feature.AddKnownType("System.Threading.HostExecutionContextManager", "HostExecutionContextManager");
            feature.AddKnownType("System.Threading.LockCookie", "LockCookie");
            feature.AddKnownType("System.Threading.LockRecursionException", "LockRecursionException");
            feature.AddKnownType("System.Threading.ManualResetEvent", "ManualResetEvent");
            feature.AddKnownType("System.Threading.Mutex", "Mutex");
            feature.AddKnownType("System.Threading.Mutex+MutexTryCodeHelper", "MutexTryCodeHelper");
            feature.AddKnownType("System.Threading.Mutex+MutexCleanupInfo", "MutexCleanupInfo");
            feature.AddKnownType("System.Threading.NativeOverlapped", "NativeOverlapped");
            feature.AddKnownType("System.Threading._IOCompletionCallback", "_IOCompletionCallback");
            feature.AddKnownType("System.Threading.OverlappedData", "OverlappedData");
            feature.AddKnownType("System.Threading.Overlapped", "Overlapped");
            feature.AddKnownType("System.Threading.PreAllocatedOverlapped", "PreAllocatedOverlapped");
            feature.AddKnownType("System.Threading.ThreadPoolBoundHandleOverlapped", "ThreadPoolBoundHandleOverlapped");
            feature.AddKnownType("System.Threading.ThreadPoolBoundHandle", "ThreadPoolBoundHandle");
            feature.AddKnownType("System.Threading.IDeferredDisposable", "IDeferredDisposable");
            feature.AddKnownType("System.Threading.DeferredDisposableLifetime`1", "DeferredDisposableLifetime`1'1");
            feature.AddKnownType("System.Threading.PinnableBufferCache", "PinnableBufferCache");
            feature.AddKnownType("System.Threading.Gen2GcCallback", "Gen2GcCallback");
            feature.AddKnownType("System.Threading.PinnableBufferCacheEventSource", "PinnableBufferCacheEventSource");
            feature.AddKnownType("System.Threading.ReaderWriterLock", "ReaderWriterLock");
            feature.AddKnownType("System.Threading.SemaphoreFullException", "SemaphoreFullException");
            feature.AddKnownType("System.Threading.SynchronizationLockException", "SynchronizationLockException");
            feature.AddKnownType("System.Threading.ThreadHelper", "ThreadHelper");
            feature.AddKnownType("System.Threading.ThreadHandle", "ThreadHandle");
            feature.AddKnownType("System.Threading.Thread", "Thread");
            feature.AddKnownType("System.Threading.StackCrawlMark", "StackCrawlMark");
            feature.AddKnownType("System.Threading.ThreadAbortException", "ThreadAbortException");
            feature.AddKnownType("System.Threading.ThreadInterruptedException", "ThreadInterruptedException");
            feature.AddKnownType("System.Threading.ThreadPoolWorkQueue", "ThreadPoolWorkQueue");
            feature.AddKnownType("System.Threading.ThreadPoolWorkQueue+SparseArray`1", "SparseArray`1'1");
            feature.AddKnownType("System.Threading.ThreadPoolWorkQueue+WorkStealingQueue", "WorkStealingQueue");
            feature.AddKnownType("System.Threading.ThreadPoolWorkQueue+QueueSegment", "QueueSegment");
            feature.AddKnownType("System.Threading.ThreadPoolWorkQueueThreadLocals", "ThreadPoolWorkQueueThreadLocals");
            feature.AddKnownType("System.Threading.RegisteredWaitHandleSafe", "RegisteredWaitHandleSafe");
            feature.AddKnownType("System.Threading.RegisteredWaitHandle", "RegisteredWaitHandle");
            feature.AddKnownType("System.Threading.IThreadPoolWorkItem", "IThreadPoolWorkItem");
            feature.AddKnownType("System.Threading.QueueUserWorkItemCallback", "QueueUserWorkItemCallback");
            feature.AddKnownType("System.Threading._ThreadPoolWaitOrTimerCallback", "_ThreadPoolWaitOrTimerCallback");
            feature.AddKnownType("System.Threading.ThreadPriority", "ThreadPriority");
            feature.AddKnownType("System.Threading.ThreadState", "ThreadState");
            feature.AddKnownType("System.Threading.ThreadStateException", "ThreadStateException");
            feature.AddKnownType("System.Threading.ThreadStartException", "ThreadStartException");
            feature.AddKnownType("System.Threading.TimerQueue", "TimerQueue");
            feature.AddKnownType("System.Threading.TimerQueueTimer", "TimerQueueTimer");
            feature.AddKnownType("System.Threading.TimerHolder", "TimerHolder");
            feature.AddKnownType("System.Threading.Timer", "Timer");
            feature.AddKnownType("System.Threading.WaitHandle", "WaitHandle");
            feature.AddKnownType("System.Threading.WaitHandle+OpenExistingResult", "OpenExistingResult");
            feature.AddKnownType("System.Threading.WaitHandleCannotBeOpenedException", "WaitHandleCannotBeOpenedException");
            feature.AddKnownType("System.Threading.ApartmentState", "ApartmentState");
            feature.AddKnownType("System.Threading.SpinLock", "SpinLock");
            feature.AddKnownType("System.Threading.SpinLock+SystemThreading_SpinLockDebugView", "SystemThreading_SpinLockDebugView");
            feature.AddKnownType("System.Threading.SpinWait", "SpinWait");
            feature.AddKnownType("System.Threading.CountdownEvent", "CountdownEvent");
            feature.AddKnownType("System.Threading.CdsSyncEtwBCLProvider", "CdsSyncEtwBCLProvider");
            feature.AddKnownType("System.Threading.LazyThreadSafetyMode", "LazyThreadSafetyMode");
            feature.AddKnownType("System.Threading.ThreadLocal`1", "ThreadLocal`1'1");
            feature.AddKnownType("System.Threading.SystemThreading_ThreadLocalDebugView`1", "SystemThreading_ThreadLocalDebugView`1'1");
            feature.AddKnownType("System.Threading.SemaphoreSlim", "SemaphoreSlim");
            feature.AddKnownType("System.Threading.ManualResetEventSlim", "ManualResetEventSlim");
            feature.AddKnownType("System.Threading.CancellationTokenRegistration", "CancellationTokenRegistration");
            feature.AddKnownType("System.Threading.CancellationTokenSource", "CancellationTokenSource");
            feature.AddKnownType("System.Threading.CancellationCallbackCoreWorkArguments", "CancellationCallbackCoreWorkArguments");
            feature.AddKnownType("System.Threading.CancellationCallbackInfo", "CancellationCallbackInfo");
            feature.AddKnownType("System.Threading.SparselyPopulatedArray`1", "SparselyPopulatedArray`1'1");
            feature.AddKnownType("System.Threading.SparselyPopulatedArrayAddInfo`1", "SparselyPopulatedArrayAddInfo`1'1");
            feature.AddKnownType("System.Threading.SparselyPopulatedArrayFragment`1", "SparselyPopulatedArrayFragment`1'1");
            feature.AddKnownType("System.Threading.CancellationToken", "CancellationToken");
            feature.AddKnownType("System.Threading.Tasks.SystemThreadingTasks_FutureDebugView`1", "SystemThreadingTasks_FutureDebugView`1'1");
            feature.AddKnownType("System.Threading.Tasks.TaskFactory`1", "TaskFactory`1'1");
            feature.AddKnownType("System.Threading.Tasks.TaskFactory", "TaskFactory");
            feature.AddKnownType("System.Threading.Tasks.TaskFactory+CompleteOnInvokePromise", "CompleteOnInvokePromise");
            feature.AddKnownType("System.Threading.Tasks.ParallelOptions", "ParallelOptions");
            feature.AddKnownType("System.Threading.Tasks.Parallel+LoopTimer", "LoopTimer");
            feature.AddKnownType("System.Threading.Tasks.IndexRange", "IndexRange");
            feature.AddKnownType("System.Threading.Tasks.RangeWorker", "RangeWorker");
            feature.AddKnownType("System.Threading.Tasks.RangeManager", "RangeManager");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopState", "ParallelLoopState");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopState32", "ParallelLoopState32");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopState64", "ParallelLoopState64");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopStateFlags", "ParallelLoopStateFlags");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopStateFlags32", "ParallelLoopStateFlags32");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopStateFlags64", "ParallelLoopStateFlags64");
            feature.AddKnownType("System.Threading.Tasks.ParallelLoopResult", "ParallelLoopResult");
            feature.AddKnownType("System.Threading.Tasks.Shared`1", "Shared`1'1");
            feature.AddKnownType("System.Threading.Tasks.TaskStatus", "TaskStatus");
            feature.AddKnownType("System.Threading.Tasks.CompletionActionInvoker", "CompletionActionInvoker");
            feature.AddKnownType("System.Threading.Tasks.SystemThreadingTasks_TaskDebugView", "SystemThreadingTasks_TaskDebugView");
            feature.AddKnownType("System.Threading.Tasks.ParallelForReplicatingTask", "ParallelForReplicatingTask");
            feature.AddKnownType("System.Threading.Tasks.ParallelForReplicaTask", "ParallelForReplicaTask");
            feature.AddKnownType("System.Threading.Tasks.TaskCreationOptions", "TaskCreationOptions");
            feature.AddKnownType("System.Threading.Tasks.InternalTaskOptions", "InternalTaskOptions");
            feature.AddKnownType("System.Threading.Tasks.TaskContinuationOptions", "TaskContinuationOptions");
            feature.AddKnownType("System.Threading.Tasks.StackGuard", "StackGuard");
            feature.AddKnownType("System.Threading.Tasks.VoidTaskResult", "VoidTaskResult");
            feature.AddKnownType("System.Threading.Tasks.ITaskCompletionAction", "ITaskCompletionAction");
            feature.AddKnownType("System.Threading.Tasks.UnwrapPromise`1", "UnwrapPromise`1'1");
            feature.AddKnownType("System.Threading.Tasks.ContinuationTaskFromTask", "ContinuationTaskFromTask");
            feature.AddKnownType("System.Threading.Tasks.ContinuationResultTaskFromTask`1", "ContinuationResultTaskFromTask`1'1");
            feature.AddKnownType("System.Threading.Tasks.ContinuationTaskFromResultTask`1", "ContinuationTaskFromResultTask`1'1");
            feature.AddKnownType("System.Threading.Tasks.ContinuationResultTaskFromResultTask`2", "ContinuationResultTaskFromResultTask`2'2");
            feature.AddKnownType("System.Threading.Tasks.TaskContinuation", "TaskContinuation");
            feature.AddKnownType("System.Threading.Tasks.StandardTaskContinuation", "StandardTaskContinuation");
            feature.AddKnownType("System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation", "SynchronizationContextAwaitTaskContinuation");
            feature.AddKnownType("System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation", "TaskSchedulerAwaitTaskContinuation");
            feature.AddKnownType("System.Threading.Tasks.AwaitTaskContinuation", "AwaitTaskContinuation");
            feature.AddKnownType("System.Threading.Tasks.TaskCanceledException", "TaskCanceledException");
            feature.AddKnownType("System.Threading.Tasks.TaskSchedulerException", "TaskSchedulerException");
            feature.AddKnownType("System.Threading.Tasks.TaskExceptionHolder", "TaskExceptionHolder");
            feature.AddKnownType("System.Threading.Tasks.TaskScheduler+SystemThreadingTasks_TaskSchedulerDebugView", "SystemThreadingTasks_TaskSchedulerDebugView");
            feature.AddKnownType("System.Threading.Tasks.SynchronizationContextTaskScheduler", "SynchronizationContextTaskScheduler");
            feature.AddKnownType("System.Threading.Tasks.UnobservedTaskExceptionEventArgs", "UnobservedTaskExceptionEventArgs");
            feature.AddKnownType("System.Threading.Tasks.ThreadPoolTaskScheduler", "ThreadPoolTaskScheduler");
            feature.AddKnownType("System.Threading.Tasks.TaskCompletionSource`1", "TaskCompletionSource`1'1");
            feature.AddKnownType("System.Threading.Tasks.CausalityTraceLevel", "CausalityTraceLevel");
            feature.AddKnownType("System.Threading.Tasks.AsyncCausalityStatus", "AsyncCausalityStatus");
            feature.AddKnownType("System.Threading.Tasks.CausalityRelation", "CausalityRelation");
            feature.AddKnownType("System.Threading.Tasks.CausalitySynchronousWork", "CausalitySynchronousWork");
            feature.AddKnownType("System.Threading.Tasks.ConcurrentExclusiveSchedulerPair", "ConcurrentExclusiveSchedulerPair");
            feature.AddKnownType("System.Threading.Tasks.ConcurrentExclusiveSchedulerPair+DebugView", "DebugView");
            feature.AddKnownType("System.Threading.Tasks.IProducerConsumerQueue`1", "IProducerConsumerQueue`1'1");
            feature.AddKnownType("System.Threading.Tasks.MultiProducerMultiConsumerQueue`1", "MultiProducerMultiConsumerQueue`1'1");
            feature.AddKnownType("System.Threading.Tasks.SingleProducerSingleConsumerQueue`1", "SingleProducerSingleConsumerQueue`1'1");
            feature.AddKnownType("System.Threading.Tasks.SingleProducerSingleConsumerQueue`1+SingleProducerSingleConsumerQueue_DebugView", "SingleProducerSingleConsumerQueue_DebugView'1");
            feature.AddKnownType("System.Threading.Tasks.PaddingFor32", "PaddingFor32");
            feature.AddKnownType("System.Threading.Tasks.TplEtwProvider", "TplEtwProvider");
            feature.AddKnownType("System.Threading.Tasks.TplEtwProvider+ForkJoinOperationType", "TplEtwProvider.ForkJoinOperationType");
            feature.AddKnownType("System.Threading.Tasks.TplEtwProvider+TaskWaitBehavior", "TplEtwProvider.TaskWaitBehavior");
            feature.AddKnownType("System.Threading.Tasks.TplEtwProvider+Tasks", "TplEtwProvider.Tasks");
            feature.AddKnownType("System.Threading.Tasks.TplEtwProvider+Keywords", "TplEtwProvider.Keywords");
            feature.AddKnownType("System.Threading.Tasks.BeginEndAwaitableAdapter", "BeginEndAwaitableAdapter");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,Orleans.Core.Abstractions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("Orleans.GrainCancellationToken,Orleans.Core.Abstractions", "Orleans.GrainCancellationToken");
            feature.AddKnownType("Orleans.GrainCancellationTokenSource,Orleans.Core.Abstractions", "Orleans.GrainCancellationTokenSource");
            feature.AddKnownType("Orleans.Grain,Orleans.Core.Abstractions", "Orleans.Grain");
            feature.AddKnownType("Orleans.Grain`1,Orleans.Core.Abstractions", "Orleans.Grain`1'1");
            feature.AddKnownType("Orleans.IGrain,Orleans.Core.Abstractions", "Orleans.IGrain");
            feature.AddKnownType("Orleans.IGrainWithGuidKey,Orleans.Core.Abstractions", "Orleans.IGrainWithGuidKey");
            feature.AddKnownType("Orleans.IGrainWithIntegerKey,Orleans.Core.Abstractions", "Orleans.IGrainWithIntegerKey");
            feature.AddKnownType("Orleans.IGrainWithStringKey,Orleans.Core.Abstractions", "Orleans.IGrainWithStringKey");
            feature.AddKnownType("Orleans.IGrainWithGuidCompoundKey,Orleans.Core.Abstractions", "Orleans.IGrainWithGuidCompoundKey");
            feature.AddKnownType("Orleans.IGrainWithIntegerCompoundKey,Orleans.Core.Abstractions", "Orleans.IGrainWithIntegerCompoundKey");
            feature.AddKnownType("Orleans.IGrainCallContext,Orleans.Core.Abstractions", "Orleans.IGrainCallContext");
            feature.AddKnownType("Orleans.IIncomingGrainCallContext,Orleans.Core.Abstractions", "Orleans.IIncomingGrainCallContext");
            feature.AddKnownType("Orleans.IOutgoingGrainCallContext,Orleans.Core.Abstractions", "Orleans.IOutgoingGrainCallContext");
            feature.AddKnownType("Orleans.IIncomingGrainCallFilter,Orleans.Core.Abstractions", "Orleans.IIncomingGrainCallFilter");
            feature.AddKnownType("Orleans.IGrainCallFilter,Orleans.Core.Abstractions", "Orleans.IGrainCallFilter");
            feature.AddKnownType("Orleans.IOutgoingGrainCallFilter,Orleans.Core.Abstractions", "Orleans.IOutgoingGrainCallFilter");
            feature.AddKnownType("Orleans.IGrainFactory,Orleans.Core.Abstractions", "Orleans.IGrainFactory");
            feature.AddKnownType("Orleans.IGrainObserver,Orleans.Core.Abstractions", "Orleans.IGrainObserver");
            feature.AddKnownType("Orleans.Interner`2,Orleans.Core.Abstractions", "Orleans.Interner`2'2");
            feature.AddKnownType("Orleans.ILifecycleObservable,Orleans.Core.Abstractions", "Orleans.ILifecycleObservable");
            feature.AddKnownType("Orleans.ILifecycleObserver,Orleans.Core.Abstractions", "Orleans.ILifecycleObserver");
            feature.AddKnownType("Orleans.ILifecycleParticipant`1,Orleans.Core.Abstractions", "Orleans.ILifecycleParticipant`1'1");
            feature.AddKnownType("Orleans.ILifecycleSubject,Orleans.Core.Abstractions", "Orleans.ILifecycleSubject");
            feature.AddKnownType("Orleans.LifecycleExtensions+Observer,Orleans.Core.Abstractions", "Orleans.Observer");
            feature.AddKnownType("Orleans.ImplicitStreamSubscriptionAttribute,Orleans.Core.Abstractions", "Orleans.ImplicitStreamSubscriptionAttribute");
            feature.AddKnownType("Orleans.RegexImplicitStreamSubscriptionAttribute,Orleans.Core.Abstractions", "Orleans.RegexImplicitStreamSubscriptionAttribute");
            feature.AddKnownType("Orleans.IReminderService,Orleans.Core.Abstractions", "Orleans.IReminderService");
            feature.AddKnownType("Orleans.ISystemTarget,Orleans.Core.Abstractions", "Orleans.ISystemTarget");
            feature.AddKnownType("Orleans.ISystemTargetBase,Orleans.Core.Abstractions", "Orleans.ISystemTargetBase");
            feature.AddKnownType("Orleans.IVersionManager,Orleans.Core.Abstractions", "Orleans.IVersionManager");
            feature.AddKnownType("Orleans.IRemindable,Orleans.Core.Abstractions", "Orleans.IRemindable");
            feature.AddKnownType("Orleans.TransactionAttribute,Orleans.Core.Abstractions", "Orleans.TransactionAttribute");
            feature.AddKnownType("Orleans.TransactionOption,Orleans.Core.Abstractions", "Orleans.TransactionOption");
            feature.AddKnownType("Orleans.TransactionOptionAlias,Orleans.Core.Abstractions", "Orleans.TransactionOptionAlias");
            feature.AddKnownType("Orleans.CodeGeneration.GrainSupportClassAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.GrainSupportClassAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.MethodInvokerAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.MethodInvokerAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.GrainReferenceAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.GrainReferenceAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.SerializerAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.SerializerAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.TypeCodeOverrideAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.TypeCodeOverrideAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.MethodIdAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.MethodIdAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.VersionAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.VersionAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.CopierMethodAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.CopierMethodAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.SerializerMethodAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.SerializerMethodAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.DeserializerMethodAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.DeserializerMethodAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.ConsiderForCodeGenerationAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.ConsiderForCodeGenerationAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.KnownTypeAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.KnownTypeAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.GenerateSerializerAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.GenerateSerializerAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.KnownBaseTypeAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.KnownBaseTypeAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.IGrainMethodInvoker,Orleans.Core.Abstractions", "Orleans.CodeGeneration.IGrainMethodInvoker");
            feature.AddKnownType("Orleans.CodeGeneration.IGrainExtensionMethodInvoker,Orleans.Core.Abstractions", "Orleans.CodeGeneration.IGrainExtensionMethodInvoker");
            feature.AddKnownType("Orleans.CodeGeneration.IGrainExtensionMap,Orleans.Core.Abstractions", "Orleans.CodeGeneration.IGrainExtensionMap");
            feature.AddKnownType("Orleans.CodeGeneration.InvokeMethodRequest,Orleans.Core.Abstractions", "Orleans.CodeGeneration.InvokeMethodRequest");
            feature.AddKnownType("Orleans.CodeGeneration.InvokeMethodOptions,Orleans.Core.Abstractions", "Orleans.CodeGeneration.InvokeMethodOptions");
            feature.AddKnownType("Orleans.CodeGeneration.KnownAssemblyAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.KnownAssemblyAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.OrleansCodeGenerationTargetAttribute");
            feature.AddKnownType("Orleans.CodeGeneration.SkipCodeGenerationAttribute,Orleans.Core.Abstractions", "Orleans.CodeGeneration.SkipCodeGenerationAttribute");
            feature.AddKnownType("Orleans.Concurrency.ReadOnlyAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.ReadOnlyAttribute");
            feature.AddKnownType("Orleans.Concurrency.ReentrantAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.ReentrantAttribute");
            feature.AddKnownType("Orleans.Concurrency.UnorderedAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.UnorderedAttribute");
            feature.AddKnownType("Orleans.Concurrency.StatelessWorkerAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.StatelessWorkerAttribute");
            feature.AddKnownType("Orleans.Concurrency.AlwaysInterleaveAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.AlwaysInterleaveAttribute");
            feature.AddKnownType("Orleans.Concurrency.MayInterleaveAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.MayInterleaveAttribute");
            feature.AddKnownType("Orleans.Concurrency.ImmutableAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.ImmutableAttribute");
            feature.AddKnownType("Orleans.Concurrency.OneWayAttribute,Orleans.Core.Abstractions", "Orleans.Concurrency.OneWayAttribute");
            feature.AddKnownType("Orleans.Concurrency.Immutable`1,Orleans.Core.Abstractions", "Orleans.Concurrency.Immutable`1'1");
            feature.AddKnownType("Orleans.Core.IGrainIdentity,Orleans.Core.Abstractions", "Orleans.Core.IGrainIdentity");
            feature.AddKnownType("Orleans.Core.IStorage`1,Orleans.Core.Abstractions", "Orleans.Core.IStorage`1'1");
            feature.AddKnownType("Orleans.GrainDirectory.ClusterLocalRegistration,Orleans.Core.Abstractions", "Orleans.GrainDirectory.ClusterLocalRegistration");
            feature.AddKnownType("Orleans.GrainDirectory.GrainDirectoryAttribute,Orleans.Core.Abstractions", "Orleans.GrainDirectory.GrainDirectoryAttribute");
            feature.AddKnownType("Orleans.GrainDirectory.IGrainDirectory,Orleans.Core.Abstractions", "Orleans.GrainDirectory.IGrainDirectory");
            feature.AddKnownType("Orleans.GrainDirectory.GrainAddress,Orleans.Core.Abstractions", "Orleans.GrainDirectory.GrainAddress");
            feature.AddKnownType("Orleans.GrainDirectory.IMultiClusterRegistrationStrategy,Orleans.Core.Abstractions", "Orleans.GrainDirectory.IMultiClusterRegistrationStrategy");
            feature.AddKnownType("Orleans.GrainDirectory.MultiClusterRegistrationStrategy,Orleans.Core.Abstractions", "Orleans.GrainDirectory.MultiClusterRegistrationStrategy");
            feature.AddKnownType("Orleans.LogConsistency.ConnectionIssue,Orleans.Core.Abstractions", "Orleans.LogConsistency.ConnectionIssue");
            feature.AddKnownType("Orleans.LogConsistency.NotificationFailed,Orleans.Core.Abstractions", "Orleans.LogConsistency.NotificationFailed");
            feature.AddKnownType("Orleans.Metadata.FeaturePopulatorAttribute,Orleans.Core.Abstractions", "Orleans.Metadata.FeaturePopulatorAttribute");
            feature.AddKnownType("Orleans.Metadata.GrainClassFeature,Orleans.Core.Abstractions", "Orleans.Metadata.GrainClassFeature");
            feature.AddKnownType("Orleans.Metadata.GrainClassMetadata,Orleans.Core.Abstractions", "Orleans.Metadata.GrainClassMetadata");
            feature.AddKnownType("Orleans.Metadata.GrainInterfaceFeature,Orleans.Core.Abstractions", "Orleans.Metadata.GrainInterfaceFeature");
            feature.AddKnownType("Orleans.Metadata.GrainInterfaceMetadata,Orleans.Core.Abstractions", "Orleans.Metadata.GrainInterfaceMetadata");
            feature.AddKnownType("Orleans.Metadata.IFeaturePopulator`1,Orleans.Core.Abstractions", "Orleans.Metadata.IFeaturePopulator`1'1");
            feature.AddKnownType("Orleans.Placement.PlacementAttribute,Orleans.Core.Abstractions", "Orleans.Placement.PlacementAttribute");
            feature.AddKnownType("Orleans.Placement.RandomPlacementAttribute,Orleans.Core.Abstractions", "Orleans.Placement.RandomPlacementAttribute");
            feature.AddKnownType("Orleans.Placement.HashBasedPlacementAttribute,Orleans.Core.Abstractions", "Orleans.Placement.HashBasedPlacementAttribute");
            feature.AddKnownType("Orleans.Placement.PreferLocalPlacementAttribute,Orleans.Core.Abstractions", "Orleans.Placement.PreferLocalPlacementAttribute");
            feature.AddKnownType("Orleans.Placement.ActivationCountBasedPlacementAttribute,Orleans.Core.Abstractions", "Orleans.Placement.ActivationCountBasedPlacementAttribute");
            feature.AddKnownType("Orleans.Providers.StorageProviderAttribute,Orleans.Core.Abstractions", "Orleans.Providers.StorageProviderAttribute");
            feature.AddKnownType("Orleans.Providers.LogConsistencyProviderAttribute,Orleans.Core.Abstractions", "Orleans.Providers.LogConsistencyProviderAttribute");
            feature.AddKnownType("Orleans.Runtime.ICancellationSourcesExtension,Orleans.Core.Abstractions", "Orleans.Runtime.ICancellationSourcesExtension");
            feature.AddKnownType("Orleans.Runtime.ClientNotAvailableException,Orleans.Core.Abstractions", "Orleans.Runtime.ClientNotAvailableException");
            feature.AddKnownType("Orleans.Runtime.DeadlockException,Orleans.Core.Abstractions", "Orleans.Runtime.DeadlockException");
            feature.AddKnownType("Orleans.Runtime.GatewayTooBusyException,Orleans.Core.Abstractions", "Orleans.Runtime.GatewayTooBusyException");
            feature.AddKnownType("Orleans.Runtime.GrainExtensionNotInstalledException,Orleans.Core.Abstractions", "Orleans.Runtime.GrainExtensionNotInstalledException");
            feature.AddKnownType("Orleans.Runtime.LimitExceededException,Orleans.Core.Abstractions", "Orleans.Runtime.LimitExceededException");
            feature.AddKnownType("Orleans.Runtime.OrleansConfigurationException,Orleans.Core.Abstractions", "Orleans.Runtime.OrleansConfigurationException");
            feature.AddKnownType("Orleans.Runtime.OrleansException,Orleans.Core.Abstractions", "Orleans.Runtime.OrleansException");
            feature.AddKnownType("Orleans.Runtime.OrleansLifecycleCanceledException,Orleans.Core.Abstractions", "Orleans.Runtime.OrleansLifecycleCanceledException");
            feature.AddKnownType("Orleans.Runtime.OrleansMessageRejectionException,Orleans.Core.Abstractions", "Orleans.Runtime.OrleansMessageRejectionException");
            feature.AddKnownType("Orleans.Runtime.SiloUnavailableException,Orleans.Core.Abstractions", "Orleans.Runtime.SiloUnavailableException");
            feature.AddKnownType("Orleans.Runtime.ActivationAddress,Orleans.Core.Abstractions", "Orleans.Runtime.ActivationAddress");
            feature.AddKnownType("Orleans.Runtime.ActivationId,Orleans.Core.Abstractions", "Orleans.Runtime.ActivationId");
            feature.AddKnownType("Orleans.Runtime.GrainId,Orleans.Core.Abstractions", "Orleans.Runtime.GrainId");
            feature.AddKnownType("Orleans.Runtime.GuidId,Orleans.Core.Abstractions", "Orleans.Runtime.GuidId");
            feature.AddKnownType("Orleans.Runtime.SiloAddress,Orleans.Core.Abstractions", "Orleans.Runtime.SiloAddress");
            feature.AddKnownType("Orleans.Runtime.UniqueIdentifier,Orleans.Core.Abstractions", "Orleans.Runtime.UniqueIdentifier");
            feature.AddKnownType("Orleans.Runtime.UniqueKey,Orleans.Core.Abstractions", "Orleans.Runtime.UniqueKey");
            feature.AddKnownType("Orleans.Runtime.UniqueKey+Category,Orleans.Core.Abstractions", "Orleans.Runtime.Orleans.Runtime.UniqueKey.Category");
            feature.AddKnownType("Orleans.Runtime.IGrainLifecycle,Orleans.Core.Abstractions", "Orleans.Runtime.IGrainLifecycle");
            feature.AddKnownType("Orleans.Runtime.Severity,Orleans.Core.Abstractions", "Orleans.Runtime.Severity");
            feature.AddKnownType("Orleans.Runtime.ActivationCountBasedPlacement,Orleans.Core.Abstractions", "Orleans.Runtime.ActivationCountBasedPlacement");
            feature.AddKnownType("Orleans.Runtime.HashBasedPlacement,Orleans.Core.Abstractions", "Orleans.Runtime.HashBasedPlacement");
            feature.AddKnownType("Orleans.Runtime.PlacementStrategy,Orleans.Core.Abstractions", "Orleans.Runtime.PlacementStrategy");
            feature.AddKnownType("Orleans.Runtime.PreferLocalPlacement,Orleans.Core.Abstractions", "Orleans.Runtime.PreferLocalPlacement");
            feature.AddKnownType("Orleans.Runtime.RandomPlacement,Orleans.Core.Abstractions", "Orleans.Runtime.RandomPlacement");
            feature.AddKnownType("Orleans.Runtime.StatelessWorkerPlacement,Orleans.Core.Abstractions", "Orleans.Runtime.StatelessWorkerPlacement");
            feature.AddKnownType("Orleans.Runtime.GrainReferenceNotBoundException,Orleans.Core.Abstractions", "Orleans.Runtime.GrainReferenceNotBoundException");
            feature.AddKnownType("Orleans.Runtime.GrainReference,Orleans.Core.Abstractions", "Orleans.Runtime.GrainReference");
            feature.AddKnownType("Orleans.Runtime.IAddressable,Orleans.Core.Abstractions", "Orleans.Runtime.IAddressable");
            feature.AddKnownType("Orleans.Runtime.IGrainCancellationTokenRuntime,Orleans.Core.Abstractions", "Orleans.Runtime.IGrainCancellationTokenRuntime");
            feature.AddKnownType("Orleans.Runtime.IGrainContext,Orleans.Core.Abstractions", "Orleans.Runtime.IGrainContext");
            feature.AddKnownType("Orleans.Runtime.IActivationData,Orleans.Core.Abstractions", "Orleans.Runtime.IActivationData");
            feature.AddKnownType("Orleans.Runtime.IGrainExtension,Orleans.Core.Abstractions", "Orleans.Runtime.IGrainExtension");
            feature.AddKnownType("Orleans.Runtime.IGrainReferenceRuntime,Orleans.Core.Abstractions", "Orleans.Runtime.IGrainReferenceRuntime");
            feature.AddKnownType("Orleans.Runtime.IGrainRuntime,Orleans.Core.Abstractions", "Orleans.Runtime.IGrainRuntime");
            feature.AddKnownType("Orleans.Runtime.IGrainTimer,Orleans.Core.Abstractions", "Orleans.Runtime.IGrainTimer");
            feature.AddKnownType("Orleans.Runtime.IGrainReminder,Orleans.Core.Abstractions", "Orleans.Runtime.IGrainReminder");
            feature.AddKnownType("Orleans.Runtime.TickStatus,Orleans.Core.Abstractions", "Orleans.Runtime.TickStatus");
            feature.AddKnownType("Orleans.Runtime.ReminderException,Orleans.Core.Abstractions", "Orleans.Runtime.ReminderException");
            feature.AddKnownType("Orleans.Runtime.IKeyedService`2,Orleans.Core.Abstractions", "Orleans.Runtime.IKeyedService`2'2");
            feature.AddKnownType("Orleans.Runtime.IKeyedServiceCollection`2,Orleans.Core.Abstractions", "Orleans.Runtime.IKeyedServiceCollection`2'2");
            feature.AddKnownType("Orleans.Serialization.IOnDeserialized,Orleans.Core.Abstractions", "Orleans.Serialization.IOnDeserialized");
            feature.AddKnownType("Orleans.Serialization.GrainReferenceKeyInfo,Orleans.Core.Abstractions", "Orleans.Serialization.GrainReferenceKeyInfo");
            feature.AddKnownType("Orleans.Serialization.IBinaryTokenStreamReader,Orleans.Core.Abstractions", "Orleans.Serialization.IBinaryTokenStreamReader");
            feature.AddKnownType("Orleans.Serialization.IBinaryTokenStreamWriter,Orleans.Core.Abstractions", "Orleans.Serialization.IBinaryTokenStreamWriter");
            feature.AddKnownType("Orleans.Serialization.IFieldUtils,Orleans.Core.Abstractions", "Orleans.Serialization.IFieldUtils");
            feature.AddKnownType("Orleans.Serialization.ISerializerContext,Orleans.Core.Abstractions", "Orleans.Serialization.ISerializerContext");
            feature.AddKnownType("Orleans.Serialization.ICopyContext,Orleans.Core.Abstractions", "Orleans.Serialization.ICopyContext");
            feature.AddKnownType("Orleans.Serialization.ISerializationContext,Orleans.Core.Abstractions", "Orleans.Serialization.ISerializationContext");
            feature.AddKnownType("Orleans.Serialization.IDeserializationContext,Orleans.Core.Abstractions", "Orleans.Serialization.IDeserializationContext");
            feature.AddKnownType("Orleans.Serialization.SerializerMethods,Orleans.Core.Abstractions", "Orleans.Serialization.SerializerMethods");
            feature.AddKnownType("Orleans.Serialization.SerializerFeature,Orleans.Core.Abstractions", "Orleans.Serialization.SerializerFeature");
            feature.AddKnownType("Orleans.Serialization.SerializerTypeMetadata,Orleans.Core.Abstractions", "Orleans.Serialization.SerializerTypeMetadata");
            feature.AddKnownType("Orleans.Serialization.SerializerDelegateMetadata,Orleans.Core.Abstractions", "Orleans.Serialization.SerializerDelegateMetadata");
            feature.AddKnownType("Orleans.Serialization.SerializerKnownTypeMetadata,Orleans.Core.Abstractions", "Orleans.Serialization.SerializerKnownTypeMetadata");
            feature.AddKnownType("Orleans.Services.IGrainService,Orleans.Core.Abstractions", "Orleans.Services.IGrainService");
            feature.AddKnownType("Orleans.Services.IGrainServiceClient`1,Orleans.Core.Abstractions", "Orleans.Services.IGrainServiceClient`1'1");
            feature.AddKnownType("Orleans.Statistics.IAppEnvironmentStatistics,Orleans.Core.Abstractions", "Orleans.Statistics.IAppEnvironmentStatistics");
            feature.AddKnownType("Orleans.Statistics.IHostEnvironmentStatistics,Orleans.Core.Abstractions", "Orleans.Statistics.IHostEnvironmentStatistics");
            feature.AddKnownType("Orleans.Streams.IAsyncBatchObservable`1,Orleans.Core.Abstractions", "Orleans.Streams.IAsyncBatchObservable`1'1");
            feature.AddKnownType("Orleans.Streams.SequentialItem`1,Orleans.Core.Abstractions", "Orleans.Streams.SequentialItem`1'1");
            feature.AddKnownType("Orleans.Streams.IAsyncBatchObserver`1,Orleans.Core.Abstractions", "Orleans.Streams.IAsyncBatchObserver`1'1");
            feature.AddKnownType("Orleans.Streams.IAsyncBatchProducer`1,Orleans.Core.Abstractions", "Orleans.Streams.IAsyncBatchProducer`1'1");
            feature.AddKnownType("Orleans.Streams.IAsyncObservable`1,Orleans.Core.Abstractions", "Orleans.Streams.IAsyncObservable`1'1");
            feature.AddKnownType("Orleans.Streams.IAsyncObserver`1,Orleans.Core.Abstractions", "Orleans.Streams.IAsyncObserver`1'1");
            feature.AddKnownType("Orleans.Streams.IAsyncStream`1,Orleans.Core.Abstractions", "Orleans.Streams.IAsyncStream`1'1");
            feature.AddKnownType("Orleans.Streams.IStreamIdentity,Orleans.Core.Abstractions", "Orleans.Streams.IStreamIdentity");
            feature.AddKnownType("Orleans.Streams.StreamSequenceToken,Orleans.Core.Abstractions", "Orleans.Streams.StreamSequenceToken");
            feature.AddKnownType("Orleans.Streams.StreamSubscriptionHandle`1,Orleans.Core.Abstractions", "Orleans.Streams.StreamSubscriptionHandle`1'1");
            feature.AddKnownType("Orleans.Streams.GenericAsyncObserver`1,Orleans.Core.Abstractions", "Orleans.Streams.GenericAsyncObserver`1'1");
            feature.AddKnownType("Orleans.Streams.GenericAsyncBatchObserver`1,Orleans.Core.Abstractions", "Orleans.Streams.GenericAsyncBatchObserver`1'1");
            feature.AddKnownType("Orleans.Streams.IQueueDataAdapter`1,Orleans.Core.Abstractions", "Orleans.Streams.IQueueDataAdapter`1'1");
            feature.AddKnownType("Orleans.Streams.IQueueDataAdapter`2,Orleans.Core.Abstractions", "Orleans.Streams.IQueueDataAdapter`2'2");
            feature.AddKnownType("Orleans.Streams.StreamPosition,Orleans.Core.Abstractions", "Orleans.Streams.StreamPosition");
            feature.AddKnownType("Orleans.Streams.AllStreamNamespacesPredicate,Orleans.Core.Abstractions", "Orleans.Streams.AllStreamNamespacesPredicate");
            feature.AddKnownType("Orleans.Streams.ExactMatchStreamNamespacePredicate,Orleans.Core.Abstractions", "Orleans.Streams.ExactMatchStreamNamespacePredicate");
            feature.AddKnownType("Orleans.Streams.IStreamNamespacePredicate,Orleans.Core.Abstractions", "Orleans.Streams.IStreamNamespacePredicate");
            feature.AddKnownType("Orleans.Streams.RegexStreamNamespacePredicate,Orleans.Core.Abstractions", "Orleans.Streams.RegexStreamNamespacePredicate");
            feature.AddKnownType("Orleans.Streams.IStreamProvider,Orleans.Core.Abstractions", "Orleans.Streams.IStreamProvider");
            feature.AddKnownType("Orleans.Streams.Core.IStreamSubscriptionHandleFactory,Orleans.Core.Abstractions", "Orleans.Streams.Core.IStreamSubscriptionHandleFactory");
            feature.AddKnownType("Orleans.Streams.Core.IStreamSubscriptionObserver,Orleans.Core.Abstractions", "Orleans.Streams.Core.IStreamSubscriptionObserver");
            feature.AddKnownType("Orleans.Timers.IReminderRegistry,Orleans.Core.Abstractions", "Orleans.Timers.IReminderRegistry");
            feature.AddKnownType("Orleans.Timers.ITimerRegistry,Orleans.Core.Abstractions", "Orleans.Timers.ITimerRegistry");
            feature.AddKnownType("Orleans.Versions.IVersionStore,Orleans.Core.Abstractions", "Orleans.Versions.IVersionStore");
            feature.AddKnownType("Orleans.Versions.Compatibility.AllVersionsCompatible,Orleans.Core.Abstractions", "Orleans.Versions.Compatibility.AllVersionsCompatible");
            feature.AddKnownType("Orleans.Versions.Compatibility.BackwardCompatible,Orleans.Core.Abstractions", "Orleans.Versions.Compatibility.BackwardCompatible");
            feature.AddKnownType("Orleans.Versions.Compatibility.ICompatibilityDirector,Orleans.Core.Abstractions", "Orleans.Versions.Compatibility.ICompatibilityDirector");
            feature.AddKnownType("Orleans.Versions.Compatibility.CompatibilityStrategy,Orleans.Core.Abstractions", "Orleans.Versions.Compatibility.CompatibilityStrategy");
            feature.AddKnownType("Orleans.Versions.Compatibility.StrictVersionCompatible,Orleans.Core.Abstractions", "Orleans.Versions.Compatibility.StrictVersionCompatible");
            feature.AddKnownType("Orleans.Versions.Selector.AllCompatibleVersions,Orleans.Core.Abstractions", "Orleans.Versions.Selector.AllCompatibleVersions");
            feature.AddKnownType("Orleans.Versions.Selector.IVersionSelector,Orleans.Core.Abstractions", "Orleans.Versions.Selector.IVersionSelector");
            feature.AddKnownType("Orleans.Versions.Selector.VersionSelectorStrategy,Orleans.Core.Abstractions", "Orleans.Versions.Selector.VersionSelectorStrategy");
            feature.AddKnownType("Orleans.Versions.Selector.LatestVersion,Orleans.Core.Abstractions", "Orleans.Versions.Selector.LatestVersion");
            feature.AddKnownType("Orleans.Versions.Selector.MinimumVersion,Orleans.Core.Abstractions", "Orleans.Versions.Selector.MinimumVersion");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute", "IsReadOnlyAttribute");
            feature.AddKnownType("System.Buffers.ArrayPool`1", "ArrayPool`1'1");
            feature.AddKnownType("System.Buffers.ArrayPoolEventSource", "ArrayPoolEventSource");
            feature.AddKnownType("System.Buffers.ArrayPoolEventSource+BufferAllocatedReason", "BufferAllocatedReason");
            feature.AddKnownType("System.Buffers.DefaultArrayPool`1", "DefaultArrayPool`1'1");
            feature.AddKnownType("System.Buffers.DefaultArrayPool`1+Bucket", "Bucket'1");
            feature.AddKnownType("System.Runtime.CompilerServices.__BlockReflectionAttribute", "__BlockReflectionAttribute");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeNCryptHandle,System.Core", "Microsoft.Win32.SafeHandles.SafeNCryptHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Core", "Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle,System.Core", "Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle,System.Core", "Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafePipeHandle,System.Core", "Microsoft.Win32.SafeHandles.SafePipeHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle,System.Core", "Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle,System.Core", "Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle");
            feature.AddKnownType("System.Collections.Generic.HashSet`1", "HashSet`1'1");
            feature.AddKnownType("System.Collections.Generic.HashSet`1+Enumerator", "HashSet`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Generic.HashSetDebugView`1", "HashSetDebugView`1'1");
            feature.AddKnownType("System.Diagnostics.EventSchemaTraceListener", "EventSchemaTraceListener");
            feature.AddKnownType("System.Diagnostics.TraceLogRetentionOption", "TraceLogRetentionOption");
            feature.AddKnownType("System.Diagnostics.UnescapedXmlDiagnosticData", "UnescapedXmlDiagnosticData");
            feature.AddKnownType("System.Diagnostics.Eventing.EventDescriptor", "EventDescriptor");
            feature.AddKnownType("System.Diagnostics.Eventing.EventProvider", "EventProvider");
            feature.AddKnownType("System.Diagnostics.Eventing.EventProvider+WriteEventErrorCode", "EventProvider.WriteEventErrorCode");
            feature.AddKnownType("System.Diagnostics.Eventing.EventProviderTraceListener", "EventProviderTraceListener");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventBookmark", "EventBookmark");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogType", "EventLogType");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogIsolation", "EventLogIsolation");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogMode", "EventLogMode");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogConfiguration", "EventLogConfiguration");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogLink", "EventLogLink");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogStatus", "EventLogStatus");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventProperty", "EventProperty");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogPropertySelector", "EventLogPropertySelector");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventRecord", "EventRecord");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventKeyword", "EventKeyword");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLevel", "EventLevel");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogRecord", "EventLogRecord");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogReader", "EventLogReader");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogWatcher", "EventLogWatcher");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs", "EventRecordWrittenEventArgs");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogQuery", "EventLogQuery");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.SessionAuthentication", "SessionAuthentication");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.PathType", "PathType");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogSession", "EventLogSession");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventMetadata", "EventMetadata");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventOpcode", "EventOpcode");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventTask", "EventTask");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogException", "EventLogException");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogNotFoundException", "EventLogNotFoundException");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogReadingException", "EventLogReadingException");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException", "EventLogProviderDisabledException");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogInvalidDataException", "EventLogInvalidDataException");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.EventLogInformation", "EventLogInformation");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.ProviderMetadata", "ProviderMetadata");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.StandardEventLevel", "StandardEventLevel");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.StandardEventTask", "StandardEventTask");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.StandardEventOpcode", "StandardEventOpcode");
            feature.AddKnownType("System.Diagnostics.Eventing.Reader.StandardEventKeywords", "StandardEventKeywords");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterData", "CounterData");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet", "CounterSetInstanceCounterDataSet");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterSet", "CounterSet");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterSetInstance", "CounterSetInstance");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterSetInstanceType", "CounterSetInstanceType");
            feature.AddKnownType("System.Diagnostics.PerformanceData.CounterType", "CounterType");
            feature.AddKnownType("System.Dynamic.BinaryOperationBinder", "BinaryOperationBinder");
            feature.AddKnownType("System.Dynamic.BindingRestrictions", "BindingRestrictions");
            feature.AddKnownType("System.Dynamic.BindingRestrictions+BindingRestrictionsProxy", "BindingRestrictionsProxy");
            feature.AddKnownType("System.Dynamic.CallInfo", "CallInfo");
            feature.AddKnownType("System.Dynamic.ConvertBinder", "ConvertBinder");
            feature.AddKnownType("System.Dynamic.CreateInstanceBinder", "CreateInstanceBinder");
            feature.AddKnownType("System.Dynamic.DeleteIndexBinder", "DeleteIndexBinder");
            feature.AddKnownType("System.Dynamic.DeleteMemberBinder", "DeleteMemberBinder");
            feature.AddKnownType("System.Dynamic.DynamicMetaObject", "DynamicMetaObject");
            feature.AddKnownType("System.Dynamic.DynamicMetaObjectBinder", "DynamicMetaObjectBinder");
            feature.AddKnownType("System.Dynamic.DynamicObject", "DynamicObject");
            feature.AddKnownType("System.Dynamic.ExpandoObject", "ExpandoObject");
            feature.AddKnownType("System.Dynamic.GetIndexBinder", "GetIndexBinder");
            feature.AddKnownType("System.Dynamic.GetMemberBinder", "GetMemberBinder");
            feature.AddKnownType("System.Dynamic.IDynamicMetaObjectProvider", "IDynamicMetaObjectProvider");
            feature.AddKnownType("System.Dynamic.IInvokeOnGetBinder", "IInvokeOnGetBinder");
            feature.AddKnownType("System.Dynamic.InvokeBinder", "InvokeBinder");
            feature.AddKnownType("System.Dynamic.InvokeMemberBinder", "InvokeMemberBinder");
            feature.AddKnownType("System.Dynamic.SetIndexBinder", "SetIndexBinder");
            feature.AddKnownType("System.Dynamic.SetMemberBinder", "SetMemberBinder");
            feature.AddKnownType("System.Dynamic.UnaryOperationBinder", "UnaryOperationBinder");
            feature.AddKnownType("System.IO.HandleInheritability", "HandleInheritability");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedFileAccess", "MemoryMappedFileAccess");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedFileOptions", "MemoryMappedFileOptions");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedFile", "MemoryMappedFile");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedViewAccessor", "MemoryMappedViewAccessor");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedViewStream", "MemoryMappedViewStream");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedFileRights", "MemoryMappedFileRights");
            feature.AddKnownType("System.IO.MemoryMappedFiles.MemoryMappedFileSecurity", "MemoryMappedFileSecurity");
            feature.AddKnownType("System.IO.Pipes.PipeDirection", "PipeDirection");
            feature.AddKnownType("System.IO.Pipes.PipeTransmissionMode", "PipeTransmissionMode");
            feature.AddKnownType("System.IO.Pipes.PipeOptions", "PipeOptions");
            feature.AddKnownType("System.IO.Pipes.AnonymousPipeServerStream", "AnonymousPipeServerStream");
            feature.AddKnownType("System.IO.Pipes.AnonymousPipeClientStream", "AnonymousPipeClientStream");
            feature.AddKnownType("System.IO.Pipes.NamedPipeServerStream", "NamedPipeServerStream");
            feature.AddKnownType("System.IO.Pipes.NamedPipeClientStream", "NamedPipeClientStream");
            feature.AddKnownType("System.IO.Pipes.PipeStream", "PipeStream");
            feature.AddKnownType("System.IO.Pipes.PipeAccessRights", "PipeAccessRights");
            feature.AddKnownType("System.IO.Pipes.PipeAccessRule", "PipeAccessRule");
            feature.AddKnownType("System.IO.Pipes.PipeAuditRule", "PipeAuditRule");
            feature.AddKnownType("System.IO.Pipes.PipeSecurity", "PipeSecurity");
            feature.AddKnownType("System.Linq.IQueryable", "IQueryable");
            feature.AddKnownType("System.Linq.IQueryable`1", "IQueryable`1'1");
            feature.AddKnownType("System.Linq.IQueryProvider", "IQueryProvider");
            feature.AddKnownType("System.Linq.IOrderedQueryable", "IOrderedQueryable");
            feature.AddKnownType("System.Linq.IOrderedQueryable`1", "IOrderedQueryable`1'1");
            feature.AddKnownType("System.Linq.IOrderedEnumerable`1", "IOrderedEnumerable`1'1");
            feature.AddKnownType("System.Linq.IGrouping`2", "IGrouping`2'2");
            feature.AddKnownType("System.Linq.ILookup`2", "ILookup`2'2");
            feature.AddKnownType("System.Linq.Lookup`2", "Lookup`2'2");
            feature.AddKnownType("System.Linq.EnumerableQuery", "EnumerableQuery");
            feature.AddKnownType("System.Linq.EnumerableQuery`1", "EnumerableQuery`1'1");
            feature.AddKnownType("System.Linq.EnumerableExecutor", "EnumerableExecutor");
            feature.AddKnownType("System.Linq.EnumerableExecutor`1", "EnumerableExecutor`1'1");
            feature.AddKnownType("System.Linq.ParallelMergeOptions", "ParallelMergeOptions");
            feature.AddKnownType("System.Linq.ParallelExecutionMode", "ParallelExecutionMode");
            feature.AddKnownType("System.Linq.OrderedParallelQuery`1", "OrderedParallelQuery`1'1");
            feature.AddKnownType("System.Linq.ParallelQuery", "ParallelQuery");
            feature.AddKnownType("System.Linq.ParallelQuery`1", "ParallelQuery`1'1");
            feature.AddKnownType("System.Linq.Expressions.BinaryExpression", "BinaryExpression");
            feature.AddKnownType("System.Linq.Expressions.Expression+BinaryExpressionProxy", "BinaryExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+BlockExpressionProxy", "BlockExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+CatchBlockProxy", "CatchBlockProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+ConditionalExpressionProxy", "ConditionalExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+ConstantExpressionProxy", "ConstantExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+DebugInfoExpressionProxy", "DebugInfoExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+DefaultExpressionProxy", "DefaultExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+DynamicExpressionProxy", "DynamicExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+GotoExpressionProxy", "GotoExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+IndexExpressionProxy", "IndexExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+InvocationExpressionProxy", "InvocationExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+LabelExpressionProxy", "LabelExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+LambdaExpressionProxy", "LambdaExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+ListInitExpressionProxy", "ListInitExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+LoopExpressionProxy", "LoopExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+MemberExpressionProxy", "MemberExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+MemberInitExpressionProxy", "MemberInitExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+MethodCallExpressionProxy", "MethodCallExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+NewArrayExpressionProxy", "NewArrayExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+NewExpressionProxy", "NewExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+ParameterExpressionProxy", "ParameterExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+RuntimeVariablesExpressionProxy", "RuntimeVariablesExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+SwitchCaseProxy", "SwitchCaseProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+SwitchExpressionProxy", "SwitchExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+TryExpressionProxy", "TryExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+TypeBinaryExpressionProxy", "TypeBinaryExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.Expression+UnaryExpressionProxy", "UnaryExpressionProxy");
            feature.AddKnownType("System.Linq.Expressions.BlockExpression", "BlockExpression");
            feature.AddKnownType("System.Linq.Expressions.CatchBlock", "CatchBlock");
            feature.AddKnownType("System.Linq.Expressions.ConditionalExpression", "ConditionalExpression");
            feature.AddKnownType("System.Linq.Expressions.ConstantExpression", "ConstantExpression");
            feature.AddKnownType("System.Linq.Expressions.DebugInfoExpression", "DebugInfoExpression");
            feature.AddKnownType("System.Linq.Expressions.DefaultExpression", "DefaultExpression");
            feature.AddKnownType("System.Linq.Expressions.DynamicExpression", "DynamicExpression");
            feature.AddKnownType("System.Linq.Expressions.ElementInit", "ElementInit");
            feature.AddKnownType("System.Linq.Expressions.ExpressionType", "ExpressionType");
            feature.AddKnownType("System.Linq.Expressions.ExpressionVisitor", "ExpressionVisitor");
            feature.AddKnownType("System.Linq.Expressions.DynamicExpressionVisitor", "DynamicExpressionVisitor");
            feature.AddKnownType("System.Linq.Expressions.GotoExpressionKind", "GotoExpressionKind");
            feature.AddKnownType("System.Linq.Expressions.GotoExpression", "GotoExpression");
            feature.AddKnownType("System.Linq.Expressions.IArgumentProvider", "IArgumentProvider");
            feature.AddKnownType("System.Linq.Expressions.IDynamicExpression", "IDynamicExpression");
            feature.AddKnownType("System.Linq.Expressions.IndexExpression", "IndexExpression");
            feature.AddKnownType("System.Linq.Expressions.InvocationExpression", "InvocationExpression");
            feature.AddKnownType("System.Linq.Expressions.LabelExpression", "LabelExpression");
            feature.AddKnownType("System.Linq.Expressions.LabelTarget", "LabelTarget");
            feature.AddKnownType("System.Linq.Expressions.ListInitExpression", "ListInitExpression");
            feature.AddKnownType("System.Linq.Expressions.LoopExpression", "LoopExpression");
            feature.AddKnownType("System.Linq.Expressions.MemberAssignment", "MemberAssignment");
            feature.AddKnownType("System.Linq.Expressions.MemberBindingType", "MemberBindingType");
            feature.AddKnownType("System.Linq.Expressions.MemberBinding", "MemberBinding");
            feature.AddKnownType("System.Linq.Expressions.MemberExpression", "MemberExpression");
            feature.AddKnownType("System.Linq.Expressions.MemberInitExpression", "MemberInitExpression");
            feature.AddKnownType("System.Linq.Expressions.MemberListBinding", "MemberListBinding");
            feature.AddKnownType("System.Linq.Expressions.MemberMemberBinding", "MemberMemberBinding");
            feature.AddKnownType("System.Linq.Expressions.MethodCallExpression", "MethodCallExpression");
            feature.AddKnownType("System.Linq.Expressions.NewArrayExpression", "NewArrayExpression");
            feature.AddKnownType("System.Linq.Expressions.NewExpression", "NewExpression");
            feature.AddKnownType("System.Linq.Expressions.ParameterExpression", "ParameterExpression");
            feature.AddKnownType("System.Linq.Expressions.RuntimeVariablesExpression", "RuntimeVariablesExpression");
            feature.AddKnownType("System.Linq.Expressions.SwitchCase", "SwitchCase");
            feature.AddKnownType("System.Linq.Expressions.SwitchExpression", "SwitchExpression");
            feature.AddKnownType("System.Linq.Expressions.SymbolDocumentInfo", "SymbolDocumentInfo");
            feature.AddKnownType("System.Linq.Expressions.TryExpression", "TryExpression");
            feature.AddKnownType("System.Linq.Expressions.TypeBinaryExpression", "TypeBinaryExpression");
            feature.AddKnownType("System.Linq.Expressions.UnaryExpression", "UnaryExpression");
            feature.AddKnownType("System.Management.Instrumentation.ManagementEntityAttribute", "ManagementEntityAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementHostingModel", "ManagementHostingModel");
            feature.AddKnownType("System.Management.Instrumentation.WmiConfigurationAttribute", "WmiConfigurationAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementMemberAttribute", "ManagementMemberAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementNewInstanceAttribute", "ManagementNewInstanceAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementBindAttribute", "ManagementBindAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementCreateAttribute", "ManagementCreateAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementRemoveAttribute", "ManagementRemoveAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementEnumeratorAttribute", "ManagementEnumeratorAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementProbeAttribute", "ManagementProbeAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementTaskAttribute", "ManagementTaskAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementKeyAttribute", "ManagementKeyAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementReferenceAttribute", "ManagementReferenceAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementConfigurationType", "ManagementConfigurationType");
            feature.AddKnownType("System.Management.Instrumentation.ManagementConfigurationAttribute", "ManagementConfigurationAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementCommitAttribute", "ManagementCommitAttribute");
            feature.AddKnownType("System.Management.Instrumentation.ManagementNameAttribute", "ManagementNameAttribute");
            feature.AddKnownType("System.Management.Instrumentation.InstrumentationBaseException", "InstrumentationBaseException");
            feature.AddKnownType("System.Management.Instrumentation.InstrumentationException", "InstrumentationException");
            feature.AddKnownType("System.Management.Instrumentation.InstanceNotFoundException", "InstanceNotFoundException");
            feature.AddKnownType("System.Runtime.CompilerServices.ExecutionScope", "ExecutionScope");
            feature.AddKnownType("System.Runtime.CompilerServices.DynamicAttribute", "DynamicAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.CallSite", "CallSite");
            feature.AddKnownType("System.Runtime.CompilerServices.CallSite`1", "CallSite`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.CallSiteBinder", "CallSiteBinder");
            feature.AddKnownType("System.Runtime.CompilerServices.RuleCache`1", "RuleCache`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.Closure", "Closure");
            feature.AddKnownType("System.Runtime.CompilerServices.DebugInfoGenerator", "DebugInfoGenerator");
            feature.AddKnownType("System.Runtime.CompilerServices.IRuntimeVariables", "IRuntimeVariables");
            feature.AddKnownType("System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1", "ReadOnlyCollectionBuilder`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.StrongBox`1", "StrongBox`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.IStrongBox", "IStrongBox");
            feature.AddKnownType("System.Runtime.InteropServices.ComAwareEventInfo", "ComAwareEventInfo");
            feature.AddKnownType("System.Security.ManifestKinds", "ManifestKinds");
            feature.AddKnownType("System.Security.Cryptography.IncrementalHash", "IncrementalHash");
            feature.AddKnownType("System.Security.Cryptography.AesCng", "AesCng");
            feature.AddKnownType("System.Security.Cryptography.AesCryptoServiceProvider", "AesCryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.AesManaged", "AesManaged");
            feature.AddKnownType("System.Security.Cryptography.CngAlgorithm", "CngAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.CngAlgorithmGroup", "CngAlgorithmGroup");
            feature.AddKnownType("System.Security.Cryptography.CngKeyHandleOpenOptions", "CngKeyHandleOpenOptions");
            feature.AddKnownType("System.Security.Cryptography.CngKey", "CngKey");
            feature.AddKnownType("System.Security.Cryptography.CngKeyBlobFormat", "CngKeyBlobFormat");
            feature.AddKnownType("System.Security.Cryptography.CngKeyCreationParameters", "CngKeyCreationParameters");
            feature.AddKnownType("System.Security.Cryptography.CngProperty", "CngProperty");
            feature.AddKnownType("System.Security.Cryptography.CngPropertyCollection", "CngPropertyCollection");
            feature.AddKnownType("System.Security.Cryptography.CngProvider", "CngProvider");
            feature.AddKnownType("System.Security.Cryptography.CngUIPolicy", "CngUIPolicy");
            feature.AddKnownType("System.Security.Cryptography.DSACng", "DSACng");
            feature.AddKnownType("System.Security.Cryptography.ECCurve", "ECCurve");
            feature.AddKnownType("System.Security.Cryptography.ECCurve+ECCurveType", "ECCurve.ECCurveType");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellman", "ECDiffieHellman");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellmanPublicKey", "ECDiffieHellmanPublicKey");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction", "ECDiffieHellmanKeyDerivationFunction");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellmanCng", "ECDiffieHellmanCng");
            feature.AddKnownType("System.Security.Cryptography.ECDiffieHellmanCngPublicKey", "ECDiffieHellmanCngPublicKey");
            feature.AddKnownType("System.Security.Cryptography.ECDsa", "ECDsa");
            feature.AddKnownType("System.Security.Cryptography.ECDsaCng", "ECDsaCng");
            feature.AddKnownType("System.Security.Cryptography.ECKeyXmlFormat", "ECKeyXmlFormat");
            feature.AddKnownType("System.Security.Cryptography.ECParameters", "ECParameters");
            feature.AddKnownType("System.Security.Cryptography.ECPoint", "ECPoint");
            feature.AddKnownType("System.Security.Cryptography.ManifestSignatureInformation", "ManifestSignatureInformation");
            feature.AddKnownType("System.Security.Cryptography.ManifestSignatureInformationCollection", "ManifestSignatureInformationCollection");
            feature.AddKnownType("System.Security.Cryptography.MD5Cng", "MD5Cng");
            feature.AddKnownType("System.Security.Cryptography.CngExportPolicies", "CngExportPolicies");
            feature.AddKnownType("System.Security.Cryptography.CngKeyCreationOptions", "CngKeyCreationOptions");
            feature.AddKnownType("System.Security.Cryptography.CngKeyOpenOptions", "CngKeyOpenOptions");
            feature.AddKnownType("System.Security.Cryptography.CngKeyUsages", "CngKeyUsages");
            feature.AddKnownType("System.Security.Cryptography.CngPropertyOptions", "CngPropertyOptions");
            feature.AddKnownType("System.Security.Cryptography.CngUIProtectionLevels", "CngUIProtectionLevels");
            feature.AddKnownType("System.Security.Cryptography.RSACng", "RSACng");
            feature.AddKnownType("System.Security.Cryptography.SHA1Cng", "SHA1Cng");
            feature.AddKnownType("System.Security.Cryptography.SHA256Cng", "SHA256Cng");
            feature.AddKnownType("System.Security.Cryptography.SHA256CryptoServiceProvider", "SHA256CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.SHA384Cng", "SHA384Cng");
            feature.AddKnownType("System.Security.Cryptography.SHA384CryptoServiceProvider", "SHA384CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.SHA512Cng", "SHA512Cng");
            feature.AddKnownType("System.Security.Cryptography.SHA512CryptoServiceProvider", "SHA512CryptoServiceProvider");
            feature.AddKnownType("System.Security.Cryptography.SignatureVerificationResult", "SignatureVerificationResult");
            feature.AddKnownType("System.Security.Cryptography.StrongNameSignatureInformation", "StrongNameSignatureInformation");
            feature.AddKnownType("System.Security.Cryptography.TripleDESCng", "TripleDESCng");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation", "AuthenticodeSignatureInformation");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.CertificateRequest", "CertificateRequest");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.SubjectAlternativeNameBuilder", "SubjectAlternativeNameBuilder");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.TimestampInformation", "TimestampInformation");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.TrustStatus", "TrustStatus");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509SignatureGenerator", "X509SignatureGenerator");
            feature.AddKnownType("System.Threading.LockRecursionPolicy", "LockRecursionPolicy");
            feature.AddKnownType("System.Threading.ReaderWriterLockSlim", "ReaderWriterLockSlim");
            feature.AddKnownType("System.Data.DataRowComparer`1", "DataRowComparer`1'1");
            feature.AddKnownType("System.Data.EnumerableRowCollection", "EnumerableRowCollection");
            feature.AddKnownType("System.Data.EnumerableRowCollection`1", "EnumerableRowCollection`1'1");
            feature.AddKnownType("System.Data.OrderedEnumerableRowCollection`1", "OrderedEnumerableRowCollection`1'1");
            feature.AddKnownType("System.Data.TypedTableBase`1", "TypedTableBase`1'1");
            feature.AddKnownType("SNINativeMethodWrapper,System.Data", "<global namespace>.SNINativeMethodWrapper");
            feature.AddKnownType("SNINativeMethodWrapper+QTypes,System.Data", "<global namespace>.QTypes");
            feature.AddKnownType("SNINativeMethodWrapper+ProviderEnum,System.Data", "<global namespace>.ProviderEnum");
            feature.AddKnownType("SNINativeMethodWrapper+IOType,System.Data", "<global namespace>.IOType");
            feature.AddKnownType("SNINativeMethodWrapper+ConsumerNumber,System.Data", "<global namespace>.ConsumerNumber");
            feature.AddKnownType("SNINativeMethodWrapper+ConsumerInfo,System.Data", "<global namespace>.ConsumerInfo");
            feature.AddKnownType("SNINativeMethodWrapper+SNI_Error,System.Data", "<global namespace>.SNI_Error");
            feature.AddKnownType("Win32NativeMethods,System.Data", "<global namespace>.Win32NativeMethods");
            feature.AddKnownType("NativeOledbWrapper,System.Data", "<global namespace>.NativeOledbWrapper");
            feature.AddKnownType("AdalException,System.Data", "<global namespace>.AdalException");
            feature.AddKnownType("ADALNativeWrapper,System.Data", "<global namespace>.ADALNativeWrapper");
            feature.AddKnownType("Sni_Consumer_Info,System.Data", "<global namespace>.Sni_Consumer_Info");
            feature.AddKnownType("SNI_ConnWrapper,System.Data", "<global namespace>.SNI_ConnWrapper");
            feature.AddKnownType("SNI_Packet_IOType,System.Data", "<global namespace>.SNI_Packet_IOType");
            feature.AddKnownType("ConsumerNum,System.Data", "<global namespace>.ConsumerNum");
            feature.AddKnownType("_GUID,System.Data", "<global namespace>._GUID");
            feature.AddKnownType("SNI_CLIENT_CONSUMER_INFO,System.Data", "<global namespace>.SNI_CLIENT_CONSUMER_INFO");
            feature.AddKnownType("__s_GUID,System.Data", "<global namespace>.__s_GUID");
            feature.AddKnownType("_FILETIME,System.Data", "<global namespace>._FILETIME");
            feature.AddKnownType("ProviderNum,System.Data", "<global namespace>.ProviderNum");
            feature.AddKnownType("SNI_ERROR,System.Data", "<global namespace>.SNI_ERROR");
            feature.AddKnownType("BOID,System.Data", "<global namespace>.BOID");
            feature.AddKnownType("__enative_startup_state,System.Data", "<global namespace>.__enative_startup_state");
            feature.AddKnownType("_EXCEPTION_POINTERS,System.Data", "<global namespace>._EXCEPTION_POINTERS");
            feature.AddKnownType("Bid+ApiGroup,System.Data", "<global namespace>.ApiGroup");
            feature.AddKnownType("SqlDependencyProcessDispatcher,System.Data", "<global namespace>.SqlDependencyProcessDispatcher");
            feature.AddKnownType("BidIdentityAttribute,System.Data", "<global namespace>.BidIdentityAttribute");
            feature.AddKnownType("BidMetaTextAttribute,System.Data", "<global namespace>.BidMetaTextAttribute");
            feature.AddKnownType("BidMethodAttribute,System.Data", "<global namespace>.BidMethodAttribute");
            feature.AddKnownType("BidArgumentTypeAttribute,System.Data", "<global namespace>.BidArgumentTypeAttribute");
            feature.AddKnownType("SNI_Conn,System.Data", "<global namespace>.SNI_Conn");
            feature.AddKnownType("SNI_Packet,System.Data", "<global namespace>.SNI_Packet");
            feature.AddKnownType("<CrtImplementationDetails>.ModuleLoadException,System.Data", "<CrtImplementationDetails>.ModuleLoadException");
            feature.AddKnownType("<CrtImplementationDetails>.ModuleLoadExceptionHandlerException,System.Data", "<CrtImplementationDetails>.ModuleLoadExceptionHandlerException");
            feature.AddKnownType("<CrtImplementationDetails>.ModuleUninitializer,System.Data", "<CrtImplementationDetails>.ModuleUninitializer");
            feature.AddKnownType("<CrtImplementationDetails>.LanguageSupport,System.Data", "<CrtImplementationDetails>.LanguageSupport");
            feature.AddKnownType("<CrtImplementationDetails>.Progress,System.Data", "<CrtImplementationDetails>.Progress");
            feature.AddKnownType("<CrtImplementationDetails>.Progress+State,System.Data", "<CrtImplementationDetails>.<CrtImplementationDetails>.Progress.State");
            feature.AddKnownType("<CrtImplementationDetails>.TriBool,System.Data", "<CrtImplementationDetails>.TriBool");
            feature.AddKnownType("<CrtImplementationDetails>.TriBool+State,System.Data", "<CrtImplementationDetails>.<CrtImplementationDetails>.TriBool.State");
            feature.AddKnownType("<CrtImplementationDetails>.ThisModule,System.Data", "<CrtImplementationDetails>.ThisModule");
            feature.AddKnownType("Microsoft.SqlServer.Server.ExtendedClrTypeCode,System.Data", "Microsoft.SqlServer.Server.ExtendedClrTypeCode");
            feature.AddKnownType("Microsoft.SqlServer.Server.ITypedGetters,System.Data", "Microsoft.SqlServer.Server.ITypedGetters");
            feature.AddKnownType("Microsoft.SqlServer.Server.ITypedGettersV3,System.Data", "Microsoft.SqlServer.Server.ITypedGettersV3");
            feature.AddKnownType("Microsoft.SqlServer.Server.ITypedSetters,System.Data", "Microsoft.SqlServer.Server.ITypedSetters");
            feature.AddKnownType("Microsoft.SqlServer.Server.ITypedSettersV3,System.Data", "Microsoft.SqlServer.Server.ITypedSettersV3");
            feature.AddKnownType("Microsoft.SqlServer.Server.MetaDataUtilsSmi,System.Data", "Microsoft.SqlServer.Server.MetaDataUtilsSmi");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiConnection,System.Data", "Microsoft.SqlServer.Server.SmiConnection");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiContext,System.Data", "Microsoft.SqlServer.Server.SmiContext");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiContextFactory,System.Data", "Microsoft.SqlServer.Server.SmiContextFactory");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiEventSink,System.Data", "Microsoft.SqlServer.Server.SmiEventSink");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiEventSink_Default,System.Data", "Microsoft.SqlServer.Server.SmiEventSink_Default");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiEventSink_Default+UnexpectedEventType,System.Data", "Microsoft.SqlServer.Server.UnexpectedEventType");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiEventSink_DeferedProcessing,System.Data", "Microsoft.SqlServer.Server.SmiEventSink_DeferedProcessing");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiEventStream,System.Data", "Microsoft.SqlServer.Server.SmiEventStream");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiExecuteType,System.Data", "Microsoft.SqlServer.Server.SmiExecuteType");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiGettersStream,System.Data", "Microsoft.SqlServer.Server.SmiGettersStream");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiLink,System.Data", "Microsoft.SqlServer.Server.SmiLink");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiMetaData,System.Data", "Microsoft.SqlServer.Server.SmiMetaData");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiExtendedMetaData,System.Data", "Microsoft.SqlServer.Server.SmiExtendedMetaData");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiParameterMetaData,System.Data", "Microsoft.SqlServer.Server.SmiParameterMetaData");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiStorageMetaData,System.Data", "Microsoft.SqlServer.Server.SmiStorageMetaData");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiQueryMetaData,System.Data", "Microsoft.SqlServer.Server.SmiQueryMetaData");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiRecordBuffer,System.Data", "Microsoft.SqlServer.Server.SmiRecordBuffer");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiRequestExecutor,System.Data", "Microsoft.SqlServer.Server.SmiRequestExecutor");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiSettersStream,System.Data", "Microsoft.SqlServer.Server.SmiSettersStream");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiStream,System.Data", "Microsoft.SqlServer.Server.SmiStream");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiXetterAccessMap,System.Data", "Microsoft.SqlServer.Server.SmiXetterAccessMap");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiXetterTypeCode,System.Data", "Microsoft.SqlServer.Server.SmiXetterTypeCode");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlContext,System.Data", "Microsoft.SqlServer.Server.SqlContext");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlDataRecord,System.Data", "Microsoft.SqlServer.Server.SqlDataRecord");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlPipe,System.Data", "Microsoft.SqlServer.Server.SqlPipe");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlTriggerContext,System.Data", "Microsoft.SqlServer.Server.SqlTriggerContext");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlClientWrapperSmiStream,System.Data", "Microsoft.SqlServer.Server.SqlClientWrapperSmiStream");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlClientWrapperSmiStreamChars,System.Data", "Microsoft.SqlServer.Server.SqlClientWrapperSmiStreamChars");
            feature.AddKnownType("Microsoft.SqlServer.Server.IBinarySerialize,System.Data", "Microsoft.SqlServer.Server.IBinarySerialize");
            feature.AddKnownType("Microsoft.SqlServer.Server.InvalidUdtException,System.Data", "Microsoft.SqlServer.Server.InvalidUdtException");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlFacetAttribute,System.Data", "Microsoft.SqlServer.Server.SqlFacetAttribute");
            feature.AddKnownType("Microsoft.SqlServer.Server.DataAccessKind,System.Data", "Microsoft.SqlServer.Server.DataAccessKind");
            feature.AddKnownType("Microsoft.SqlServer.Server.SystemDataAccessKind,System.Data", "Microsoft.SqlServer.Server.SystemDataAccessKind");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlFunctionAttribute,System.Data", "Microsoft.SqlServer.Server.SqlFunctionAttribute");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlMetaData,System.Data", "Microsoft.SqlServer.Server.SqlMetaData");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlMethodAttribute,System.Data", "Microsoft.SqlServer.Server.SqlMethodAttribute");
            feature.AddKnownType("Microsoft.SqlServer.Server.FieldInfoEx,System.Data", "Microsoft.SqlServer.Server.FieldInfoEx");
            feature.AddKnownType("Microsoft.SqlServer.Server.BinaryOrderedUdtNormalizer,System.Data", "Microsoft.SqlServer.Server.BinaryOrderedUdtNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.Normalizer,System.Data", "Microsoft.SqlServer.Server.Normalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.BooleanNormalizer,System.Data", "Microsoft.SqlServer.Server.BooleanNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.SByteNormalizer,System.Data", "Microsoft.SqlServer.Server.SByteNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.ByteNormalizer,System.Data", "Microsoft.SqlServer.Server.ByteNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.ShortNormalizer,System.Data", "Microsoft.SqlServer.Server.ShortNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.UShortNormalizer,System.Data", "Microsoft.SqlServer.Server.UShortNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.IntNormalizer,System.Data", "Microsoft.SqlServer.Server.IntNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.UIntNormalizer,System.Data", "Microsoft.SqlServer.Server.UIntNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.LongNormalizer,System.Data", "Microsoft.SqlServer.Server.LongNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.ULongNormalizer,System.Data", "Microsoft.SqlServer.Server.ULongNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.FloatNormalizer,System.Data", "Microsoft.SqlServer.Server.FloatNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.DoubleNormalizer,System.Data", "Microsoft.SqlServer.Server.DoubleNormalizer");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlProcedureAttribute,System.Data", "Microsoft.SqlServer.Server.SqlProcedureAttribute");
            feature.AddKnownType("Microsoft.SqlServer.Server.SerializationHelperSql9,System.Data", "Microsoft.SqlServer.Server.SerializationHelperSql9");
            feature.AddKnownType("Microsoft.SqlServer.Server.Serializer,System.Data", "Microsoft.SqlServer.Server.Serializer");
            feature.AddKnownType("Microsoft.SqlServer.Server.NormalizedSerializer,System.Data", "Microsoft.SqlServer.Server.NormalizedSerializer");
            feature.AddKnownType("Microsoft.SqlServer.Server.BinarySerializeSerializer,System.Data", "Microsoft.SqlServer.Server.BinarySerializeSerializer");
            feature.AddKnownType("Microsoft.SqlServer.Server.DummyStream,System.Data", "Microsoft.SqlServer.Server.DummyStream");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlTriggerAttribute,System.Data", "Microsoft.SqlServer.Server.SqlTriggerAttribute");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute,System.Data", "Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute");
            feature.AddKnownType("Microsoft.SqlServer.Server.Format,System.Data", "Microsoft.SqlServer.Server.Format");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute,System.Data", "Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute");
            feature.AddKnownType("Microsoft.SqlServer.Server.TriggerAction,System.Data", "Microsoft.SqlServer.Server.TriggerAction");
            feature.AddKnownType("Microsoft.SqlServer.Server.MemoryRecordBuffer,System.Data", "Microsoft.SqlServer.Server.MemoryRecordBuffer");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiPropertySelector,System.Data", "Microsoft.SqlServer.Server.SmiPropertySelector");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiMetaDataPropertyCollection,System.Data", "Microsoft.SqlServer.Server.SmiMetaDataPropertyCollection");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiMetaDataProperty,System.Data", "Microsoft.SqlServer.Server.SmiMetaDataProperty");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiUniqueKeyProperty,System.Data", "Microsoft.SqlServer.Server.SmiUniqueKeyProperty");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiOrderProperty,System.Data", "Microsoft.SqlServer.Server.SmiOrderProperty");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiOrderProperty+SmiColumnOrder,System.Data", "Microsoft.SqlServer.Server.SmiColumnOrder");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiDefaultFieldsProperty,System.Data", "Microsoft.SqlServer.Server.SmiDefaultFieldsProperty");
            feature.AddKnownType("Microsoft.SqlServer.Server.SmiTypedGetterSetter,System.Data", "Microsoft.SqlServer.Server.SmiTypedGetterSetter");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlRecordBuffer,System.Data", "Microsoft.SqlServer.Server.SqlRecordBuffer");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlRecordBuffer+StorageType,System.Data", "Microsoft.SqlServer.Server.StorageType");
            feature.AddKnownType("Microsoft.SqlServer.Server.SqlRecordBuffer+Storage,System.Data", "Microsoft.SqlServer.Server.Storage");
            feature.AddKnownType("System.Data.AcceptRejectRule", "AcceptRejectRule");
            feature.AddKnownType("System.Data.AggregateType", "AggregateType");
            feature.AddKnownType("System.Data.InternalDataCollectionBase", "InternalDataCollectionBase");
            feature.AddKnownType("System.Data.TypedDataSetGenerator", "TypedDataSetGenerator");
            feature.AddKnownType("System.Data.StrongTypingException", "StrongTypingException");
            feature.AddKnownType("System.Data.TypedDataSetGeneratorException", "TypedDataSetGeneratorException");
            feature.AddKnownType("System.Data.ColumnTypeConverter", "ColumnTypeConverter");
            feature.AddKnownType("System.Data.CommandBehavior", "CommandBehavior");
            feature.AddKnownType("System.Data.CommandType", "CommandType");
            feature.AddKnownType("System.Data.KeyRestrictionBehavior", "KeyRestrictionBehavior");
            feature.AddKnownType("System.Data.ConflictOption", "ConflictOption");
            feature.AddKnownType("System.Data.ConnectionState", "ConnectionState");
            feature.AddKnownType("System.Data.Constraint", "Constraint");
            feature.AddKnownType("System.Data.ConstraintCollection", "ConstraintCollection");
            feature.AddKnownType("System.Data.ConstraintConverter", "ConstraintConverter");
            feature.AddKnownType("System.Data.ConstraintEnumerator", "ConstraintEnumerator");
            feature.AddKnownType("System.Data.ForeignKeyConstraintEnumerator", "ForeignKeyConstraintEnumerator");
            feature.AddKnownType("System.Data.ChildForeignKeyConstraintEnumerator", "ChildForeignKeyConstraintEnumerator");
            feature.AddKnownType("System.Data.ParentForeignKeyConstraintEnumerator", "ParentForeignKeyConstraintEnumerator");
            feature.AddKnownType("System.Data.DataColumn", "DataColumn");
            feature.AddKnownType("System.Data.AutoIncrementValue", "AutoIncrementValue");
            feature.AddKnownType("System.Data.AutoIncrementInt64", "AutoIncrementInt64");
            feature.AddKnownType("System.Data.AutoIncrementBigInteger", "AutoIncrementBigInteger");
            feature.AddKnownType("System.Data.DataColumnChangeEventArgs", "DataColumnChangeEventArgs");
            feature.AddKnownType("System.Data.DataColumnCollection", "DataColumnCollection");
            feature.AddKnownType("System.Data.DataColumnPropertyDescriptor", "DataColumnPropertyDescriptor");
            feature.AddKnownType("System.Data.DataError", "DataError");
            feature.AddKnownType("System.Data.DataError+ColumnError", "ColumnError");
            feature.AddKnownType("System.Data.DataException", "DataException");
            feature.AddKnownType("System.Data.ConstraintException", "ConstraintException");
            feature.AddKnownType("System.Data.DeletedRowInaccessibleException", "DeletedRowInaccessibleException");
            feature.AddKnownType("System.Data.DuplicateNameException", "DuplicateNameException");
            feature.AddKnownType("System.Data.InRowChangingEventException", "InRowChangingEventException");
            feature.AddKnownType("System.Data.InvalidConstraintException", "InvalidConstraintException");
            feature.AddKnownType("System.Data.MissingPrimaryKeyException", "MissingPrimaryKeyException");
            feature.AddKnownType("System.Data.NoNullAllowedException", "NoNullAllowedException");
            feature.AddKnownType("System.Data.ReadOnlyException", "ReadOnlyException");
            feature.AddKnownType("System.Data.RowNotInTableException", "RowNotInTableException");
            feature.AddKnownType("System.Data.VersionNotFoundException", "VersionNotFoundException");
            feature.AddKnownType("System.Data.DataKey", "DataKey");
            feature.AddKnownType("System.Data.DataRelation", "DataRelation");
            feature.AddKnownType("System.Data.DataRelationCollection", "DataRelationCollection");
            feature.AddKnownType("System.Data.DataRelationCollection+DataTableRelationCollection", "DataTableRelationCollection");
            feature.AddKnownType("System.Data.DataRelationCollection+DataSetRelationCollection", "DataSetRelationCollection");
            feature.AddKnownType("System.Data.DataRelationPropertyDescriptor", "DataRelationPropertyDescriptor");
            feature.AddKnownType("System.Data.DataRow", "DataRow");
            feature.AddKnownType("System.Data.DataRowBuilder", "DataRowBuilder");
            feature.AddKnownType("System.Data.DataRowAction", "DataRowAction");
            feature.AddKnownType("System.Data.DataRowChangeEventArgs", "DataRowChangeEventArgs");
            feature.AddKnownType("System.Data.DataRowCollection", "DataRowCollection");
            feature.AddKnownType("System.Data.DataRowState", "DataRowState");
            feature.AddKnownType("System.Data.DataRowVersion", "DataRowVersion");
            feature.AddKnownType("System.Data.DataRowView", "DataRowView");
            feature.AddKnownType("System.Data.SerializationFormat", "SerializationFormat");
            feature.AddKnownType("System.Data.DataSet", "DataSet");
            feature.AddKnownType("System.Data.DataSetSchemaImporterExtension", "DataSetSchemaImporterExtension");
            feature.AddKnownType("System.Data.DataSetDateTime", "DataSetDateTime");
            feature.AddKnownType("System.Data.DataSysDescriptionAttribute", "DataSysDescriptionAttribute");
            feature.AddKnownType("System.Data.DataTable", "DataTable");
            feature.AddKnownType("System.Data.DataTable+RowDiffIdUsageSection", "RowDiffIdUsageSection");
            feature.AddKnownType("System.Data.DataTable+DSRowDiffIdUsageSection", "DSRowDiffIdUsageSection");
            feature.AddKnownType("System.Data.DataTableClearEventArgs", "DataTableClearEventArgs");
            feature.AddKnownType("System.Data.DataTableCollection", "DataTableCollection");
            feature.AddKnownType("System.Data.DataTableNewRowEventArgs", "DataTableNewRowEventArgs");
            feature.AddKnownType("System.Data.DataTablePropertyDescriptor", "DataTablePropertyDescriptor");
            feature.AddKnownType("System.Data.DataTableReader", "DataTableReader");
            feature.AddKnownType("System.Data.DataTableReaderListener", "DataTableReaderListener");
            feature.AddKnownType("System.Data.DataTableTypeConverter", "DataTableTypeConverter");
            feature.AddKnownType("System.Data.DataView", "DataView");
            feature.AddKnownType("System.Data.DataViewListener", "DataViewListener");
            feature.AddKnownType("System.Data.DataViewManager", "DataViewManager");
            feature.AddKnownType("System.Data.DataViewManagerListItemTypeDescriptor", "DataViewManagerListItemTypeDescriptor");
            feature.AddKnownType("System.Data.DataViewRowState", "DataViewRowState");
            feature.AddKnownType("System.Data.DataViewSetting", "DataViewSetting");
            feature.AddKnownType("System.Data.DataViewSettingCollection", "DataViewSettingCollection");
            feature.AddKnownType("System.Data.DBConcurrencyException", "DBConcurrencyException");
            feature.AddKnownType("System.Data.DbType", "DbType");
            feature.AddKnownType("System.Data.DefaultValueTypeConverter", "DefaultValueTypeConverter");
            feature.AddKnownType("System.Data.FillErrorEventArgs", "FillErrorEventArgs");
            feature.AddKnownType("System.Data.Aggregate", "Aggregate");
            feature.AddKnownType("System.Data.AggregateNode", "AggregateNode");
            feature.AddKnownType("System.Data.BinaryNode", "BinaryNode");
            feature.AddKnownType("System.Data.LikeNode", "LikeNode");
            feature.AddKnownType("System.Data.ConstNode", "ConstNode");
            feature.AddKnownType("System.Data.DataExpression", "DataExpression");
            feature.AddKnownType("System.Data.ExpressionNode", "ExpressionNode");
            feature.AddKnownType("System.Data.ValueType", "ValueType");
            feature.AddKnownType("System.Data.Nodes", "Nodes");
            feature.AddKnownType("System.Data.ExpressionParser", "ExpressionParser");
            feature.AddKnownType("System.Data.Tokens", "Tokens");
            feature.AddKnownType("System.Data.OperatorInfo", "OperatorInfo");
            feature.AddKnownType("System.Data.InvalidExpressionException", "InvalidExpressionException");
            feature.AddKnownType("System.Data.EvaluateException", "EvaluateException");
            feature.AddKnownType("System.Data.SyntaxErrorException", "SyntaxErrorException");
            feature.AddKnownType("System.Data.ExprException", "ExprException");
            feature.AddKnownType("System.Data.FunctionNode", "FunctionNode");
            feature.AddKnownType("System.Data.FunctionId", "FunctionId");
            feature.AddKnownType("System.Data.Function", "Function");
            feature.AddKnownType("System.Data.IFilter", "IFilter");
            feature.AddKnownType("System.Data.LookupNode", "LookupNode");
            feature.AddKnownType("System.Data.NameNode", "NameNode");
            feature.AddKnownType("System.Data.Operators", "Operators");
            feature.AddKnownType("System.Data.UnaryNode", "UnaryNode");
            feature.AddKnownType("System.Data.ZeroOpNode", "ZeroOpNode");
            feature.AddKnownType("System.Data.ForeignKeyConstraint", "ForeignKeyConstraint");
            feature.AddKnownType("System.Data.IColumnMapping", "IColumnMapping");
            feature.AddKnownType("System.Data.IColumnMappingCollection", "IColumnMappingCollection");
            feature.AddKnownType("System.Data.IDataAdapter", "IDataAdapter");
            feature.AddKnownType("System.Data.IDataParameter", "IDataParameter");
            feature.AddKnownType("System.Data.IDataParameterCollection", "IDataParameterCollection");
            feature.AddKnownType("System.Data.IDataReader", "IDataReader");
            feature.AddKnownType("System.Data.IDataRecord", "IDataRecord");
            feature.AddKnownType("System.Data.IDbCommand", "IDbCommand");
            feature.AddKnownType("System.Data.IDbConnection", "IDbConnection");
            feature.AddKnownType("System.Data.IDbDataAdapter", "IDbDataAdapter");
            feature.AddKnownType("System.Data.IDbDataParameter", "IDbDataParameter");
            feature.AddKnownType("System.Data.IDbTransaction", "IDbTransaction");
            feature.AddKnownType("System.Data.IsolationLevel", "IsolationLevel");
            feature.AddKnownType("System.Data.ITableMapping", "ITableMapping");
            feature.AddKnownType("System.Data.ITableMappingCollection", "ITableMappingCollection");
            feature.AddKnownType("System.Data.LoadOption", "LoadOption");
            feature.AddKnownType("System.Data.MappingType", "MappingType");
            feature.AddKnownType("System.Data.MergeFailedEventArgs", "MergeFailedEventArgs");
            feature.AddKnownType("System.Data.Merger", "Merger");
            feature.AddKnownType("System.Data.MissingMappingAction", "MissingMappingAction");
            feature.AddKnownType("System.Data.MissingSchemaAction", "MissingSchemaAction");
            feature.AddKnownType("System.Data.PropertyAttributes", "PropertyAttributes");
            feature.AddKnownType("System.Data.OperationAbortedException", "OperationAbortedException");
            feature.AddKnownType("System.Data.ParameterDirection", "ParameterDirection");
            feature.AddKnownType("System.Data.PrimaryKeyTypeConverter", "PrimaryKeyTypeConverter");
            feature.AddKnownType("System.Data.PropertyCollection", "PropertyCollection");
            feature.AddKnownType("System.Data.Range", "Range");
            feature.AddKnownType("System.Data.RBTreeError", "RBTreeError");
            feature.AddKnownType("System.Data.TreeAccessMethod", "TreeAccessMethod");
            feature.AddKnownType("System.Data.RBTree`1", "RBTree`1'1");
            feature.AddKnownType("System.Data.RBTree`1+RBTreeEnumerator", "RBTreeEnumerator'1");
            feature.AddKnownType("System.Data.RecordManager", "RecordManager");
            feature.AddKnownType("System.Data.StatementCompletedEventArgs", "StatementCompletedEventArgs");
            feature.AddKnownType("System.Data.RelatedView", "RelatedView");
            feature.AddKnownType("System.Data.RelationshipConverter", "RelationshipConverter");
            feature.AddKnownType("System.Data.Rule", "Rule");
            feature.AddKnownType("System.Data.SchemaSerializationMode", "SchemaSerializationMode");
            feature.AddKnownType("System.Data.SchemaType", "SchemaType");
            feature.AddKnownType("System.Data.Select", "Select");
            feature.AddKnownType("System.Data.IndexField", "IndexField");
            feature.AddKnownType("System.Data.Index", "Index");
            feature.AddKnownType("System.Data.Listeners`1", "Listeners`1'1");
            feature.AddKnownType("System.Data.SimpleType", "SimpleType");
            feature.AddKnownType("System.Data.LocalDBInstanceElement", "LocalDBInstanceElement");
            feature.AddKnownType("System.Data.LocalDBInstancesCollection", "LocalDBInstancesCollection");
            feature.AddKnownType("System.Data.LocalDBConfigurationSection", "LocalDBConfigurationSection");
            feature.AddKnownType("System.Data.SqlDbType", "SqlDbType");
            feature.AddKnownType("System.Data.StateChangeEventArgs", "StateChangeEventArgs");
            feature.AddKnownType("System.Data.StatementType", "StatementType");
            feature.AddKnownType("System.Data.UniqueConstraint", "UniqueConstraint");
            feature.AddKnownType("System.Data.UpdateRowSource", "UpdateRowSource");
            feature.AddKnownType("System.Data.UpdateStatus", "UpdateStatus");
            feature.AddKnownType("System.Data.XDRSchema", "XDRSchema");
            feature.AddKnownType("System.Data.XmlDataLoader", "XmlDataLoader");
            feature.AddKnownType("System.Data.XMLDiffLoader", "XMLDiffLoader");
            feature.AddKnownType("System.Data.Keywords", "Keywords");
            feature.AddKnownType("System.Data.XmlReadMode", "XmlReadMode");
            feature.AddKnownType("System.Data.SchemaFormat", "SchemaFormat");
            feature.AddKnownType("System.Data.XmlTreeGen", "XmlTreeGen");
            feature.AddKnownType("System.Data.NewDiffgramGen", "NewDiffgramGen");
            feature.AddKnownType("System.Data.XmlDataTreeWriter", "XmlDataTreeWriter");
            feature.AddKnownType("System.Data.DataTextWriter", "DataTextWriter");
            feature.AddKnownType("System.Data.DataTextReader", "DataTextReader");
            feature.AddKnownType("System.Data.XMLSchema", "XMLSchema");
            feature.AddKnownType("System.Data.ConstraintTable", "ConstraintTable");
            feature.AddKnownType("System.Data.XSDSchema", "XSDSchema");
            feature.AddKnownType("System.Data.XmlIgnoreNamespaceReader", "XmlIgnoreNamespaceReader");
            feature.AddKnownType("System.Data.XmlToDatasetMap", "XmlToDatasetMap");
            feature.AddKnownType("System.Data.XmlToDatasetMap+XmlNodeIdHashtable", "XmlNodeIdHashtable");
            feature.AddKnownType("System.Data.XmlWriteMode", "XmlWriteMode");
            feature.AddKnownType("System.Data.SqlEventSource", "SqlEventSource");
            feature.AddKnownType("System.Data.ResDescriptionAttribute", "ResDescriptionAttribute");
            feature.AddKnownType("System.Data.ResCategoryAttribute", "ResCategoryAttribute");
            feature.AddKnownType("System.Data.Res", "Res");
            feature.AddKnownType("System.Data.Common.CatalogLocation", "CatalogLocation");
            feature.AddKnownType("System.Data.Common.ADP+ConnectionError", "ConnectionError");
            feature.AddKnownType("System.Data.Common.ADP+InternalErrorCode", "InternalErrorCode");
            feature.AddKnownType("System.Data.Common.BooleanStorage", "BooleanStorage");
            feature.AddKnownType("System.Data.Common.ByteStorage", "ByteStorage");
            feature.AddKnownType("System.Data.Common.CharStorage", "CharStorage");
            feature.AddKnownType("System.Data.Common.DataAdapter", "DataAdapter");
            feature.AddKnownType("System.Data.Common.LoadAdapter", "LoadAdapter");
            feature.AddKnownType("System.Data.Common.DataColumnMapping", "DataColumnMapping");
            feature.AddKnownType("System.Data.Common.DataColumnMapping+DataColumnMappingConverter", "DataColumnMappingConverter");
            feature.AddKnownType("System.Data.Common.DataColumnMappingCollection", "DataColumnMappingCollection");
            feature.AddKnownType("System.Data.Common.StorageType", "StorageType");
            feature.AddKnownType("System.Data.Common.DataStorage", "DataStorage");
            feature.AddKnownType("System.Data.Common.DataTableMapping", "DataTableMapping");
            feature.AddKnownType("System.Data.Common.DataTableMapping+DataTableMappingConverter", "DataTableMappingConverter");
            feature.AddKnownType("System.Data.Common.DataTableMappingCollection", "DataTableMappingCollection");
            feature.AddKnownType("System.Data.Common.DateTimeStorage", "DateTimeStorage");
            feature.AddKnownType("System.Data.Common.DbCommand", "DbCommand");
            feature.AddKnownType("System.Data.Common.DbColumn", "DbColumn");
            feature.AddKnownType("System.Data.Common.IDbColumnSchemaGenerator", "IDbColumnSchemaGenerator");
            feature.AddKnownType("System.Data.Common.DbCommandBuilder", "DbCommandBuilder");
            feature.AddKnownType("System.Data.Common.DbConnection", "DbConnection");
            feature.AddKnownType("System.Data.Common.DbConnectionOptions", "DbConnectionOptions");
            feature.AddKnownType("System.Data.Common.DBConnectionString", "DBConnectionString");
            feature.AddKnownType("System.Data.Common.DbConnectionPoolKey", "DbConnectionPoolKey");
            feature.AddKnownType("System.Data.Common.DbConnectionStringBuilder", "DbConnectionStringBuilder");
            feature.AddKnownType("System.Data.Common.DbConnectionStringBuilderDescriptor", "DbConnectionStringBuilderDescriptor");
            feature.AddKnownType("System.Data.Common.ReadOnlyCollection`1", "ReadOnlyCollection`1'1");
            feature.AddKnownType("System.Data.Common.ReadOnlyCollection`1+Enumerator`1", "Enumerator`1'2");
            feature.AddKnownType("System.Data.Common.DbDataAdapter", "DbDataAdapter");
            feature.AddKnownType("System.Data.Common.DBDataPermission", "DBDataPermission");
            feature.AddKnownType("System.Data.Common.DBDataPermissionAttribute", "DBDataPermissionAttribute");
            feature.AddKnownType("System.Data.Common.DbDataReader", "DbDataReader");
            feature.AddKnownType("System.Data.Common.DbDataRecord", "DbDataRecord");
            feature.AddKnownType("System.Data.Common.DbDataSourceEnumerator", "DbDataSourceEnumerator");
            feature.AddKnownType("System.Data.Common.DbEnumerator", "DbEnumerator");
            feature.AddKnownType("System.Data.Common.DbException", "DbException");
            feature.AddKnownType("System.Data.Common.DbParameter", "DbParameter");
            feature.AddKnownType("System.Data.Common.DbParameterCollection", "DbParameterCollection");
            feature.AddKnownType("System.Data.Common.DbProviderConfigurationHandler", "DbProviderConfigurationHandler");
            feature.AddKnownType("System.Data.Common.DbProviderFactoryConfigSection", "DbProviderFactoryConfigSection");
            feature.AddKnownType("System.Data.Common.DbProviderFactoriesConfigurationHandler", "DbProviderFactoriesConfigurationHandler");
            feature.AddKnownType("System.Data.Common.DbProviderFactory", "DbProviderFactory");
            feature.AddKnownType("System.Data.Common.DbProviderSpecificTypePropertyAttribute", "DbProviderSpecificTypePropertyAttribute");
            feature.AddKnownType("System.Data.Common.DbSchemaRow", "DbSchemaRow");
            feature.AddKnownType("System.Data.Common.DbSchemaTable", "DbSchemaTable");
            feature.AddKnownType("System.Data.Common.DbTransaction", "DbTransaction");
            feature.AddKnownType("System.Data.Common.DecimalStorage", "DecimalStorage");
            feature.AddKnownType("System.Data.Common.DoubleStorage", "DoubleStorage");
            feature.AddKnownType("System.Data.Common.GroupByBehavior", "GroupByBehavior");
            feature.AddKnownType("System.Data.Common.IdentifierCase", "IdentifierCase");
            feature.AddKnownType("System.Data.Common.Int16Storage", "Int16Storage");
            feature.AddKnownType("System.Data.Common.Int32Storage", "Int32Storage");
            feature.AddKnownType("System.Data.Common.Int64Storage", "Int64Storage");
            feature.AddKnownType("System.Data.Common.MultipartIdentifier", "MultipartIdentifier");
            feature.AddKnownType("System.Data.Common.NameValuePair", "NameValuePair");
            feature.AddKnownType("System.Data.Common.NameValuePermission", "NameValuePermission");
            feature.AddKnownType("System.Data.Common.NativeMethods+ISourcesRowset", "ISourcesRowset");
            feature.AddKnownType("System.Data.Common.NativeMethods+ITransactionJoin", "ITransactionJoin");
            feature.AddKnownType("System.Data.Common.ObjectStorage", "ObjectStorage");
            feature.AddKnownType("System.Data.Common.RowUpdatedEventArgs", "RowUpdatedEventArgs");
            feature.AddKnownType("System.Data.Common.RowUpdatingEventArgs", "RowUpdatingEventArgs");
            feature.AddKnownType("System.Data.Common.SafeNativeMethods+Wrapper", "Wrapper");
            feature.AddKnownType("System.Data.Common.SByteStorage", "SByteStorage");
            feature.AddKnownType("System.Data.Common.SingleStorage", "SingleStorage");
            feature.AddKnownType("System.Data.Common.SqlBinaryStorage", "SqlBinaryStorage");
            feature.AddKnownType("System.Data.Common.SqlBooleanStorage", "SqlBooleanStorage");
            feature.AddKnownType("System.Data.Common.SqlBytesStorage", "SqlBytesStorage");
            feature.AddKnownType("System.Data.Common.SqlByteStorage", "SqlByteStorage");
            feature.AddKnownType("System.Data.Common.SqlCharsStorage", "SqlCharsStorage");
            feature.AddKnownType("System.Data.Common.SqlDateTimeStorage", "SqlDateTimeStorage");
            feature.AddKnownType("System.Data.Common.SqlDecimalStorage", "SqlDecimalStorage");
            feature.AddKnownType("System.Data.Common.SqlDoubleStorage", "SqlDoubleStorage");
            feature.AddKnownType("System.Data.Common.SqlGuidStorage", "SqlGuidStorage");
            feature.AddKnownType("System.Data.Common.SqlInt16Storage", "SqlInt16Storage");
            feature.AddKnownType("System.Data.Common.SqlInt32Storage", "SqlInt32Storage");
            feature.AddKnownType("System.Data.Common.SqlInt64Storage", "SqlInt64Storage");
            feature.AddKnownType("System.Data.Common.SqlMoneyStorage", "SqlMoneyStorage");
            feature.AddKnownType("System.Data.Common.SqlSingleStorage", "SqlSingleStorage");
            feature.AddKnownType("System.Data.Common.SqlStringStorage", "SqlStringStorage");
            feature.AddKnownType("System.Data.Common.SqlUdtStorage", "SqlUdtStorage");
            feature.AddKnownType("System.Data.Common.SqlXmlStorage", "SqlXmlStorage");
            feature.AddKnownType("System.Data.Common.StringStorage", "StringStorage");
            feature.AddKnownType("System.Data.Common.SupportedJoinOperators", "SupportedJoinOperators");
            feature.AddKnownType("System.Data.Common.TimeSpanStorage", "TimeSpanStorage");
            feature.AddKnownType("System.Data.Common.UInt16Storage", "UInt16Storage");
            feature.AddKnownType("System.Data.Common.UInt32Storage", "UInt32Storage");
            feature.AddKnownType("System.Data.Common.UInt64Storage", "UInt64Storage");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ADORecordConstruction", "ADORecordConstruction");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ADORecordsetConstruction", "ADORecordsetConstruction");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+Recordset15", "Recordset15");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+_ADORecord", "_ADORecord");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IAccessor", "IAccessor");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IChapteredRowset", "IChapteredRowset");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IColumnsInfo", "IColumnsInfo");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IColumnsRowset", "IColumnsRowset");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ICommandPrepare", "ICommandPrepare");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ICommandProperties", "ICommandProperties");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ICommandText", "ICommandText");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ICommandWithParameters", "ICommandWithParameters");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IDataInitialize", "IDataInitialize");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IDBInfo", "IDBInfo");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IDBProperties", "IDBProperties");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IDBSchemaRowset", "IDBSchemaRowset");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IErrorInfo", "IErrorInfo");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IErrorRecords", "IErrorRecords");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IMultipleResults", "IMultipleResults");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IOpenRowset", "IOpenRowset");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IRow", "IRow");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IRowset", "IRowset");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+IRowsetInfo", "IRowsetInfo");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ISQLErrorInfo", "ISQLErrorInfo");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+ITransactionLocal", "ITransactionLocal");
            feature.AddKnownType("System.Data.Common.UnsafeNativeMethods+Trustee", "Trustee");
            feature.AddKnownType("System.Data.Common.DataRecordInternal", "DataRecordInternal");
            feature.AddKnownType("System.Data.Common.SchemaInfo", "SchemaInfo");
            feature.AddKnownType("System.Data.Common.BigIntegerStorage", "BigIntegerStorage");
            feature.AddKnownType("System.Data.Common.DateTimeOffsetStorage", "DateTimeOffsetStorage");
            feature.AddKnownType("System.Data.Common.ActivityCorrelator+ActivityId", "ActivityId");
            feature.AddKnownType("System.Data.Odbc.DbSchemaInfo", "DbSchemaInfo");
            feature.AddKnownType("System.Data.Odbc.DbCache", "DbCache");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_HANDLE", "SQL_HANDLE");
            feature.AddKnownType("System.Data.Odbc.ODBC32+RETCODE", "ODBC32.RETCODE");
            feature.AddKnownType("System.Data.Odbc.ODBC32+RetCode", "RetCode");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_CONVERT", "SQL_CONVERT");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_CVT", "SQL_CVT");
            feature.AddKnownType("System.Data.Odbc.ODBC32+STMT", "STMT");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_IS", "SQL_IS");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_TRANSACTION", "SQL_TRANSACTION");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_PARAM", "SQL_PARAM");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_API", "SQL_API");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_DESC", "SQL_DESC");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_COLUMN", "SQL_COLUMN");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_SPECIALCOLS", "SQL_SPECIALCOLS");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_SCOPE", "SQL_SCOPE");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_NULLABILITY", "SQL_NULLABILITY");
            feature.AddKnownType("System.Data.Odbc.ODBC32+HANDLER", "HANDLER");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_C", "SQL_C");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_TYPE", "SQL_TYPE");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_ATTR", "SQL_ATTR");
            feature.AddKnownType("System.Data.Odbc.ODBC32+SQL_INFO", "SQL_INFO");
            feature.AddKnownType("System.Data.Odbc.TypeMap", "TypeMap");
            feature.AddKnownType("System.Data.Odbc.OdbcCommand", "OdbcCommand");
            feature.AddKnownType("System.Data.Odbc.CMDWrapper", "CMDWrapper");
            feature.AddKnownType("System.Data.Odbc.OdbcCommandBuilder", "OdbcCommandBuilder");
            feature.AddKnownType("System.Data.Odbc.OdbcConnection", "OdbcConnection");
            feature.AddKnownType("System.Data.Odbc.OdbcConnectionFactory", "OdbcConnectionFactory");
            feature.AddKnownType("System.Data.Odbc.OdbcConnectionHandle", "OdbcConnectionHandle");
            feature.AddKnownType("System.Data.Odbc.OdbcConnectionOpen", "OdbcConnectionOpen");
            feature.AddKnownType("System.Data.Odbc.OdbcConnectionPoolGroupProviderInfo", "OdbcConnectionPoolGroupProviderInfo");
            feature.AddKnownType("System.Data.Odbc.OdbcConnectionString", "OdbcConnectionString");
            feature.AddKnownType("System.Data.Odbc.OdbcConnectionStringBuilder", "OdbcConnectionStringBuilder");
            feature.AddKnownType("System.Data.Odbc.OdbcConnectionStringBuilder+OdbcConnectionStringBuilderConverter", "OdbcConnectionStringBuilderConverter");
            feature.AddKnownType("System.Data.Odbc.OdbcDataAdapter", "OdbcDataAdapter");
            feature.AddKnownType("System.Data.Odbc.OdbcDataReader", "OdbcDataReader");
            feature.AddKnownType("System.Data.Odbc.OdbcDataReader+QualifiedTableName", "QualifiedTableName");
            feature.AddKnownType("System.Data.Odbc.OdbcEnvironment", "OdbcEnvironment");
            feature.AddKnownType("System.Data.Odbc.OdbcEnvironmentHandle", "OdbcEnvironmentHandle");
            feature.AddKnownType("System.Data.Odbc.OdbcError", "OdbcError");
            feature.AddKnownType("System.Data.Odbc.OdbcErrorCollection", "OdbcErrorCollection");
            feature.AddKnownType("System.Data.Odbc.OdbcException", "OdbcException");
            feature.AddKnownType("System.Data.Odbc.OdbcFactory", "OdbcFactory");
            feature.AddKnownType("System.Data.Odbc.OdbcHandle", "OdbcHandle");
            feature.AddKnownType("System.Data.Odbc.OdbcDescriptorHandle", "OdbcDescriptorHandle");
            feature.AddKnownType("System.Data.Odbc.OdbcInfoMessageEventArgs", "OdbcInfoMessageEventArgs");
            feature.AddKnownType("System.Data.Odbc.OdbcMetaDataFactory", "OdbcMetaDataFactory");
            feature.AddKnownType("System.Data.Odbc.OdbcParameter", "OdbcParameter");
            feature.AddKnownType("System.Data.Odbc.OdbcParameter+OdbcParameterConverter", "OdbcParameterConverter");
            feature.AddKnownType("System.Data.Odbc.OdbcParameterCollection", "OdbcParameterCollection");
            feature.AddKnownType("System.Data.Odbc.OdbcPermission", "OdbcPermission");
            feature.AddKnownType("System.Data.Odbc.OdbcPermissionAttribute", "OdbcPermissionAttribute");
            feature.AddKnownType("System.Data.Odbc.OdbcReferenceCollection", "OdbcReferenceCollection");
            feature.AddKnownType("System.Data.Odbc.OdbcRowUpdatingEventArgs", "OdbcRowUpdatingEventArgs");
            feature.AddKnownType("System.Data.Odbc.OdbcRowUpdatedEventArgs", "OdbcRowUpdatedEventArgs");
            feature.AddKnownType("System.Data.Odbc.SQLLEN", "SQLLEN");
            feature.AddKnownType("System.Data.Odbc.OdbcStatementHandle", "OdbcStatementHandle");
            feature.AddKnownType("System.Data.Odbc.OdbcTransaction", "OdbcTransaction");
            feature.AddKnownType("System.Data.Odbc.OdbcType", "OdbcType");
            feature.AddKnownType("System.Data.Odbc.CNativeBuffer", "CNativeBuffer");
            feature.AddKnownType("System.Data.Odbc.CStringTokenizer", "CStringTokenizer");
            feature.AddKnownType("System.Data.OleDb.ColumnBinding", "ColumnBinding");
            feature.AddKnownType("System.Data.OleDb.Bindings", "Bindings");
            feature.AddKnownType("System.Data.OleDb.DBPropSet", "DBPropSet");
            feature.AddKnownType("System.Data.OleDb.OleDbCommand", "OleDbCommand");
            feature.AddKnownType("System.Data.OleDb.OleDbCommandBuilder", "OleDbCommandBuilder");
            feature.AddKnownType("System.Data.OleDb.OleDbConnection", "OleDbConnection");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionFactory", "OleDbConnectionFactory");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionInternal", "OleDbConnectionInternal");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionPoolGroupProviderInfo", "OleDbConnectionPoolGroupProviderInfo");
            feature.AddKnownType("System.Data.OleDb.SchemaSupport", "SchemaSupport");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionString", "OleDbConnectionString");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionStringBuilder", "OleDbConnectionStringBuilder");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionStringBuilder+OleDbProviderConverter", "OleDbProviderConverter");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionStringBuilder+OleDbServiceValues", "OleDbServiceValues");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionStringBuilder+OleDbServicesConverter", "OleDbServicesConverter");
            feature.AddKnownType("System.Data.OleDb.OleDbConnectionStringBuilder+OleDbConnectionStringBuilderConverter", "OleDbConnectionStringBuilderConverter");
            feature.AddKnownType("System.Data.OleDb.OleDbDataAdapter", "OleDbDataAdapter");
            feature.AddKnownType("System.Data.OleDb.OleDbDataReader", "OleDbDataReader");
            feature.AddKnownType("System.Data.OleDb.MetaData", "MetaData");
            feature.AddKnownType("System.Data.OleDb.OleDbEnumerator", "OleDbEnumerator");
            feature.AddKnownType("System.Data.OleDb.OleDbError", "OleDbError");
            feature.AddKnownType("System.Data.OleDb.OleDbErrorCollection", "OleDbErrorCollection");
            feature.AddKnownType("System.Data.OleDb.OleDbException", "OleDbException");
            feature.AddKnownType("System.Data.OleDb.OleDbException+ErrorCodeConverter", "ErrorCodeConverter");
            feature.AddKnownType("System.Data.OleDb.OleDbFactory", "OleDbFactory");
            feature.AddKnownType("System.Data.OleDb.OleDbHResult", "OleDbHResult");
            feature.AddKnownType("System.Data.OleDb.OleDbInfoMessageEventArgs", "OleDbInfoMessageEventArgs");
            feature.AddKnownType("System.Data.OleDb.OleDbLiteral", "OleDbLiteral");
            feature.AddKnownType("System.Data.OleDb.OleDbMetaDataFactory", "OleDbMetaDataFactory");
            feature.AddKnownType("System.Data.OleDb.OleDbParameter", "OleDbParameter");
            feature.AddKnownType("System.Data.OleDb.OleDbParameter+OleDbParameterConverter", "OleDbParameterConverter");
            feature.AddKnownType("System.Data.OleDb.OleDbParameterCollection", "OleDbParameterCollection");
            feature.AddKnownType("System.Data.OleDb.OleDbPermission", "OleDbPermission");
            feature.AddKnownType("System.Data.OleDb.OleDbPermissionAttribute", "OleDbPermissionAttribute");
            feature.AddKnownType("System.Data.OleDb.OleDbPropertySetGuid", "OleDbPropertySetGuid");
            feature.AddKnownType("System.Data.OleDb.OleDbPropertyStatus", "OleDbPropertyStatus");
            feature.AddKnownType("System.Data.OleDb.OleDbReferenceCollection", "OleDbReferenceCollection");
            feature.AddKnownType("System.Data.OleDb.OleDbRowUpdatedEventArgs", "OleDbRowUpdatedEventArgs");
            feature.AddKnownType("System.Data.OleDb.OleDbRowUpdatingEventArgs", "OleDbRowUpdatingEventArgs");
            feature.AddKnownType("System.Data.OleDb.OleDbSchemaGuid", "OleDbSchemaGuid");
            feature.AddKnownType("System.Data.OleDb.DBBindStatus", "DBBindStatus");
            feature.AddKnownType("System.Data.OleDb.tagDBPARAMBINDINFO", "tagDBPARAMBINDINFO");
            feature.AddKnownType("System.Data.OleDb.tagDBBINDING", "tagDBBINDING");
            feature.AddKnownType("System.Data.OleDb.tagDBCOLUMNACCESS", "tagDBCOLUMNACCESS");
            feature.AddKnownType("System.Data.OleDb.tagDBIDX", "tagDBIDX");
            feature.AddKnownType("System.Data.OleDb.tagDBID", "tagDBID");
            feature.AddKnownType("System.Data.OleDb.tagDBLITERALINFO", "tagDBLITERALINFO");
            feature.AddKnownType("System.Data.OleDb.tagDBPROPSET", "tagDBPROPSET");
            feature.AddKnownType("System.Data.OleDb.tagDBPROP", "tagDBPROP");
            feature.AddKnownType("System.Data.OleDb.tagDBPARAMS", "tagDBPARAMS");
            feature.AddKnownType("System.Data.OleDb.tagDBCOLUMNINFO", "tagDBCOLUMNINFO");
            feature.AddKnownType("System.Data.OleDb.tagDBPROPINFOSET", "tagDBPROPINFOSET");
            feature.AddKnownType("System.Data.OleDb.tagDBPROPINFO", "tagDBPROPINFO");
            feature.AddKnownType("System.Data.OleDb.tagDBPROPIDSET", "tagDBPROPIDSET");
            feature.AddKnownType("System.Data.OleDb.OleDbTransaction", "OleDbTransaction");
            feature.AddKnownType("System.Data.OleDb.OleDbType", "OleDbType");
            feature.AddKnownType("System.Data.OleDb.OleDbServicesWrapper", "OleDbServicesWrapper");
            feature.AddKnownType("System.Data.OleDb.DataSourceWrapper", "DataSourceWrapper");
            feature.AddKnownType("System.Data.OleDb.SessionWrapper", "SessionWrapper");
            feature.AddKnownType("System.Data.OleDb.IDBInfoWrapper", "IDBInfoWrapper");
            feature.AddKnownType("System.Data.OleDb.IDBPropertiesWrapper", "IDBPropertiesWrapper");
            feature.AddKnownType("System.Data.OleDb.IDBSchemaRowsetWrapper", "IDBSchemaRowsetWrapper");
            feature.AddKnownType("System.Data.OleDb.IOpenRowsetWrapper", "IOpenRowsetWrapper");
            feature.AddKnownType("System.Data.OleDb.ITransactionJoinWrapper", "ITransactionJoinWrapper");
            feature.AddKnownType("System.Data.OleDb.DBStatus", "DBStatus");
            feature.AddKnownType("System.Data.OleDb.NativeDBType", "NativeDBType");
            feature.AddKnownType("System.Data.OleDb.PropertyIDSet", "PropertyIDSet");
            feature.AddKnownType("System.Data.OleDb.OleDbPropertyInfo", "OleDbPropertyInfo");
            feature.AddKnownType("System.Data.OleDb.PropertyInfoSet", "PropertyInfoSet");
            feature.AddKnownType("System.Data.OleDb.RowBinding", "RowBinding");
            feature.AddKnownType("System.Data.OleDb.DualCoTaskMem", "DualCoTaskMem");
            feature.AddKnownType("System.Data.OleDb.RowHandleBuffer", "RowHandleBuffer");
            feature.AddKnownType("System.Data.OleDb.StringMemHandle", "StringMemHandle");
            feature.AddKnownType("System.Data.OleDb.ChapterHandle", "ChapterHandle");
            feature.AddKnownType("System.Data.ProviderBase.FieldNameLookup", "FieldNameLookup");
            feature.AddKnownType("System.Data.ProviderBase.DataReaderContainer", "DataReaderContainer");
            feature.AddKnownType("System.Data.ProviderBase.DbBuffer", "DbBuffer");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionClosed", "DbConnectionClosed");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionBusy", "DbConnectionBusy");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionClosedBusy", "DbConnectionClosedBusy");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionOpenBusy", "DbConnectionOpenBusy");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionClosedConnecting", "DbConnectionClosedConnecting");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionClosedNeverOpened", "DbConnectionClosedNeverOpened");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionClosedPreviouslyOpened", "DbConnectionClosedPreviouslyOpened");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionFactory", "DbConnectionFactory");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionInternal", "DbConnectionInternal");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPool", "DbConnectionPool");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolAuthenticationContext", "DbConnectionPoolAuthenticationContext");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolAuthenticationContextKey", "DbConnectionPoolAuthenticationContextKey");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolCounters", "DbConnectionPoolCounters");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolCounters+Counter", "Counter");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolCountersNoCounters", "DbConnectionPoolCountersNoCounters");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolGroup", "DbConnectionPoolGroup");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolGroupProviderInfo", "DbConnectionPoolGroupProviderInfo");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolIdentity", "DbConnectionPoolIdentity");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolGroupOptions", "DbConnectionPoolGroupOptions");
            feature.AddKnownType("System.Data.ProviderBase.DbConnectionPoolProviderInfo", "DbConnectionPoolProviderInfo");
            feature.AddKnownType("System.Data.ProviderBase.DbMetaDataFactory", "DbMetaDataFactory");
            feature.AddKnownType("System.Data.ProviderBase.DbReferenceCollection", "DbReferenceCollection");
            feature.AddKnownType("System.Data.ProviderBase.SchemaMapping", "SchemaMapping");
            feature.AddKnownType("System.Data.ProviderBase.WrappedIUnknown", "WrappedIUnknown");
            feature.AddKnownType("System.Data.ProviderBase.TimeoutTimer", "TimeoutTimer");
            feature.AddKnownType("System.Data.Sql.SqlDataSourceEnumerator", "SqlDataSourceEnumerator");
            feature.AddKnownType("System.Data.Sql.SqlGenericUtil", "SqlGenericUtil");
            feature.AddKnownType("System.Data.Sql.SqlNotificationRequest", "SqlNotificationRequest");
            feature.AddKnownType("System.Data.SqlClient.SqlClientEncryptionAlgorithmFactoryList", "SqlClientEncryptionAlgorithmFactoryList");
            feature.AddKnownType("System.Data.SqlClient.SqlSymmetricKeyCache", "SqlSymmetricKeyCache");
            feature.AddKnownType("System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider", "SqlColumnEncryptionKeyStoreProvider");
            feature.AddKnownType("System.Data.SqlClient.ColumnMasterKeyMetadataSignatureVerificationCache", "ColumnMasterKeyMetadataSignatureVerificationCache");
            feature.AddKnownType("System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider", "SqlColumnEncryptionCertificateStoreProvider");
            feature.AddKnownType("System.Data.SqlClient.SqlColumnEncryptionCngProvider", "SqlColumnEncryptionCngProvider");
            feature.AddKnownType("System.Data.SqlClient.SqlColumnEncryptionCspProvider", "SqlColumnEncryptionCspProvider");
            feature.AddKnownType("System.Data.SqlClient.SqlAeadAes256CbcHmac256Algorithm", "SqlAeadAes256CbcHmac256Algorithm");
            feature.AddKnownType("System.Data.SqlClient.SqlAeadAes256CbcHmac256Factory", "SqlAeadAes256CbcHmac256Factory");
            feature.AddKnownType("System.Data.SqlClient.SqlAeadAes256CbcHmac256EncryptionKey", "SqlAeadAes256CbcHmac256EncryptionKey");
            feature.AddKnownType("System.Data.SqlClient.SqlAes256CbcAlgorithm", "SqlAes256CbcAlgorithm");
            feature.AddKnownType("System.Data.SqlClient.SqlAes256CbcFactory", "SqlAes256CbcFactory");
            feature.AddKnownType("System.Data.SqlClient.SqlClientEncryptionAlgorithm", "SqlClientEncryptionAlgorithm");
            feature.AddKnownType("System.Data.SqlClient.SqlClientEncryptionAlgorithmFactory", "SqlClientEncryptionAlgorithmFactory");
            feature.AddKnownType("System.Data.SqlClient.SqlClientEncryptionType", "SqlClientEncryptionType");
            feature.AddKnownType("System.Data.SqlClient.SqlClientSymmetricKey", "SqlClientSymmetricKey");
            feature.AddKnownType("System.Data.SqlClient.SqlQueryMetadataCache", "SqlQueryMetadataCache");
            feature.AddKnownType("System.Data.SqlClient.ApplicationIntent", "ApplicationIntent");
            feature.AddKnownType("System.Data.SqlClient.SqlCredential", "SqlCredential");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionPoolKey", "SqlConnectionPoolKey");
            feature.AddKnownType("System.Data.SqlClient.AssemblyCache", "AssemblyCache");
            feature.AddKnownType("System.Data.SqlClient.SqlRowsCopiedEventArgs", "SqlRowsCopiedEventArgs");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer", "SqlBuffer");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer+StorageType", "StorageType");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer+DateTimeInfo", "DateTimeInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer+NumericInfo", "NumericInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer+TimeInfo", "TimeInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer+DateTime2Info", "DateTime2Info");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer+DateTimeOffsetInfo", "DateTimeOffsetInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlBuffer+Storage", "Storage");
            feature.AddKnownType("System.Data.SqlClient._ColumnMapping", "_ColumnMapping");
            feature.AddKnownType("System.Data.SqlClient.Row", "Row");
            feature.AddKnownType("System.Data.SqlClient.Result", "Result");
            feature.AddKnownType("System.Data.SqlClient.BulkCopySimpleResultSet", "BulkCopySimpleResultSet");
            feature.AddKnownType("System.Data.SqlClient.SqlBulkCopy", "SqlBulkCopy");
            feature.AddKnownType("System.Data.SqlClient.SqlBulkCopyColumnMapping", "SqlBulkCopyColumnMapping");
            feature.AddKnownType("System.Data.SqlClient.SqlBulkCopyColumnMappingCollection", "SqlBulkCopyColumnMappingCollection");
            feature.AddKnownType("System.Data.SqlClient.SqlBulkCopyOptions", "SqlBulkCopyOptions");
            feature.AddKnownType("System.Data.SqlClient.SqlCachedBuffer", "SqlCachedBuffer");
            feature.AddKnownType("System.Data.SqlClient.SqlClientFactory", "SqlClientFactory");
            feature.AddKnownType("System.Data.SqlClient.SqlClientPermission", "SqlClientPermission");
            feature.AddKnownType("System.Data.SqlClient.SqlClientPermissionAttribute", "SqlClientPermissionAttribute");
            feature.AddKnownType("System.Data.SqlClient.SqlCommand", "SqlCommand");
            feature.AddKnownType("System.Data.SqlClient.SqlCommandBuilder", "SqlCommandBuilder");
            feature.AddKnownType("System.Data.SqlClient.SqlCommandSet", "SqlCommandSet");
            feature.AddKnownType("System.Data.SqlClient.SqlConnection", "SqlConnection");
            feature.AddKnownType("System.Data.SqlClient.SQLDebugging", "SQLDebugging");
            feature.AddKnownType("System.Data.SqlClient.ISQLDebug", "ISQLDebug");
            feature.AddKnownType("System.Data.SqlClient.SqlDebugContext", "SqlDebugContext");
            feature.AddKnownType("System.Data.SqlClient.MEMMAP", "MEMMAP");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionFactory", "SqlConnectionFactory");
            feature.AddKnownType("System.Data.SqlClient.SqlPerformanceCounters", "SqlPerformanceCounters");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionPoolGroupProviderInfo", "SqlConnectionPoolGroupProviderInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionPoolProviderInfo", "SqlConnectionPoolProviderInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionString", "SqlConnectionString");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionString+TypeSystem", "TypeSystem");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionString+TransactionBindingEnum", "TransactionBindingEnum");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionStringBuilder", "SqlConnectionStringBuilder");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionStringBuilder+NetworkLibraryConverter", "NetworkLibraryConverter");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionStringBuilder+SqlDataSourceConverter", "SqlDataSourceConverter");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionStringBuilder+SqlInitialCatalogConverter", "SqlInitialCatalogConverter");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionStringBuilder+SqlConnectionStringBuilderConverter", "SqlConnectionStringBuilderConverter");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionTimeoutErrorPhase", "SqlConnectionTimeoutErrorPhase");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionInternalSourceType", "SqlConnectionInternalSourceType");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionTimeoutPhaseDuration", "SqlConnectionTimeoutPhaseDuration");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionTimeoutErrorInternal", "SqlConnectionTimeoutErrorInternal");
            feature.AddKnownType("System.Data.SqlClient.SqlDataAdapter", "SqlDataAdapter");
            feature.AddKnownType("System.Data.SqlClient.SqlDataReader", "SqlDataReader");
            feature.AddKnownType("System.Data.SqlClient.SqlDataReader+SharedState", "SharedState");
            feature.AddKnownType("System.Data.SqlClient.SqlDataReaderSmi", "SqlDataReaderSmi");
            feature.AddKnownType("System.Data.SqlClient.SqlDataReaderSmi+PositionState", "PositionState");
            feature.AddKnownType("System.Data.SqlClient.SqlDelegatedTransaction", "SqlDelegatedTransaction");
            feature.AddKnownType("System.Data.SqlClient.SqlDependency", "SqlDependency");
            feature.AddKnownType("System.Data.SqlClient.SqlDependency+IdentityUserNamePair", "IdentityUserNamePair");
            feature.AddKnownType("System.Data.SqlClient.SqlDependency+EventContextPair", "EventContextPair");
            feature.AddKnownType("System.Data.SqlClient.SqlDependencyPerAppDomainDispatcher", "SqlDependencyPerAppDomainDispatcher");
            feature.AddKnownType("System.Data.SqlClient.SqlNotification", "SqlNotification");
            feature.AddKnownType("System.Data.SqlClient.MetaType", "MetaType");
            feature.AddKnownType("System.Data.SqlClient.TdsDateTime", "TdsDateTime");
            feature.AddKnownType("System.Data.SqlClient.SqlError", "SqlError");
            feature.AddKnownType("System.Data.SqlClient.SqlErrorCollection", "SqlErrorCollection");
            feature.AddKnownType("System.Data.SqlClient.SqlException", "SqlException");
            feature.AddKnownType("System.Data.SqlClient.SqlInfoMessageEventArgs", "SqlInfoMessageEventArgs");
            feature.AddKnownType("System.Data.SqlClient.SqlInternalConnection", "SqlInternalConnection");
            feature.AddKnownType("System.Data.SqlClient.SqlInternalConnection+TransactionRequest", "TransactionRequest");
            feature.AddKnownType("System.Data.SqlClient.SqlInternalConnectionSmi", "SqlInternalConnectionSmi");
            feature.AddKnownType("System.Data.SqlClient.SessionStateRecord", "SessionStateRecord");
            feature.AddKnownType("System.Data.SqlClient.SessionData", "SessionData");
            feature.AddKnownType("System.Data.SqlClient.SqlInternalConnectionTds", "SqlInternalConnectionTds");
            feature.AddKnownType("System.Data.SqlClient.SqlInternalConnectionTds+SyncAsyncLock", "SyncAsyncLock");
            feature.AddKnownType("System.Data.SqlClient.ServerInfo", "ServerInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlAuthenticationProvider", "SqlAuthenticationProvider");
            feature.AddKnownType("System.Data.SqlClient.SqlAuthenticationParameters", "SqlAuthenticationParameters");
            feature.AddKnownType("System.Data.SqlClient.SqlAuthenticationParameters+Builder", "Builder");
            feature.AddKnownType("System.Data.SqlClient.ActiveDirectoryAuthenticationTimeoutRetryState", "ActiveDirectoryAuthenticationTimeoutRetryState");
            feature.AddKnownType("System.Data.SqlClient.ActiveDirectoryAuthenticationTimeoutRetryHelper", "ActiveDirectoryAuthenticationTimeoutRetryHelper");
            feature.AddKnownType("System.Data.SqlClient.SqlAuthenticationProviderManager", "SqlAuthenticationProviderManager");
            feature.AddKnownType("System.Data.SqlClient.SqlAuthenticationProviderConfigurationSection", "SqlAuthenticationProviderConfigurationSection");
            feature.AddKnownType("System.Data.SqlClient.SqlAuthenticationInitializer", "SqlAuthenticationInitializer");
            feature.AddKnownType("System.Data.SqlClient.ActiveDirectoryNativeAuthenticationProvider", "ActiveDirectoryNativeAuthenticationProvider");
            feature.AddKnownType("System.Data.SqlClient.SqlAuthenticationToken", "SqlAuthenticationToken");
            feature.AddKnownType("System.Data.SqlClient.SqlClientLogger", "SqlClientLogger");
            feature.AddKnownType("System.Data.SqlClient.SqlClientLogger+LogLevel", "LogLevel");
            feature.AddKnownType("System.Data.SqlClient.TransactionState", "TransactionState");
            feature.AddKnownType("System.Data.SqlClient.TransactionType", "TransactionType");
            feature.AddKnownType("System.Data.SqlClient.SqlInternalTransaction", "SqlInternalTransaction");
            feature.AddKnownType("System.Data.SqlClient.SqlMetaDataFactory", "SqlMetaDataFactory");
            feature.AddKnownType("System.Data.SqlClient.SqlNotificationEventArgs", "SqlNotificationEventArgs");
            feature.AddKnownType("System.Data.SqlClient.SqlNotificationInfo", "SqlNotificationInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlNotificationSource", "SqlNotificationSource");
            feature.AddKnownType("System.Data.SqlClient.SqlNotificationType", "SqlNotificationType");
            feature.AddKnownType("System.Data.SqlClient.DataFeed", "DataFeed");
            feature.AddKnownType("System.Data.SqlClient.StreamDataFeed", "StreamDataFeed");
            feature.AddKnownType("System.Data.SqlClient.TextDataFeed", "TextDataFeed");
            feature.AddKnownType("System.Data.SqlClient.XmlDataFeed", "XmlDataFeed");
            feature.AddKnownType("System.Data.SqlClient.SqlParameter", "SqlParameter");
            feature.AddKnownType("System.Data.SqlClient.SqlParameter+SqlParameterConverter", "SqlParameterConverter");
            feature.AddKnownType("System.Data.SqlClient.SqlParameterCollection", "SqlParameterCollection");
            feature.AddKnownType("System.Data.SqlClient.SqlReferenceCollection", "SqlReferenceCollection");
            feature.AddKnownType("System.Data.SqlClient.SqlRowUpdatedEventArgs", "SqlRowUpdatedEventArgs");
            feature.AddKnownType("System.Data.SqlClient.SqlRowUpdatingEventArgs", "SqlRowUpdatingEventArgs");
            feature.AddKnownType("System.Data.SqlClient.SqlSequentialStream", "SqlSequentialStream");
            feature.AddKnownType("System.Data.SqlClient.SqlSequentialStreamSmi", "SqlSequentialStreamSmi");
            feature.AddKnownType("System.Data.SqlClient.SqlSequentialTextReader", "SqlSequentialTextReader");
            feature.AddKnownType("System.Data.SqlClient.SqlUnicodeEncoding", "SqlUnicodeEncoding");
            feature.AddKnownType("System.Data.SqlClient.SqlSequentialTextReaderSmi", "SqlSequentialTextReaderSmi");
            feature.AddKnownType("System.Data.SqlClient.SqlStatistics", "SqlStatistics");
            feature.AddKnownType("System.Data.SqlClient.SqlStream", "SqlStream");
            feature.AddKnownType("System.Data.SqlClient.SqlCachedStream", "SqlCachedStream");
            feature.AddKnownType("System.Data.SqlClient.SqlStreamingXml", "SqlStreamingXml");
            feature.AddKnownType("System.Data.SqlClient.SqlTransaction", "SqlTransaction");
            feature.AddKnownType("System.Data.SqlClient.SqlUdtInfo", "SqlUdtInfo");
            feature.AddKnownType("System.Data.SqlClient.InOutOfProcHelper", "InOutOfProcHelper");
            feature.AddKnownType("System.Data.SqlClient.SQLMessage", "SQLMessage");
            feature.AddKnownType("System.Data.SqlClient.TdsEnums+FeatureExtension", "TdsEnums.FeatureExtension");
            feature.AddKnownType("System.Data.SqlClient.TdsEnums+FedAuthLibrary", "TdsEnums.FedAuthLibrary");
            feature.AddKnownType("System.Data.SqlClient.TdsEnums+ActiveDirectoryWorkflow", "TdsEnums.ActiveDirectoryWorkflow");
            feature.AddKnownType("System.Data.SqlClient.TdsEnums+TransactionManagerRequestType", "TransactionManagerRequestType");
            feature.AddKnownType("System.Data.SqlClient.TdsEnums+TransactionManagerIsolationLevel", "TransactionManagerIsolationLevel");
            feature.AddKnownType("System.Data.SqlClient.TdsEnums+FedAuthInfoId", "FedAuthInfoId");
            feature.AddKnownType("System.Data.SqlClient.ParsingErrorState", "ParsingErrorState");
            feature.AddKnownType("System.Data.SqlClient.SniContext", "SniContext");
            feature.AddKnownType("System.Data.SqlClient.SqlConnectionColumnEncryptionSetting", "SqlConnectionColumnEncryptionSetting");
            feature.AddKnownType("System.Data.SqlClient.SqlCommandColumnEncryptionSetting", "SqlCommandColumnEncryptionSetting");
            feature.AddKnownType("System.Data.SqlClient.SqlAuthenticationMethod", "SqlAuthenticationMethod");
            feature.AddKnownType("System.Data.SqlClient.TransparentNetworkResolutionState", "TransparentNetworkResolutionState");
            feature.AddKnownType("System.Data.SqlClient.ActiveDirectoryAuthentication", "ActiveDirectoryAuthentication");
            feature.AddKnownType("System.Data.SqlClient.TdsParser", "TdsParser");
            feature.AddKnownType("System.Data.SqlClient.TdsParser+ReliabilitySection", "ReliabilitySection");
            feature.AddKnownType("System.Data.SqlClient.CallbackType", "CallbackType");
            feature.AddKnownType("System.Data.SqlClient.EncryptionOptions", "EncryptionOptions");
            feature.AddKnownType("System.Data.SqlClient.PreLoginHandshakeStatus", "PreLoginHandshakeStatus");
            feature.AddKnownType("System.Data.SqlClient.RunBehavior", "RunBehavior");
            feature.AddKnownType("System.Data.SqlClient.TdsParserState", "TdsParserState");
            feature.AddKnownType("System.Data.SqlClient.FederatedAuthenticationFeatureExtensionData", "FederatedAuthenticationFeatureExtensionData");
            feature.AddKnownType("System.Data.SqlClient.SqlEncryptionKeyInfo", "SqlEncryptionKeyInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlTceCipherInfoEntry", "SqlTceCipherInfoEntry");
            feature.AddKnownType("System.Data.SqlClient.SqlTceCipherInfoTable", "SqlTceCipherInfoTable");
            feature.AddKnownType("System.Data.SqlClient.SqlCollation", "SqlCollation");
            feature.AddKnownType("System.Data.SqlClient.RoutingInfo", "RoutingInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlEnvChange", "SqlEnvChange");
            feature.AddKnownType("System.Data.SqlClient.SqlLogin", "SqlLogin");
            feature.AddKnownType("System.Data.SqlClient.SqlLoginAck", "SqlLoginAck");
            feature.AddKnownType("System.Data.SqlClient.SqlFedAuthInfo", "SqlFedAuthInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlFedAuthToken", "SqlFedAuthToken");
            feature.AddKnownType("System.Data.SqlClient._SqlMetaData", "_SqlMetaData");
            feature.AddKnownType("System.Data.SqlClient._SqlMetaDataSet", "_SqlMetaDataSet");
            feature.AddKnownType("System.Data.SqlClient._SqlMetaDataSetCollection", "_SqlMetaDataSetCollection");
            feature.AddKnownType("System.Data.SqlClient.SqlCipherMetadata", "SqlCipherMetadata");
            feature.AddKnownType("System.Data.SqlClient.SqlMetaDataPriv", "SqlMetaDataPriv");
            feature.AddKnownType("System.Data.SqlClient.SqlColumnEncryptionInputParameterInfo", "SqlColumnEncryptionInputParameterInfo");
            feature.AddKnownType("System.Data.SqlClient._SqlRPC", "_SqlRPC");
            feature.AddKnownType("System.Data.SqlClient.SqlReturnValue", "SqlReturnValue");
            feature.AddKnownType("System.Data.SqlClient.MultiPartTableName", "MultiPartTableName");
            feature.AddKnownType("System.Data.SqlClient.SNILoadHandle", "SNILoadHandle");
            feature.AddKnownType("System.Data.SqlClient.SNIHandle", "SNIHandle");
            feature.AddKnownType("System.Data.SqlClient.SNIPacket", "SNIPacket");
            feature.AddKnownType("System.Data.SqlClient.WritePacketCache", "WritePacketCache");
            feature.AddKnownType("System.Data.SqlClient.TdsParserSessionPool", "TdsParserSessionPool");
            feature.AddKnownType("System.Data.SqlClient.LastIOTimer", "LastIOTimer");
            feature.AddKnownType("System.Data.SqlClient.TdsParserStateObject", "TdsParserStateObject");
            feature.AddKnownType("System.Data.SqlClient.TdsParserStaticMethods", "TdsParserStaticMethods");
            feature.AddKnownType("System.Data.SqlClient.ParameterPeekAheadValue", "ParameterPeekAheadValue");
            feature.AddKnownType("System.Data.SqlClient.SortOrder", "SortOrder");
            feature.AddKnownType("System.Data.SqlClient.TdsParameterSetter", "TdsParameterSetter");
            feature.AddKnownType("System.Data.SqlClient.TdsRecordBufferSetter", "TdsRecordBufferSetter");
            feature.AddKnownType("System.Data.SqlClient.TdsValueSetter", "TdsValueSetter");
            feature.AddKnownType("System.Data.SqlClient.PoolBlockingPeriod", "PoolBlockingPeriod");
            feature.AddKnownType("System.Data.SqlClient.ColumnEncryptionKeyInfo", "ColumnEncryptionKeyInfo");
            feature.AddKnownType("System.Data.SqlClient.SqlEnclaveAttestationParameters", "SqlEnclaveAttestationParameters");
            feature.AddKnownType("System.Data.SqlClient.EnclaveDelegate", "EnclaveDelegate");
            feature.AddKnownType("System.Data.SqlClient.EnclaveDelegate+RetriableEnclaveQueryExecutionException", "RetriableEnclaveQueryExecutionException");
            feature.AddKnownType("System.Data.SqlClient.EnclaveDelegate+EnclavePackage", "EnclavePackage");
            feature.AddKnownType("System.Data.SqlClient.SqlEnclaveSession", "SqlEnclaveSession");
            feature.AddKnownType("System.Data.SqlClient.SqlColumnEncryptionEnclaveProvider", "SqlColumnEncryptionEnclaveProvider");
            feature.AddKnownType("System.Data.SqlClient.SqlColumnEncryptionEnclaveProviderConfigurationSection", "SqlColumnEncryptionEnclaveProviderConfigurationSection");
            feature.AddKnownType("System.Data.SqlClient.SqlColumnEncryptionEnclaveProviderConfigurationManager", "SqlColumnEncryptionEnclaveProviderConfigurationManager");
            feature.AddKnownType("System.Data.SqlTypes.INullable", "INullable");
            feature.AddKnownType("System.Data.SqlTypes.UnsafeNativeMethods+FileType", "FileType");
            feature.AddKnownType("System.Data.SqlTypes.UnsafeNativeMethods+OBJECT_ATTRIBUTES", "OBJECT_ATTRIBUTES");
            feature.AddKnownType("System.Data.SqlTypes.UnsafeNativeMethods+UNICODE_STRING", "UNICODE_STRING");
            feature.AddKnownType("System.Data.SqlTypes.UnsafeNativeMethods+SecurityImpersonationLevel", "SecurityImpersonationLevel");
            feature.AddKnownType("System.Data.SqlTypes.UnsafeNativeMethods+SECURITY_QUALITY_OF_SERVICE", "SECURITY_QUALITY_OF_SERVICE");
            feature.AddKnownType("System.Data.SqlTypes.UnsafeNativeMethods+IO_STATUS_BLOCK", "IO_STATUS_BLOCK");
            feature.AddKnownType("System.Data.SqlTypes.UnsafeNativeMethods+FILE_FULL_EA_INFORMATION", "FILE_FULL_EA_INFORMATION");
            feature.AddKnownType("System.Data.SqlTypes.SqlBinary", "SqlBinary");
            feature.AddKnownType("System.Data.SqlTypes.SqlBoolean", "SqlBoolean");
            feature.AddKnownType("System.Data.SqlTypes.SqlByte", "SqlByte");
            feature.AddKnownType("System.Data.SqlTypes.SqlBytesCharsState", "SqlBytesCharsState");
            feature.AddKnownType("System.Data.SqlTypes.SqlBytes", "SqlBytes");
            feature.AddKnownType("System.Data.SqlTypes.StreamOnSqlBytes", "StreamOnSqlBytes");
            feature.AddKnownType("System.Data.SqlTypes.SqlChars", "SqlChars");
            feature.AddKnownType("System.Data.SqlTypes.StreamOnSqlChars", "StreamOnSqlChars");
            feature.AddKnownType("System.Data.SqlTypes.SqlStreamChars", "SqlStreamChars");
            feature.AddKnownType("System.Data.SqlTypes.SqlDateTime", "SqlDateTime");
            feature.AddKnownType("System.Data.SqlTypes.SqlDecimal", "SqlDecimal");
            feature.AddKnownType("System.Data.SqlTypes.SqlDouble", "SqlDouble");
            feature.AddKnownType("System.Data.SqlTypes.SqlFileStream", "SqlFileStream");
            feature.AddKnownType("System.Data.SqlTypes.UnicodeString", "UnicodeString");
            feature.AddKnownType("System.Data.SqlTypes.SecurityQualityOfService", "SecurityQualityOfService");
            feature.AddKnownType("System.Data.SqlTypes.FileFullEaInformation", "FileFullEaInformation");
            feature.AddKnownType("System.Data.SqlTypes.SqlGuid", "SqlGuid");
            feature.AddKnownType("System.Data.SqlTypes.SqlInt16", "SqlInt16");
            feature.AddKnownType("System.Data.SqlTypes.SqlInt32", "SqlInt32");
            feature.AddKnownType("System.Data.SqlTypes.SqlInt64", "SqlInt64");
            feature.AddKnownType("System.Data.SqlTypes.SqlMoney", "SqlMoney");
            feature.AddKnownType("System.Data.SqlTypes.SQLResource", "SQLResource");
            feature.AddKnownType("System.Data.SqlTypes.SqlSingle", "SqlSingle");
            feature.AddKnownType("System.Data.SqlTypes.SqlCompareOptions", "SqlCompareOptions");
            feature.AddKnownType("System.Data.SqlTypes.SqlString", "SqlString");
            feature.AddKnownType("System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper", "SqlTypesSchemaImporterExtensionHelper");
            feature.AddKnownType("System.Data.SqlTypes.TypeCharSchemaImporterExtension", "TypeCharSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeNCharSchemaImporterExtension", "TypeNCharSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeVarCharSchemaImporterExtension", "TypeVarCharSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeNVarCharSchemaImporterExtension", "TypeNVarCharSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeTextSchemaImporterExtension", "TypeTextSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeNTextSchemaImporterExtension", "TypeNTextSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeVarBinarySchemaImporterExtension", "TypeVarBinarySchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeBinarySchemaImporterExtension", "TypeBinarySchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeVarImageSchemaImporterExtension", "TypeVarImageSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeDecimalSchemaImporterExtension", "TypeDecimalSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeNumericSchemaImporterExtension", "TypeNumericSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeBigIntSchemaImporterExtension", "TypeBigIntSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeIntSchemaImporterExtension", "TypeIntSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeSmallIntSchemaImporterExtension", "TypeSmallIntSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeTinyIntSchemaImporterExtension", "TypeTinyIntSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeBitSchemaImporterExtension", "TypeBitSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeFloatSchemaImporterExtension", "TypeFloatSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeRealSchemaImporterExtension", "TypeRealSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeDateTimeSchemaImporterExtension", "TypeDateTimeSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeSmallDateTimeSchemaImporterExtension", "TypeSmallDateTimeSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeMoneySchemaImporterExtension", "TypeMoneySchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeSmallMoneySchemaImporterExtension", "TypeSmallMoneySchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.TypeUniqueIdentifierSchemaImporterExtension", "TypeUniqueIdentifierSchemaImporterExtension");
            feature.AddKnownType("System.Data.SqlTypes.EComparison", "EComparison");
            feature.AddKnownType("System.Data.SqlTypes.StorageState", "StorageState");
            feature.AddKnownType("System.Data.SqlTypes.SqlTypeException", "SqlTypeException");
            feature.AddKnownType("System.Data.SqlTypes.SqlNullValueException", "SqlNullValueException");
            feature.AddKnownType("System.Data.SqlTypes.SqlTruncateException", "SqlTruncateException");
            feature.AddKnownType("System.Data.SqlTypes.SqlNotFilledException", "SqlNotFilledException");
            feature.AddKnownType("System.Data.SqlTypes.SqlAlreadyFilledException", "SqlAlreadyFilledException");
            feature.AddKnownType("System.Data.SqlTypes.SQLDebug", "SQLDebug");
            feature.AddKnownType("System.Data.SqlTypes.SqlXml", "SqlXml");
            feature.AddKnownType("System.Data.SqlTypes.SqlXmlStreamWrapper", "SqlXmlStreamWrapper");
            feature.AddKnownType("System.Xml.BaseTreeIterator", "BaseTreeIterator");
            feature.AddKnownType("System.Xml.DataDocumentXPathNavigator", "DataDocumentXPathNavigator");
            feature.AddKnownType("System.Xml.DataPointer", "DataPointer");
            feature.AddKnownType("System.Xml.DataSetMapper", "DataSetMapper");
            feature.AddKnownType("System.Xml.IXmlDataVirtualNode", "IXmlDataVirtualNode");
            feature.AddKnownType("System.Xml.BaseRegionIterator", "BaseRegionIterator");
            feature.AddKnownType("System.Xml.RegionIterator", "RegionIterator");
            feature.AddKnownType("System.Xml.TreeIterator", "TreeIterator");
            feature.AddKnownType("System.Xml.ElementState", "ElementState");
            feature.AddKnownType("System.Xml.XmlBoundElement", "XmlBoundElement");
            feature.AddKnownType("System.Xml.XmlDataDocument", "XmlDataDocument");
            feature.AddKnownType("System.Xml.XmlDataImplementation", "XmlDataImplementation");
            feature.AddKnownType("System.Xml.XPathNodePointer", "XPathNodePointer");
            feature.AddKnownType("MatchState,System", "<global namespace>.MatchState");
            feature.AddKnownType("Interop+SChannel+SCHANNEL_ALERT_TOKEN,System", "<global namespace>.<global namespace>.SChannel.SCHANNEL_ALERT_TOKEN");
            feature.AddKnownType("Microsoft.CSharp.CSharpCodeProvider,System", "Microsoft.CSharp.CSharpCodeProvider");
            feature.AddKnownType("Microsoft.CSharp.CSharpCodeGenerator,System", "Microsoft.CSharp.CSharpCodeGenerator");
            feature.AddKnownType("Microsoft.CSharp.CSharpTypeAttributeConverter,System", "Microsoft.CSharp.CSharpTypeAttributeConverter");
            feature.AddKnownType("Microsoft.CSharp.CSharpMemberAttributeConverter,System", "Microsoft.CSharp.CSharpMemberAttributeConverter");
            feature.AddKnownType("Microsoft.CSharp.CSharpModifierAttributeConverter,System", "Microsoft.CSharp.CSharpModifierAttributeConverter");
            feature.AddKnownType("Microsoft.VisualBasic.VBCodeProvider,System", "Microsoft.VisualBasic.VBCodeProvider");
            feature.AddKnownType("Microsoft.VisualBasic.VBCodeGenerator,System", "Microsoft.VisualBasic.VBCodeGenerator");
            feature.AddKnownType("Microsoft.VisualBasic.VBMemberAttributeConverter,System", "Microsoft.VisualBasic.VBMemberAttributeConverter");
            feature.AddKnownType("Microsoft.VisualBasic.VBTypeAttributeConverter,System", "Microsoft.VisualBasic.VBTypeAttributeConverter");
            feature.AddKnownType("Microsoft.VisualBasic.VBModifierAttributeConverter,System", "Microsoft.VisualBasic.VBModifierAttributeConverter");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+TEXTMETRIC,System", "Microsoft.Win32.TEXTMETRIC");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+STARTUPINFO,System", "Microsoft.Win32.STARTUPINFO");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+SECURITY_ATTRIBUTES,System", "Microsoft.Win32.SECURITY_ATTRIBUTES");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+LogonFlags,System", "Microsoft.Win32.LogonFlags");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+WNDCLASS_I,System", "Microsoft.Win32.WNDCLASS_I");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+WNDCLASS,System", "Microsoft.Win32.WNDCLASS");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+MSG,System", "Microsoft.Win32.Microsoft.Win32.NativeMethods.MSG");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+StructFormatEnum,System", "Microsoft.Win32.Microsoft.Win32.NativeMethods.StructFormatEnum");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+StructFormat,System", "Microsoft.Win32.Microsoft.Win32.NativeMethods.StructFormat");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+PDH_RAW_COUNTER,System", "Microsoft.Win32.Microsoft.Win32.NativeMethods.PDH_RAW_COUNTER");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+PDH_FMT_COUNTERVALUE,System", "Microsoft.Win32.Microsoft.Win32.NativeMethods.PDH_FMT_COUNTERVALUE");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+PERF_COUNTER_BLOCK,System", "Microsoft.Win32.PERF_COUNTER_BLOCK");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+PERF_COUNTER_DEFINITION,System", "Microsoft.Win32.PERF_COUNTER_DEFINITION");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+PERF_DATA_BLOCK,System", "Microsoft.Win32.PERF_DATA_BLOCK");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+PERF_INSTANCE_DEFINITION,System", "Microsoft.Win32.PERF_INSTANCE_DEFINITION");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+PERF_OBJECT_TYPE,System", "Microsoft.Win32.PERF_OBJECT_TYPE");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+NtModuleInfo,System", "Microsoft.Win32.NtModuleInfo");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+WinProcessEntry,System", "Microsoft.Win32.WinProcessEntry");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+WinThreadEntry,System", "Microsoft.Win32.WinThreadEntry");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+WinModuleEntry,System", "Microsoft.Win32.WinModuleEntry");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+ShellExecuteInfo,System", "Microsoft.Win32.ShellExecuteInfo");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+NtProcessBasicInfo,System", "Microsoft.Win32.NtProcessBasicInfo");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+LUID,System", "Microsoft.Win32.LUID");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+TokenPrivileges,System", "Microsoft.Win32.TokenPrivileges");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+SYSTEMTIME,System", "Microsoft.Win32.SYSTEMTIME");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+VS_FIXEDFILEINFO,System", "Microsoft.Win32.VS_FIXEDFILEINFO");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+USEROBJECTFLAGS,System", "Microsoft.Win32.USEROBJECTFLAGS");
            feature.AddKnownType("Microsoft.Win32.NativeMethods+MEMORY_BASIC_INFORMATION,System", "Microsoft.Win32.MEMORY_BASIC_INFORMATION");
            feature.AddKnownType("Microsoft.Win32.PowerModeChangedEventArgs,System", "Microsoft.Win32.PowerModeChangedEventArgs");
            feature.AddKnownType("Microsoft.Win32.PowerModes,System", "Microsoft.Win32.PowerModes");
            feature.AddKnownType("Microsoft.Win32.SafeNativeMethods+PROCESS_INFORMATION,System", "Microsoft.Win32.PROCESS_INFORMATION");
            feature.AddKnownType("Microsoft.Win32.SessionEndedEventArgs,System", "Microsoft.Win32.SessionEndedEventArgs");
            feature.AddKnownType("Microsoft.Win32.SessionEndingEventArgs,System", "Microsoft.Win32.SessionEndingEventArgs");
            feature.AddKnownType("Microsoft.Win32.SessionEndReasons,System", "Microsoft.Win32.SessionEndReasons");
            feature.AddKnownType("Microsoft.Win32.SessionSwitchEventArgs,System", "Microsoft.Win32.SessionSwitchEventArgs");
            feature.AddKnownType("Microsoft.Win32.SessionSwitchReason,System", "Microsoft.Win32.SessionSwitchReason");
            feature.AddKnownType("Microsoft.Win32.SystemEvents,System", "Microsoft.Win32.SystemEvents");
            feature.AddKnownType("Microsoft.Win32.TimerElapsedEventArgs,System", "Microsoft.Win32.TimerElapsedEventArgs");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+WIN32_FILE_ATTRIBUTE_DATA,System", "Microsoft.Win32.Microsoft.Win32.UnsafeNativeMethods.WIN32_FILE_ATTRIBUTE_DATA");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+DCB,System", "Microsoft.Win32.DCB");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+COMSTAT,System", "Microsoft.Win32.COMSTAT");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+COMMTIMEOUTS,System", "Microsoft.Win32.COMMTIMEOUTS");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+COMMPROP,System", "Microsoft.Win32.COMMPROP");
            feature.AddKnownType("Microsoft.Win32.UnsafeNativeMethods+IMarshal,System", "Microsoft.Win32.IMarshal");
            feature.AddKnownType("Microsoft.Win32.UserPreferenceCategory,System", "Microsoft.Win32.UserPreferenceCategory");
            feature.AddKnownType("Microsoft.Win32.UserPreferenceChangedEventArgs,System", "Microsoft.Win32.UserPreferenceChangedEventArgs");
            feature.AddKnownType("Microsoft.Win32.UserPreferenceChangingEventArgs,System", "Microsoft.Win32.UserPreferenceChangingEventArgs");
            feature.AddKnownType("Microsoft.Win32.InternetSecurityManager,System", "Microsoft.Win32.InternetSecurityManager");
            feature.AddKnownType("Microsoft.Win32.IInternetSecurityManager,System", "Microsoft.Win32.IInternetSecurityManager");
            feature.AddKnownType("Microsoft.Win32.IntranetZoneCredentialPolicy,System", "Microsoft.Win32.IntranetZoneCredentialPolicy");
            feature.AddKnownType("Microsoft.Win32.WinInetCache,System", "Microsoft.Win32.WinInetCache");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeEventLogReadHandle,System", "Microsoft.Win32.SafeHandles.SafeEventLogReadHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeEventLogWriteHandle,System", "Microsoft.Win32.SafeHandles.SafeEventLogWriteHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeFileMappingHandle,System", "Microsoft.Win32.SafeHandles.SafeFileMappingHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeFileMapViewHandle,System", "Microsoft.Win32.SafeHandles.SafeFileMapViewHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeLibraryHandle,System", "Microsoft.Win32.SafeHandles.SafeLibraryHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeLocalMemHandle,System", "Microsoft.Win32.SafeHandles.SafeLocalMemHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeProcessHandle,System", "Microsoft.Win32.SafeHandles.SafeProcessHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeTimerHandle,System", "Microsoft.Win32.SafeHandles.SafeTimerHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeThreadHandle,System", "Microsoft.Win32.SafeHandles.SafeThreadHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeUserTokenHandle,System", "Microsoft.Win32.SafeHandles.SafeUserTokenHandle");
            feature.AddKnownType("Microsoft.Win32.SafeHandles.SafeX509ChainHandle,System", "Microsoft.Win32.SafeHandles.SafeX509ChainHandle");
            feature.AddKnownType("System.ExceptionArgument", "ExceptionArgument");
            feature.AddKnownType("System.ExceptionResource", "ExceptionResource");
            feature.AddKnownType("System.UriParser", "UriParser");
            feature.AddKnownType("System.Uri", "Uri");
            feature.AddKnownType("System.UriBuilder", "UriBuilder");
            feature.AddKnownType("System.UriFormatException", "UriFormatException");
            feature.AddKnownType("System.UriHostNameType", "UriHostNameType");
            feature.AddKnownType("System.UriPartial", "UriPartial");
            feature.AddKnownType("System.DomainNameHelper", "DomainNameHelper");
            feature.AddKnownType("System.UncNameHelper", "UncNameHelper");
            feature.AddKnownType("System.UriSyntaxFlags", "UriSyntaxFlags");
            feature.AddKnownType("System.UriTypeConverter", "UriTypeConverter");
            feature.AddKnownType("System.UriKind", "UriKind");
            feature.AddKnownType("System.UriComponents", "UriComponents");
            feature.AddKnownType("System.UriFormat", "UriFormat");
            feature.AddKnownType("System.UriIdnScope", "UriIdnScope");
            feature.AddKnownType("System.ParsingError", "ParsingError");
            feature.AddKnownType("System.UnescapeMode", "UnescapeMode");
            feature.AddKnownType("System.GenericUriParserOptions", "GenericUriParserOptions");
            feature.AddKnownType("System.GenericUriParser", "GenericUriParser");
            feature.AddKnownType("System.HttpStyleUriParser", "HttpStyleUriParser");
            feature.AddKnownType("System.FtpStyleUriParser", "FtpStyleUriParser");
            feature.AddKnownType("System.FileStyleUriParser", "FileStyleUriParser");
            feature.AddKnownType("System.NewsStyleUriParser", "NewsStyleUriParser");
            feature.AddKnownType("System.GopherStyleUriParser", "GopherStyleUriParser");
            feature.AddKnownType("System.LdapStyleUriParser", "LdapStyleUriParser");
            feature.AddKnownType("System.NetPipeStyleUriParser", "NetPipeStyleUriParser");
            feature.AddKnownType("System.NetTcpStyleUriParser", "NetTcpStyleUriParser");
            feature.AddKnownType("System.InvariantComparer", "InvariantComparer");
            feature.AddKnownType("System.PinnableBufferCache", "PinnableBufferCache");
            feature.AddKnownType("System.Gen2GcCallback", "Gen2GcCallback");
            feature.AddKnownType("System.PinnableBufferCacheEventSource", "PinnableBufferCacheEventSource");
            feature.AddKnownType("System.SRDescriptionAttribute", "SRDescriptionAttribute");
            feature.AddKnownType("System.SRCategoryAttribute", "SRCategoryAttribute");
            feature.AddKnownType("System.SR", "SR");
            feature.AddKnownType("System.CodeDom.CodeArgumentReferenceExpression", "CodeArgumentReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeArrayCreateExpression", "CodeArrayCreateExpression");
            feature.AddKnownType("System.CodeDom.CodeArrayIndexerExpression", "CodeArrayIndexerExpression");
            feature.AddKnownType("System.CodeDom.CodeAssignStatement", "CodeAssignStatement");
            feature.AddKnownType("System.CodeDom.CodeAttachEventStatement", "CodeAttachEventStatement");
            feature.AddKnownType("System.CodeDom.CodeAttributeArgument", "CodeAttributeArgument");
            feature.AddKnownType("System.CodeDom.CodeAttributeArgumentCollection", "CodeAttributeArgumentCollection");
            feature.AddKnownType("System.CodeDom.CodeAttributeDeclaration", "CodeAttributeDeclaration");
            feature.AddKnownType("System.CodeDom.CodeAttributeDeclarationCollection", "CodeAttributeDeclarationCollection");
            feature.AddKnownType("System.CodeDom.CodeBaseReferenceExpression", "CodeBaseReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeBinaryOperatorExpression", "CodeBinaryOperatorExpression");
            feature.AddKnownType("System.CodeDom.CodeBinaryOperatorType", "CodeBinaryOperatorType");
            feature.AddKnownType("System.CodeDom.CodeCastExpression", "CodeCastExpression");
            feature.AddKnownType("System.CodeDom.CodeCatchClause", "CodeCatchClause");
            feature.AddKnownType("System.CodeDom.CodeCatchClauseCollection", "CodeCatchClauseCollection");
            feature.AddKnownType("System.CodeDom.CodeChecksumPragma", "CodeChecksumPragma");
            feature.AddKnownType("System.CodeDom.CodeComment", "CodeComment");
            feature.AddKnownType("System.CodeDom.CodeCommentStatement", "CodeCommentStatement");
            feature.AddKnownType("System.CodeDom.CodeCommentStatementCollection", "CodeCommentStatementCollection");
            feature.AddKnownType("System.CodeDom.CodeCompileUnit", "CodeCompileUnit");
            feature.AddKnownType("System.CodeDom.CodeConditionStatement", "CodeConditionStatement");
            feature.AddKnownType("System.CodeDom.CodeConstructor", "CodeConstructor");
            feature.AddKnownType("System.CodeDom.CodeDefaultValueExpression", "CodeDefaultValueExpression");
            feature.AddKnownType("System.CodeDom.CodeDelegateCreateExpression", "CodeDelegateCreateExpression");
            feature.AddKnownType("System.CodeDom.CodeDelegateInvokeExpression", "CodeDelegateInvokeExpression");
            feature.AddKnownType("System.CodeDom.CodeDirectionExpression", "CodeDirectionExpression");
            feature.AddKnownType("System.CodeDom.CodeDirective", "CodeDirective");
            feature.AddKnownType("System.CodeDom.CodeDirectiveCollection", "CodeDirectiveCollection");
            feature.AddKnownType("System.CodeDom.CodeEntryPointMethod", "CodeEntryPointMethod");
            feature.AddKnownType("System.CodeDom.CodeEventReferenceExpression", "CodeEventReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeExpression", "CodeExpression");
            feature.AddKnownType("System.CodeDom.CodeExpressionCollection", "CodeExpressionCollection");
            feature.AddKnownType("System.CodeDom.CodeExpressionStatement", "CodeExpressionStatement");
            feature.AddKnownType("System.CodeDom.CodeFieldReferenceExpression", "CodeFieldReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeGotoStatement", "CodeGotoStatement");
            feature.AddKnownType("System.CodeDom.CodeIndexerExpression", "CodeIndexerExpression");
            feature.AddKnownType("System.CodeDom.CodeIterationStatement", "CodeIterationStatement");
            feature.AddKnownType("System.CodeDom.CodeLabeledStatement", "CodeLabeledStatement");
            feature.AddKnownType("System.CodeDom.CodeLinePragma", "CodeLinePragma");
            feature.AddKnownType("System.CodeDom.CodeMemberEvent", "CodeMemberEvent");
            feature.AddKnownType("System.CodeDom.CodeMemberField", "CodeMemberField");
            feature.AddKnownType("System.CodeDom.CodeMemberMethod", "CodeMemberMethod");
            feature.AddKnownType("System.CodeDom.CodeMemberProperty", "CodeMemberProperty");
            feature.AddKnownType("System.CodeDom.CodeMethodInvokeExpression", "CodeMethodInvokeExpression");
            feature.AddKnownType("System.CodeDom.CodeMethodReferenceExpression", "CodeMethodReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeMethodReturnStatement", "CodeMethodReturnStatement");
            feature.AddKnownType("System.CodeDom.CodeNamespace", "CodeNamespace");
            feature.AddKnownType("System.CodeDom.CodeNamespaceCollection", "CodeNamespaceCollection");
            feature.AddKnownType("System.CodeDom.CodeNamespaceImport", "CodeNamespaceImport");
            feature.AddKnownType("System.CodeDom.CodeNamespaceImportCollection", "CodeNamespaceImportCollection");
            feature.AddKnownType("System.CodeDom.CodeObject", "CodeObject");
            feature.AddKnownType("System.CodeDom.CodeObjectCreateExpression", "CodeObjectCreateExpression");
            feature.AddKnownType("System.CodeDom.CodeParameterDeclarationExpression", "CodeParameterDeclarationExpression");
            feature.AddKnownType("System.CodeDom.CodeParameterDeclarationExpressionCollection", "CodeParameterDeclarationExpressionCollection");
            feature.AddKnownType("System.CodeDom.CodePrimitiveExpression", "CodePrimitiveExpression");
            feature.AddKnownType("System.CodeDom.CodePropertyReferenceExpression", "CodePropertyReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodePropertySetValueReferenceExpression", "CodePropertySetValueReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeRegionDirective", "CodeRegionDirective");
            feature.AddKnownType("System.CodeDom.CodeRegionMode", "CodeRegionMode");
            feature.AddKnownType("System.CodeDom.CodeRemoveEventStatement", "CodeRemoveEventStatement");
            feature.AddKnownType("System.CodeDom.CodeSnippetCompileUnit", "CodeSnippetCompileUnit");
            feature.AddKnownType("System.CodeDom.CodeSnippetExpression", "CodeSnippetExpression");
            feature.AddKnownType("System.CodeDom.CodeSnippetStatement", "CodeSnippetStatement");
            feature.AddKnownType("System.CodeDom.CodeSnippetTypeMember", "CodeSnippetTypeMember");
            feature.AddKnownType("System.CodeDom.CodeStatement", "CodeStatement");
            feature.AddKnownType("System.CodeDom.CodeStatementCollection", "CodeStatementCollection");
            feature.AddKnownType("System.CodeDom.CodeThisReferenceExpression", "CodeThisReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeThrowExceptionStatement", "CodeThrowExceptionStatement");
            feature.AddKnownType("System.CodeDom.CodeTryCatchFinallyStatement", "CodeTryCatchFinallyStatement");
            feature.AddKnownType("System.CodeDom.CodeTypeConstructor", "CodeTypeConstructor");
            feature.AddKnownType("System.CodeDom.CodeTypeDeclaration", "CodeTypeDeclaration");
            feature.AddKnownType("System.CodeDom.CodeTypeDeclarationCollection", "CodeTypeDeclarationCollection");
            feature.AddKnownType("System.CodeDom.CodeTypeDelegate", "CodeTypeDelegate");
            feature.AddKnownType("System.CodeDom.CodeTypeMember", "CodeTypeMember");
            feature.AddKnownType("System.CodeDom.CodeTypeMemberCollection", "CodeTypeMemberCollection");
            feature.AddKnownType("System.CodeDom.CodeTypeOfExpression", "CodeTypeOfExpression");
            feature.AddKnownType("System.CodeDom.CodeTypeParameter", "CodeTypeParameter");
            feature.AddKnownType("System.CodeDom.CodeTypeParameterCollection", "CodeTypeParameterCollection");
            feature.AddKnownType("System.CodeDom.CodeTypeReferenceOptions", "CodeTypeReferenceOptions");
            feature.AddKnownType("System.CodeDom.CodeTypeReference", "CodeTypeReference");
            feature.AddKnownType("System.CodeDom.CodeTypeReferenceCollection", "CodeTypeReferenceCollection");
            feature.AddKnownType("System.CodeDom.CodeTypeReferenceExpression", "CodeTypeReferenceExpression");
            feature.AddKnownType("System.CodeDom.CodeVariableDeclarationStatement", "CodeVariableDeclarationStatement");
            feature.AddKnownType("System.CodeDom.CodeVariableReferenceExpression", "CodeVariableReferenceExpression");
            feature.AddKnownType("System.CodeDom.FieldDirection", "FieldDirection");
            feature.AddKnownType("System.CodeDom.MemberAttributes", "MemberAttributes");
            feature.AddKnownType("System.CodeDom.Compiler.CodeCompiler", "CodeCompiler");
            feature.AddKnownType("System.CodeDom.Compiler.CodeDomCompilationConfiguration", "CodeDomCompilationConfiguration");
            feature.AddKnownType("System.CodeDom.Compiler.CodeDomCompilationConfiguration+SectionHandler", "SectionHandler");
            feature.AddKnownType("System.CodeDom.Compiler.CodeDomConfigurationHandler", "CodeDomConfigurationHandler");
            feature.AddKnownType("System.CodeDom.Compiler.CodeDomProvider", "CodeDomProvider");
            feature.AddKnownType("System.CodeDom.Compiler.CodeGenerator", "CodeGenerator");
            feature.AddKnownType("System.CodeDom.Compiler.CodeGeneratorOptions", "CodeGeneratorOptions");
            feature.AddKnownType("System.CodeDom.Compiler.CodeParser", "CodeParser");
            feature.AddKnownType("System.CodeDom.Compiler.CodeValidator", "CodeValidator");
            feature.AddKnownType("System.CodeDom.Compiler.CompilerError", "CompilerError");
            feature.AddKnownType("System.CodeDom.Compiler.CompilerErrorCollection", "CompilerErrorCollection");
            feature.AddKnownType("System.CodeDom.Compiler.CompilerInfo", "CompilerInfo");
            feature.AddKnownType("System.CodeDom.Compiler.CompilerParameters", "CompilerParameters");
            feature.AddKnownType("System.CodeDom.Compiler.CompilerResults", "CompilerResults");
            feature.AddKnownType("System.CodeDom.Compiler.GeneratedCodeAttribute", "GeneratedCodeAttribute");
            feature.AddKnownType("System.CodeDom.Compiler.GeneratorSupport", "GeneratorSupport");
            feature.AddKnownType("System.CodeDom.Compiler.ICodeCompiler", "ICodeCompiler");
            feature.AddKnownType("System.CodeDom.Compiler.ICodeGenerator", "ICodeGenerator");
            feature.AddKnownType("System.CodeDom.Compiler.ICodeParser", "ICodeParser");
            feature.AddKnownType("System.CodeDom.Compiler.IndentedTextWriter", "IndentedTextWriter");
            feature.AddKnownType("System.CodeDom.Compiler.Indentation", "Indentation");
            feature.AddKnownType("System.CodeDom.Compiler.LanguageOptions", "LanguageOptions");
            feature.AddKnownType("System.CodeDom.Compiler.TempFileCollection", "TempFileCollection");
            feature.AddKnownType("System.Collections.Concurrent.BlockingCollection`1", "BlockingCollection`1'1");
            feature.AddKnownType("System.Collections.Concurrent.SystemThreadingCollections_BlockingCollectionDebugView`1", "SystemThreadingCollections_BlockingCollectionDebugView`1'1");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentBag`1", "ConcurrentBag`1'1");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentBag`1+Node", "Node'1");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentBag`1+ThreadLocalList", "ThreadLocalList'1");
            feature.AddKnownType("System.Collections.Concurrent.ConcurrentBag`1+ListOperation", "ListOperation'1");
            feature.AddKnownType("System.Collections.Concurrent.SystemThreadingCollection_IProducerConsumerCollectionDebugView`1", "SystemThreadingCollection_IProducerConsumerCollectionDebugView`1'1");
            feature.AddKnownType("System.Collections.Generic.System_CollectionDebugView`1", "System_CollectionDebugView`1'1");
            feature.AddKnownType("System.Collections.Generic.System_QueueDebugView`1", "System_QueueDebugView`1'1");
            feature.AddKnownType("System.Collections.Generic.System_StackDebugView`1", "System_StackDebugView`1'1");
            feature.AddKnownType("System.Collections.Generic.System_DictionaryDebugView`2", "System_DictionaryDebugView`2'2");
            feature.AddKnownType("System.Collections.Generic.System_DictionaryKeyCollectionDebugView`2", "System_DictionaryKeyCollectionDebugView`2'2");
            feature.AddKnownType("System.Collections.Generic.System_DictionaryValueCollectionDebugView`2", "System_DictionaryValueCollectionDebugView`2'2");
            feature.AddKnownType("System.Collections.Generic.LinkedList`1", "LinkedList`1'1");
            feature.AddKnownType("System.Collections.Generic.LinkedList`1+Enumerator", "LinkedList`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Generic.LinkedListNode`1", "LinkedListNode`1'1");
            feature.AddKnownType("System.Collections.Generic.Queue`1", "Queue`1'1");
            feature.AddKnownType("System.Collections.Generic.Queue`1+Enumerator", "Queue`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Generic.SortedList`2", "SortedList`2'2");
            feature.AddKnownType("System.Collections.Generic.Stack`1", "Stack`1'1");
            feature.AddKnownType("System.Collections.Generic.Stack`1+Enumerator", "Stack`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2", "SortedDictionary`2'2");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+Enumerator", "SortedDictionary`2'2.Enumerator'2");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+KeyCollection", "SortedDictionary`2'2.KeyCollection'2");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+KeyCollection+Enumerator", "SortedDictionary`2'2.KeyCollection'2.Enumerator'2");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+ValueCollection", "SortedDictionary`2'2.ValueCollection'2");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+ValueCollection+Enumerator", "SortedDictionary`2'2.ValueCollection'2.Enumerator'2");
            feature.AddKnownType("System.Collections.Generic.SortedDictionary`2+KeyValuePairComparer", "KeyValuePairComparer'2");
            feature.AddKnownType("System.Collections.Generic.TreeSet`1", "TreeSet`1'1");
            feature.AddKnownType("System.Collections.Generic.TreeRotation", "TreeRotation");
            feature.AddKnownType("System.Collections.Generic.SortedSet`1", "SortedSet`1'1");
            feature.AddKnownType("System.Collections.Generic.SortedSet`1+TreeSubSet", "TreeSubSet'1");
            feature.AddKnownType("System.Collections.Generic.SortedSet`1+Node", "Node'1");
            feature.AddKnownType("System.Collections.Generic.SortedSet`1+Enumerator", "SortedSet`1'1.Enumerator'1");
            feature.AddKnownType("System.Collections.Generic.SortedSet`1+ElementCount", "ElementCount'1");
            feature.AddKnownType("System.Collections.Generic.SortedSetEqualityComparer`1", "SortedSetEqualityComparer`1'1");
            feature.AddKnownType("System.Collections.Generic.SortedSetDebugView`1", "SortedSetDebugView`1'1");
            feature.AddKnownType("System.Collections.Generic.ISet`1", "ISet`1'1");
            feature.AddKnownType("System.Collections.Generic.BitHelper", "BitHelper");
            feature.AddKnownType("System.Collections.ObjectModel.ObservableCollection`1", "ObservableCollection`1'1");
            feature.AddKnownType("System.Collections.ObjectModel.ReadOnlyObservableCollection`1", "ReadOnlyObservableCollection`1'1");
            feature.AddKnownType("System.Collections.Specialized.BitVector32", "BitVector32");
            feature.AddKnownType("System.Collections.Specialized.BitVector32+Section", "BitVector32.Section");
            feature.AddKnownType("System.Collections.Specialized.CollectionsUtil", "CollectionsUtil");
            feature.AddKnownType("System.Collections.Specialized.HybridDictionary", "HybridDictionary");
            feature.AddKnownType("System.Collections.Specialized.INotifyCollectionChanged", "INotifyCollectionChanged");
            feature.AddKnownType("System.Collections.Specialized.IOrderedDictionary", "IOrderedDictionary");
            feature.AddKnownType("System.Collections.Specialized.ListDictionary", "ListDictionary");
            feature.AddKnownType("System.Collections.Specialized.NameObjectCollectionBase", "NameObjectCollectionBase");
            feature.AddKnownType("System.Collections.Specialized.NameObjectCollectionBase+NameObjectEntry", "NameObjectEntry");
            feature.AddKnownType("System.Collections.Specialized.NameObjectCollectionBase+NameObjectKeysEnumerator", "NameObjectKeysEnumerator");
            feature.AddKnownType("System.Collections.Specialized.NameObjectCollectionBase+KeysCollection", "NameObjectCollectionBase.KeysCollection");
            feature.AddKnownType("System.Collections.Specialized.CompatibleComparer", "CompatibleComparer");
            feature.AddKnownType("System.Collections.Specialized.NameValueCollection", "NameValueCollection");
            feature.AddKnownType("System.Collections.Specialized.NotifyCollectionChangedAction", "NotifyCollectionChangedAction");
            feature.AddKnownType("System.Collections.Specialized.NotifyCollectionChangedEventArgs", "NotifyCollectionChangedEventArgs");
            feature.AddKnownType("System.Collections.Specialized.OrderedDictionary", "OrderedDictionary");
            feature.AddKnownType("System.Collections.Specialized.StringCollection", "StringCollection");
            feature.AddKnownType("System.Collections.Specialized.StringEnumerator", "StringEnumerator");
            feature.AddKnownType("System.Collections.Specialized.StringDictionary", "StringDictionary");
            feature.AddKnownType("System.Collections.Specialized.StringDictionaryWithComparer", "StringDictionaryWithComparer");
            feature.AddKnownType("System.Collections.Specialized.BackCompatibleStringComparer", "BackCompatibleStringComparer");
            feature.AddKnownType("System.ComponentModel.AddingNewEventArgs", "AddingNewEventArgs");
            feature.AddKnownType("System.ComponentModel.AmbientValueAttribute", "AmbientValueAttribute");
            feature.AddKnownType("System.ComponentModel.ArrayConverter", "ArrayConverter");
            feature.AddKnownType("System.ComponentModel.ArraySubsetEnumerator", "ArraySubsetEnumerator");
            feature.AddKnownType("System.ComponentModel.AsyncCompletedEventArgs", "AsyncCompletedEventArgs");
            feature.AddKnownType("System.ComponentModel.AsyncOperation", "AsyncOperation");
            feature.AddKnownType("System.ComponentModel.AttributeCollection", "AttributeCollection");
            feature.AddKnownType("System.ComponentModel.AttributeProviderAttribute", "AttributeProviderAttribute");
            feature.AddKnownType("System.ComponentModel.BackgroundWorker", "BackgroundWorker");
            feature.AddKnownType("System.ComponentModel.ComponentEditor", "ComponentEditor");
            feature.AddKnownType("System.ComponentModel.BaseNumberConverter", "BaseNumberConverter");
            feature.AddKnownType("System.ComponentModel.BindableAttribute", "BindableAttribute");
            feature.AddKnownType("System.ComponentModel.BindableSupport", "BindableSupport");
            feature.AddKnownType("System.ComponentModel.BindingDirection", "BindingDirection");
            feature.AddKnownType("System.ComponentModel.BindingList`1", "BindingList`1'1");
            feature.AddKnownType("System.ComponentModel.BooleanConverter", "BooleanConverter");
            feature.AddKnownType("System.ComponentModel.BrowsableAttribute", "BrowsableAttribute");
            feature.AddKnownType("System.ComponentModel.ByteConverter", "ByteConverter");
            feature.AddKnownType("System.ComponentModel.CancelEventArgs", "CancelEventArgs");
            feature.AddKnownType("System.ComponentModel.CategoryAttribute", "CategoryAttribute");
            feature.AddKnownType("System.ComponentModel.CharConverter", "CharConverter");
            feature.AddKnownType("System.ComponentModel.CollectionChangeAction", "CollectionChangeAction");
            feature.AddKnownType("System.ComponentModel.CollectionChangeEventArgs", "CollectionChangeEventArgs");
            feature.AddKnownType("System.ComponentModel.CollectionConverter", "CollectionConverter");
            feature.AddKnownType("System.ComponentModel.ComplexBindingPropertiesAttribute", "ComplexBindingPropertiesAttribute");
            feature.AddKnownType("System.ComponentModel.Component", "Component");
            feature.AddKnownType("System.ComponentModel.ComponentCollection", "ComponentCollection");
            feature.AddKnownType("System.ComponentModel.ComponentConverter", "ComponentConverter");
            feature.AddKnownType("System.ComponentModel.ComponentResourceManager", "ComponentResourceManager");
            feature.AddKnownType("System.ComponentModel.Container", "Container");
            feature.AddKnownType("System.ComponentModel.ContainerFilterService", "ContainerFilterService");
            feature.AddKnownType("System.ComponentModel.CultureInfoConverter", "CultureInfoConverter");
            feature.AddKnownType("System.ComponentModel.CustomTypeDescriptor", "CustomTypeDescriptor");
            feature.AddKnownType("System.ComponentModel.DataErrorsChangedEventArgs", "DataErrorsChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.DataObjectAttribute", "DataObjectAttribute");
            feature.AddKnownType("System.ComponentModel.DataObjectFieldAttribute", "DataObjectFieldAttribute");
            feature.AddKnownType("System.ComponentModel.DataObjectMethodAttribute", "DataObjectMethodAttribute");
            feature.AddKnownType("System.ComponentModel.DataObjectMethodType", "DataObjectMethodType");
            feature.AddKnownType("System.ComponentModel.DateTimeConverter", "DateTimeConverter");
            feature.AddKnownType("System.ComponentModel.DateTimeOffsetConverter", "DateTimeOffsetConverter");
            feature.AddKnownType("System.ComponentModel.DecimalConverter", "DecimalConverter");
            feature.AddKnownType("System.ComponentModel.DefaultBindingPropertyAttribute", "DefaultBindingPropertyAttribute");
            feature.AddKnownType("System.ComponentModel.DefaultEventAttribute", "DefaultEventAttribute");
            feature.AddKnownType("System.ComponentModel.DefaultPropertyAttribute", "DefaultPropertyAttribute");
            feature.AddKnownType("System.ComponentModel.DefaultValueAttribute", "DefaultValueAttribute");
            feature.AddKnownType("System.ComponentModel.DelegatingTypeDescriptionProvider", "DelegatingTypeDescriptionProvider");
            feature.AddKnownType("System.ComponentModel.DescriptionAttribute", "DescriptionAttribute");
            feature.AddKnownType("System.ComponentModel.DesignerAttribute", "DesignerAttribute");
            feature.AddKnownType("System.ComponentModel.DesignerCategoryAttribute", "DesignerCategoryAttribute");
            feature.AddKnownType("System.ComponentModel.DesignerSerializationVisibility", "DesignerSerializationVisibility");
            feature.AddKnownType("System.ComponentModel.DesignerSerializationVisibilityAttribute", "DesignerSerializationVisibilityAttribute");
            feature.AddKnownType("System.ComponentModel.DesignOnlyAttribute", "DesignOnlyAttribute");
            feature.AddKnownType("System.ComponentModel.DesignTimeVisibleAttribute", "DesignTimeVisibleAttribute");
            feature.AddKnownType("System.ComponentModel.DisplayNameAttribute", "DisplayNameAttribute");
            feature.AddKnownType("System.ComponentModel.DoubleConverter", "DoubleConverter");
            feature.AddKnownType("System.ComponentModel.DoWorkEventArgs", "DoWorkEventArgs");
            feature.AddKnownType("System.ComponentModel.EditorAttribute", "EditorAttribute");
            feature.AddKnownType("System.ComponentModel.EditorBrowsableAttribute", "EditorBrowsableAttribute");
            feature.AddKnownType("System.ComponentModel.EditorBrowsableState", "EditorBrowsableState");
            feature.AddKnownType("System.ComponentModel.EnumConverter", "EnumConverter");
            feature.AddKnownType("System.ComponentModel.EventDescriptor", "EventDescriptor");
            feature.AddKnownType("System.ComponentModel.EventDescriptorCollection", "EventDescriptorCollection");
            feature.AddKnownType("System.ComponentModel.EventHandlerList", "EventHandlerList");
            feature.AddKnownType("System.ComponentModel.ExpandableObjectConverter", "ExpandableObjectConverter");
            feature.AddKnownType("System.ComponentModel.ExtendedPropertyDescriptor", "ExtendedPropertyDescriptor");
            feature.AddKnownType("System.ComponentModel.ExtenderProvidedPropertyAttribute", "ExtenderProvidedPropertyAttribute");
            feature.AddKnownType("System.ComponentModel.GuidConverter", "GuidConverter");
            feature.AddKnownType("System.ComponentModel.HandledEventArgs", "HandledEventArgs");
            feature.AddKnownType("System.ComponentModel.IBindingList", "IBindingList");
            feature.AddKnownType("System.ComponentModel.IBindingListView", "IBindingListView");
            feature.AddKnownType("System.ComponentModel.ICancelAddNew", "ICancelAddNew");
            feature.AddKnownType("System.ComponentModel.IChangeTracking", "IChangeTracking");
            feature.AddKnownType("System.ComponentModel.IComNativeDescriptorHandler", "IComNativeDescriptorHandler");
            feature.AddKnownType("System.ComponentModel.IComponent", "IComponent");
            feature.AddKnownType("System.ComponentModel.IContainer", "IContainer");
            feature.AddKnownType("System.ComponentModel.ICustomTypeDescriptor", "ICustomTypeDescriptor");
            feature.AddKnownType("System.ComponentModel.IDataErrorInfo", "IDataErrorInfo");
            feature.AddKnownType("System.ComponentModel.IEditableObject", "IEditableObject");
            feature.AddKnownType("System.ComponentModel.IExtenderProvider", "IExtenderProvider");
            feature.AddKnownType("System.ComponentModel.IIntellisenseBuilder", "IIntellisenseBuilder");
            feature.AddKnownType("System.ComponentModel.IListSource", "IListSource");
            feature.AddKnownType("System.ComponentModel.ImmutableObjectAttribute", "ImmutableObjectAttribute");
            feature.AddKnownType("System.ComponentModel.INestedContainer", "INestedContainer");
            feature.AddKnownType("System.ComponentModel.INestedSite", "INestedSite");
            feature.AddKnownType("System.ComponentModel.InitializationEventAttribute", "InitializationEventAttribute");
            feature.AddKnownType("System.ComponentModel.INotifyDataErrorInfo", "INotifyDataErrorInfo");
            feature.AddKnownType("System.ComponentModel.INotifyPropertyChanged", "INotifyPropertyChanged");
            feature.AddKnownType("System.ComponentModel.INotifyPropertyChanging", "INotifyPropertyChanging");
            feature.AddKnownType("System.ComponentModel.InstallerTypeAttribute", "InstallerTypeAttribute");
            feature.AddKnownType("System.ComponentModel.InstanceCreationEditor", "InstanceCreationEditor");
            feature.AddKnownType("System.ComponentModel.Int16Converter", "Int16Converter");
            feature.AddKnownType("System.ComponentModel.Int32Converter", "Int32Converter");
            feature.AddKnownType("System.ComponentModel.Int64Converter", "Int64Converter");
            feature.AddKnownType("System.ComponentModel.InvalidAsynchronousStateException", "InvalidAsynchronousStateException");
            feature.AddKnownType("System.ComponentModel.InvalidEnumArgumentException", "InvalidEnumArgumentException");
            feature.AddKnownType("System.ComponentModel.IRaiseItemChangedEvents", "IRaiseItemChangedEvents");
            feature.AddKnownType("System.ComponentModel.IRevertibleChangeTracking", "IRevertibleChangeTracking");
            feature.AddKnownType("System.ComponentModel.ISite", "ISite");
            feature.AddKnownType("System.ComponentModel.ISupportInitialize", "ISupportInitialize");
            feature.AddKnownType("System.ComponentModel.ISupportInitializeNotification", "ISupportInitializeNotification");
            feature.AddKnownType("System.ComponentModel.ISynchronizeInvoke", "ISynchronizeInvoke");
            feature.AddKnownType("System.ComponentModel.ITypeDescriptorContext", "ITypeDescriptorContext");
            feature.AddKnownType("System.ComponentModel.ITypedList", "ITypedList");
            feature.AddKnownType("System.ComponentModel.License", "License");
            feature.AddKnownType("System.ComponentModel.LicenseContext", "LicenseContext");
            feature.AddKnownType("System.ComponentModel.LicenseException", "LicenseException");
            feature.AddKnownType("System.ComponentModel.LicenseManager", "LicenseManager");
            feature.AddKnownType("System.ComponentModel.LicenseProvider", "LicenseProvider");
            feature.AddKnownType("System.ComponentModel.LicenseProviderAttribute", "LicenseProviderAttribute");
            feature.AddKnownType("System.ComponentModel.LicenseUsageMode", "LicenseUsageMode");
            feature.AddKnownType("System.ComponentModel.LicFileLicenseProvider", "LicFileLicenseProvider");
            feature.AddKnownType("System.ComponentModel.ListBindableAttribute", "ListBindableAttribute");
            feature.AddKnownType("System.ComponentModel.ListChangedEventArgs", "ListChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.ListChangedType", "ListChangedType");
            feature.AddKnownType("System.ComponentModel.ListSortDescription", "ListSortDescription");
            feature.AddKnownType("System.ComponentModel.ListSortDescriptionCollection", "ListSortDescriptionCollection");
            feature.AddKnownType("System.ComponentModel.ListSortDirection", "ListSortDirection");
            feature.AddKnownType("System.ComponentModel.LocalizableAttribute", "LocalizableAttribute");
            feature.AddKnownType("System.ComponentModel.LookupBindingPropertiesAttribute", "LookupBindingPropertiesAttribute");
            feature.AddKnownType("System.ComponentModel.MarshalByValueComponent", "MarshalByValueComponent");
            feature.AddKnownType("System.ComponentModel.MaskedTextProvider", "MaskedTextProvider");
            feature.AddKnownType("System.ComponentModel.MaskedTextResultHint", "MaskedTextResultHint");
            feature.AddKnownType("System.ComponentModel.MemberDescriptor", "MemberDescriptor");
            feature.AddKnownType("System.ComponentModel.MergablePropertyAttribute", "MergablePropertyAttribute");
            feature.AddKnownType("System.ComponentModel.MultilineStringConverter", "MultilineStringConverter");
            feature.AddKnownType("System.ComponentModel.NestedContainer", "NestedContainer");
            feature.AddKnownType("System.ComponentModel.NullableConverter", "NullableConverter");
            feature.AddKnownType("System.ComponentModel.PasswordPropertyTextAttribute", "PasswordPropertyTextAttribute");
            feature.AddKnownType("System.ComponentModel.ProgressChangedEventArgs", "ProgressChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.PropertyChangedEventArgs", "PropertyChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.PropertyChangingEventArgs", "PropertyChangingEventArgs");
            feature.AddKnownType("System.ComponentModel.PropertyDescriptor", "PropertyDescriptor");
            feature.AddKnownType("System.ComponentModel.PropertyDescriptorCollection", "PropertyDescriptorCollection");
            feature.AddKnownType("System.ComponentModel.ProvidePropertyAttribute", "ProvidePropertyAttribute");
            feature.AddKnownType("System.ComponentModel.ReadOnlyAttribute", "ReadOnlyAttribute");
            feature.AddKnownType("System.ComponentModel.RecommendedAsConfigurableAttribute", "RecommendedAsConfigurableAttribute");
            feature.AddKnownType("System.ComponentModel.ReferenceConverter", "ReferenceConverter");
            feature.AddKnownType("System.ComponentModel.ReflectEventDescriptor", "ReflectEventDescriptor");
            feature.AddKnownType("System.ComponentModel.ReflectPropertyDescriptor", "ReflectPropertyDescriptor");
            feature.AddKnownType("System.ComponentModel.ReflectTypeDescriptionProvider", "ReflectTypeDescriptionProvider");
            feature.AddKnownType("System.ComponentModel.RefreshEventArgs", "RefreshEventArgs");
            feature.AddKnownType("System.ComponentModel.RunInstallerAttribute", "RunInstallerAttribute");
            feature.AddKnownType("System.ComponentModel.RunWorkerCompletedEventArgs", "RunWorkerCompletedEventArgs");
            feature.AddKnownType("System.ComponentModel.SByteConverter", "SByteConverter");
            feature.AddKnownType("System.ComponentModel.SettingsBindableAttribute", "SettingsBindableAttribute");
            feature.AddKnownType("System.ComponentModel.SingleConverter", "SingleConverter");
            feature.AddKnownType("System.ComponentModel.StringConverter", "StringConverter");
            feature.AddKnownType("System.ComponentModel.TimeSpanConverter", "TimeSpanConverter");
            feature.AddKnownType("System.ComponentModel.ToolboxItemFilterAttribute", "ToolboxItemFilterAttribute");
            feature.AddKnownType("System.ComponentModel.ToolboxItemFilterType", "ToolboxItemFilterType");
            feature.AddKnownType("System.ComponentModel.TypeConverter", "TypeConverter");
            feature.AddKnownType("System.ComponentModel.TypeConverter+SimplePropertyDescriptor", "SimplePropertyDescriptor");
            feature.AddKnownType("System.ComponentModel.TypeConverter+StandardValuesCollection", "TypeConverter.StandardValuesCollection");
            feature.AddKnownType("System.ComponentModel.TypeConverterAttribute", "TypeConverterAttribute");
            feature.AddKnownType("System.ComponentModel.TypeDescriptionProvider", "TypeDescriptionProvider");
            feature.AddKnownType("System.ComponentModel.TypeDescriptionProviderAttribute", "TypeDescriptionProviderAttribute");
            feature.AddKnownType("System.ComponentModel.TypeDescriptor", "TypeDescriptor");
            feature.AddKnownType("System.ComponentModel.TypeListConverter", "TypeListConverter");
            feature.AddKnownType("System.ComponentModel.UInt16Converter", "UInt16Converter");
            feature.AddKnownType("System.ComponentModel.UInt32Converter", "UInt32Converter");
            feature.AddKnownType("System.ComponentModel.UInt64Converter", "UInt64Converter");
            feature.AddKnownType("System.ComponentModel.WarningException", "WarningException");
            feature.AddKnownType("System.ComponentModel.Win32Exception", "Win32Exception");
            feature.AddKnownType("System.ComponentModel.InheritanceAttribute", "InheritanceAttribute");
            feature.AddKnownType("System.ComponentModel.InheritanceLevel", "InheritanceLevel");
            feature.AddKnownType("System.ComponentModel.NotifyParentPropertyAttribute", "NotifyParentPropertyAttribute");
            feature.AddKnownType("System.ComponentModel.ParenthesizePropertyNameAttribute", "ParenthesizePropertyNameAttribute");
            feature.AddKnownType("System.ComponentModel.PropertyTabAttribute", "PropertyTabAttribute");
            feature.AddKnownType("System.ComponentModel.PropertyTabScope", "PropertyTabScope");
            feature.AddKnownType("System.ComponentModel.RefreshProperties", "RefreshProperties");
            feature.AddKnownType("System.ComponentModel.RefreshPropertiesAttribute", "RefreshPropertiesAttribute");
            feature.AddKnownType("System.ComponentModel.ToolboxItemAttribute", "ToolboxItemAttribute");
            feature.AddKnownType("System.ComponentModel.WeakHashtable", "WeakHashtable");
            feature.AddKnownType("System.ComponentModel.Design.TypeDescriptionProviderService", "TypeDescriptionProviderService");
            feature.AddKnownType("System.ComponentModel.Design.ActiveDesignerEventArgs", "ActiveDesignerEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.CheckoutException", "CheckoutException");
            feature.AddKnownType("System.ComponentModel.Design.CommandID", "CommandID");
            feature.AddKnownType("System.ComponentModel.Design.ComponentChangedEventArgs", "ComponentChangedEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.ComponentChangingEventArgs", "ComponentChangingEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.ComponentEventArgs", "ComponentEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.ComponentRenameEventArgs", "ComponentRenameEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.DesignerOptionService", "DesignerOptionService");
            feature.AddKnownType("System.ComponentModel.Design.DesignerOptionService+DesignerOptionCollection", "DesignerOptionService.DesignerOptionCollection");
            feature.AddKnownType("System.ComponentModel.Design.DesignerOptionService+DesignerOptionConverter", "DesignerOptionConverter");
            feature.AddKnownType("System.ComponentModel.Design.DesignerTransaction", "DesignerTransaction");
            feature.AddKnownType("System.ComponentModel.Design.DesignerTransactionCloseEventArgs", "DesignerTransactionCloseEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.DesignerVerb", "DesignerVerb");
            feature.AddKnownType("System.ComponentModel.Design.DesignerVerbCollection", "DesignerVerbCollection");
            feature.AddKnownType("System.ComponentModel.Design.DesigntimeLicenseContext", "DesigntimeLicenseContext");
            feature.AddKnownType("System.ComponentModel.Design.RuntimeLicenseContext", "RuntimeLicenseContext");
            feature.AddKnownType("System.ComponentModel.Design.DesigntimeLicenseContextSerializer", "DesigntimeLicenseContextSerializer");
            feature.AddKnownType("System.ComponentModel.Design.DesignerCollection", "DesignerCollection");
            feature.AddKnownType("System.ComponentModel.Design.DesignerEventArgs", "DesignerEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.HelpContextType", "HelpContextType");
            feature.AddKnownType("System.ComponentModel.Design.HelpKeywordAttribute", "HelpKeywordAttribute");
            feature.AddKnownType("System.ComponentModel.Design.HelpKeywordType", "HelpKeywordType");
            feature.AddKnownType("System.ComponentModel.Design.IComponentChangeService", "IComponentChangeService");
            feature.AddKnownType("System.ComponentModel.Design.IComponentDiscoveryService", "IComponentDiscoveryService");
            feature.AddKnownType("System.ComponentModel.Design.IComponentInitializer", "IComponentInitializer");
            feature.AddKnownType("System.ComponentModel.Design.IDesigner", "IDesigner");
            feature.AddKnownType("System.ComponentModel.Design.IDesignerEventService", "IDesignerEventService");
            feature.AddKnownType("System.ComponentModel.Design.IDesignerFilter", "IDesignerFilter");
            feature.AddKnownType("System.ComponentModel.Design.IDesignerHost", "IDesignerHost");
            feature.AddKnownType("System.ComponentModel.Design.IDesignerHostTransactionState", "IDesignerHostTransactionState");
            feature.AddKnownType("System.ComponentModel.Design.IDesignerOptionService", "IDesignerOptionService");
            feature.AddKnownType("System.ComponentModel.Design.IDictionaryService", "IDictionaryService");
            feature.AddKnownType("System.ComponentModel.Design.IEventBindingService", "IEventBindingService");
            feature.AddKnownType("System.ComponentModel.Design.IExtenderListService", "IExtenderListService");
            feature.AddKnownType("System.ComponentModel.Design.IExtenderProviderService", "IExtenderProviderService");
            feature.AddKnownType("System.ComponentModel.Design.IHelpService", "IHelpService");
            feature.AddKnownType("System.ComponentModel.Design.IInheritanceService", "IInheritanceService");
            feature.AddKnownType("System.ComponentModel.Design.IMenuCommandService", "IMenuCommandService");
            feature.AddKnownType("System.ComponentModel.Design.IReferenceService", "IReferenceService");
            feature.AddKnownType("System.ComponentModel.Design.IResourceService", "IResourceService");
            feature.AddKnownType("System.ComponentModel.Design.IRootDesigner", "IRootDesigner");
            feature.AddKnownType("System.ComponentModel.Design.ISelectionService", "ISelectionService");
            feature.AddKnownType("System.ComponentModel.Design.IServiceContainer", "IServiceContainer");
            feature.AddKnownType("System.ComponentModel.Design.ITreeDesigner", "ITreeDesigner");
            feature.AddKnownType("System.ComponentModel.Design.ITypeDescriptorFilterService", "ITypeDescriptorFilterService");
            feature.AddKnownType("System.ComponentModel.Design.ITypeDiscoveryService", "ITypeDiscoveryService");
            feature.AddKnownType("System.ComponentModel.Design.ITypeResolutionService", "ITypeResolutionService");
            feature.AddKnownType("System.ComponentModel.Design.MenuCommand", "MenuCommand");
            feature.AddKnownType("System.ComponentModel.Design.SelectionTypes", "SelectionTypes");
            feature.AddKnownType("System.ComponentModel.Design.ServiceContainer", "ServiceContainer");
            feature.AddKnownType("System.ComponentModel.Design.StandardCommands", "StandardCommands");
            feature.AddKnownType("System.ComponentModel.Design.StandardToolWindows", "StandardToolWindows");
            feature.AddKnownType("System.ComponentModel.Design.ViewTechnology", "ViewTechnology");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.ComponentSerializationService", "ComponentSerializationService");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.ContextStack", "ContextStack");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute", "DefaultSerializationProviderAttribute");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.DesignerLoader", "DesignerLoader");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.DesignerSerializerAttribute", "DesignerSerializerAttribute");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerLoaderHost", "IDesignerLoaderHost");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerLoaderHost2", "IDesignerLoaderHost2");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerLoaderService", "IDesignerLoaderService");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerSerializationManager", "IDesignerSerializationManager");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerSerializationProvider", "IDesignerSerializationProvider");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.IDesignerSerializationService", "IDesignerSerializationService");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.INameCreationService", "INameCreationService");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.InstanceDescriptor", "InstanceDescriptor");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.MemberRelationshipService", "MemberRelationshipService");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.MemberRelationship", "MemberRelationship");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.ResolveNameEventArgs", "ResolveNameEventArgs");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute", "RootDesignerSerializerAttribute");
            feature.AddKnownType("System.ComponentModel.Design.Serialization.SerializationStore", "SerializationStore");
            feature.AddKnownType("System.Configuration.SchemeSettingElement", "SchemeSettingElement");
            feature.AddKnownType("System.Configuration.SchemeSettingInternal", "SchemeSettingInternal");
            feature.AddKnownType("System.Configuration.SchemeSettingElementCollection", "SchemeSettingElementCollection");
            feature.AddKnownType("System.Configuration.UriSectionData", "UriSectionData");
            feature.AddKnownType("System.Configuration.UriSectionReader", "UriSectionReader");
            feature.AddKnownType("System.Configuration.UriSection", "UriSection");
            feature.AddKnownType("System.Configuration.UriSectionInternal", "UriSectionInternal");
            feature.AddKnownType("System.Configuration.IriParsingElement", "IriParsingElement");
            feature.AddKnownType("System.Configuration.IdnElement", "IdnElement");
            feature.AddKnownType("System.Configuration.ApplicationSettingsBase", "ApplicationSettingsBase");
            feature.AddKnownType("System.Configuration.SettingChangingEventArgs", "SettingChangingEventArgs");
            feature.AddKnownType("System.Configuration.SettingsLoadedEventArgs", "SettingsLoadedEventArgs");
            feature.AddKnownType("System.Configuration.ClientSettingsStore", "ClientSettingsStore");
            feature.AddKnownType("System.Configuration.StoredSetting", "StoredSetting");
            feature.AddKnownType("System.Configuration.ConfigurationException", "ConfigurationException");
            feature.AddKnownType("System.Configuration.ConfigurationSettings", "ConfigurationSettings");
            feature.AddKnownType("System.Configuration.ConfigXmlAttribute", "ConfigXmlAttribute");
            feature.AddKnownType("System.Configuration.ConfigXmlCDataSection", "ConfigXmlCDataSection");
            feature.AddKnownType("System.Configuration.ConfigXmlComment", "ConfigXmlComment");
            feature.AddKnownType("System.Configuration.ConfigXmlDocument", "ConfigXmlDocument");
            feature.AddKnownType("System.Configuration.ConfigXmlElement", "ConfigXmlElement");
            feature.AddKnownType("System.Configuration.ConfigXmlSignificantWhitespace", "ConfigXmlSignificantWhitespace");
            feature.AddKnownType("System.Configuration.ConfigXmlText", "ConfigXmlText");
            feature.AddKnownType("System.Configuration.ConfigXmlWhitespace", "ConfigXmlWhitespace");
            feature.AddKnownType("System.Configuration.DictionarySectionHandler", "DictionarySectionHandler");
            feature.AddKnownType("System.Configuration.HandlerBase", "HandlerBase");
            feature.AddKnownType("System.Configuration.IApplicationSettingsProvider", "IApplicationSettingsProvider");
            feature.AddKnownType("System.Configuration.IConfigurationSectionHandler", "IConfigurationSectionHandler");
            feature.AddKnownType("System.Configuration.IConfigurationSystem", "IConfigurationSystem");
            feature.AddKnownType("System.Configuration.IgnoreSectionHandler", "IgnoreSectionHandler");
            feature.AddKnownType("System.Configuration.IPersistComponentSettings", "IPersistComponentSettings");
            feature.AddKnownType("System.Configuration.ISettingsProviderService", "ISettingsProviderService");
            feature.AddKnownType("System.Configuration.LocalFileSettingsProvider", "LocalFileSettingsProvider");
            feature.AddKnownType("System.Configuration.NameValueFileSectionHandler", "NameValueFileSectionHandler");
            feature.AddKnownType("System.Configuration.NameValueSectionHandler", "NameValueSectionHandler");
            feature.AddKnownType("System.Configuration.ReadOnlyNameValueCollection", "ReadOnlyNameValueCollection");
            feature.AddKnownType("System.Configuration.SettingsAttributeDictionary", "SettingsAttributeDictionary");
            feature.AddKnownType("System.Configuration.ApplicationScopedSettingAttribute", "ApplicationScopedSettingAttribute");
            feature.AddKnownType("System.Configuration.DefaultSettingValueAttribute", "DefaultSettingValueAttribute");
            feature.AddKnownType("System.Configuration.NoSettingsVersionUpgradeAttribute", "NoSettingsVersionUpgradeAttribute");
            feature.AddKnownType("System.Configuration.SettingAttribute", "SettingAttribute");
            feature.AddKnownType("System.Configuration.SettingsDescriptionAttribute", "SettingsDescriptionAttribute");
            feature.AddKnownType("System.Configuration.SettingsGroupDescriptionAttribute", "SettingsGroupDescriptionAttribute");
            feature.AddKnownType("System.Configuration.SettingsGroupNameAttribute", "SettingsGroupNameAttribute");
            feature.AddKnownType("System.Configuration.SettingsManageabilityAttribute", "SettingsManageabilityAttribute");
            feature.AddKnownType("System.Configuration.SettingsProviderAttribute", "SettingsProviderAttribute");
            feature.AddKnownType("System.Configuration.SettingsSerializeAsAttribute", "SettingsSerializeAsAttribute");
            feature.AddKnownType("System.Configuration.SpecialSettingAttribute", "SpecialSettingAttribute");
            feature.AddKnownType("System.Configuration.UserScopedSettingAttribute", "UserScopedSettingAttribute");
            feature.AddKnownType("System.Configuration.SettingsManageability", "SettingsManageability");
            feature.AddKnownType("System.Configuration.SpecialSetting", "SpecialSetting");
            feature.AddKnownType("System.Configuration.SettingsBase", "SettingsBase");
            feature.AddKnownType("System.Configuration.SettingsContext", "SettingsContext");
            feature.AddKnownType("System.Configuration.SettingsProperty", "SettingsProperty");
            feature.AddKnownType("System.Configuration.SettingsPropertyCollection", "SettingsPropertyCollection");
            feature.AddKnownType("System.Configuration.SettingsPropertyIsReadOnlyException", "SettingsPropertyIsReadOnlyException");
            feature.AddKnownType("System.Configuration.SettingsPropertyNotFoundException", "SettingsPropertyNotFoundException");
            feature.AddKnownType("System.Configuration.SettingsPropertyValue", "SettingsPropertyValue");
            feature.AddKnownType("System.Configuration.SettingsPropertyValueCollection", "SettingsPropertyValueCollection");
            feature.AddKnownType("System.Configuration.SettingsPropertyWrongTypeException", "SettingsPropertyWrongTypeException");
            feature.AddKnownType("System.Configuration.SettingsProvider", "SettingsProvider");
            feature.AddKnownType("System.Configuration.SettingsProviderCollection", "SettingsProviderCollection");
            feature.AddKnownType("System.Configuration.SettingsSerializeAs", "SettingsSerializeAs");
            feature.AddKnownType("System.Configuration.SingleTagSectionHandler", "SingleTagSectionHandler");
            feature.AddKnownType("System.Configuration.ApplicationSettingsGroup", "ApplicationSettingsGroup");
            feature.AddKnownType("System.Configuration.UserSettingsGroup", "UserSettingsGroup");
            feature.AddKnownType("System.Configuration.ClientSettingsSection", "ClientSettingsSection");
            feature.AddKnownType("System.Configuration.SettingElementCollection", "SettingElementCollection");
            feature.AddKnownType("System.Configuration.SettingElement", "SettingElement");
            feature.AddKnownType("System.Configuration.SettingValueElement", "SettingValueElement");
            feature.AddKnownType("System.Configuration.AppSettingsReader", "AppSettingsReader");
            feature.AddKnownType("System.Configuration.Internal.ConfigurationManagerHelper", "ConfigurationManagerHelper");
            feature.AddKnownType("System.Diagnostics.AssertSection", "AssertSection");
            feature.AddKnownType("System.Diagnostics.MessageBoxPopup", "MessageBoxPopup");
            feature.AddKnownType("System.Diagnostics.BooleanSwitch", "BooleanSwitch");
            feature.AddKnownType("System.Diagnostics.ConsoleTraceListener", "ConsoleTraceListener");
            feature.AddKnownType("System.Diagnostics.CorrelationManager", "CorrelationManager");
            feature.AddKnownType("System.Diagnostics.DefaultTraceListener", "DefaultTraceListener");
            feature.AddKnownType("System.Diagnostics.DelimitedListTraceListener", "DelimitedListTraceListener");
            feature.AddKnownType("System.Diagnostics.InitState", "InitState");
            feature.AddKnownType("System.Diagnostics.FilterElement", "FilterElement");
            feature.AddKnownType("System.Diagnostics.ListenerElementsCollection", "ListenerElementsCollection");
            feature.AddKnownType("System.Diagnostics.SharedListenerElementsCollection", "SharedListenerElementsCollection");
            feature.AddKnownType("System.Diagnostics.ListenerElement", "ListenerElement");
            feature.AddKnownType("System.Diagnostics.PerfCounterSection", "PerfCounterSection");
            feature.AddKnownType("System.Diagnostics.EventTypeFilter", "EventTypeFilter");
            feature.AddKnownType("System.Diagnostics.SourceElementsCollection", "SourceElementsCollection");
            feature.AddKnownType("System.Diagnostics.SourceElement", "SourceElement");
            feature.AddKnownType("System.Diagnostics.SourceFilter", "SourceFilter");
            feature.AddKnownType("System.Diagnostics.SourceLevels", "SourceLevels");
            feature.AddKnownType("System.Diagnostics.SourceSwitch", "SourceSwitch");
            feature.AddKnownType("System.Diagnostics.Switch", "Switch");
            feature.AddKnownType("System.Diagnostics.SwitchAttribute", "SwitchAttribute");
            feature.AddKnownType("System.Diagnostics.SwitchElementsCollection", "SwitchElementsCollection");
            feature.AddKnownType("System.Diagnostics.SwitchElement", "SwitchElement");
            feature.AddKnownType("System.Diagnostics.SwitchLevelAttribute", "SwitchLevelAttribute");
            feature.AddKnownType("System.Diagnostics.SystemDiagnosticsSection", "SystemDiagnosticsSection");
            feature.AddKnownType("System.Diagnostics.TextWriterTraceListener", "TextWriterTraceListener");
            feature.AddKnownType("System.Diagnostics.Trace", "Trace");
            feature.AddKnownType("System.Diagnostics.TraceEventCache", "TraceEventCache");
            feature.AddKnownType("System.Diagnostics.TraceEventType", "TraceEventType");
            feature.AddKnownType("System.Diagnostics.TraceFilter", "TraceFilter");
            feature.AddKnownType("System.Diagnostics.TraceLevel", "TraceLevel");
            feature.AddKnownType("System.Diagnostics.TraceListener", "TraceListener");
            feature.AddKnownType("System.Diagnostics.TraceListenerCollection", "TraceListenerCollection");
            feature.AddKnownType("System.Diagnostics.TraceOptions", "TraceOptions");
            feature.AddKnownType("System.Diagnostics.TraceSection", "TraceSection");
            feature.AddKnownType("System.Diagnostics.TraceSource", "TraceSource");
            feature.AddKnownType("System.Diagnostics.TraceSwitch", "TraceSwitch");
            feature.AddKnownType("System.Diagnostics.TypedElement", "TypedElement");
            feature.AddKnownType("System.Diagnostics.XmlWriterTraceListener", "XmlWriterTraceListener");
            feature.AddKnownType("System.Diagnostics.AlphabeticalEnumConverter", "AlphabeticalEnumConverter");
            feature.AddKnownType("System.Diagnostics.AsyncStreamReader", "AsyncStreamReader");
            feature.AddKnownType("System.Diagnostics.CounterCreationData", "CounterCreationData");
            feature.AddKnownType("System.Diagnostics.CounterCreationDataCollection", "CounterCreationDataCollection");
            feature.AddKnownType("System.Diagnostics.CounterSample", "CounterSample");
            feature.AddKnownType("System.Diagnostics.DataReceivedEventArgs", "DataReceivedEventArgs");
            feature.AddKnownType("System.Diagnostics.DiagnosticsConfigurationHandler", "DiagnosticsConfigurationHandler");
            feature.AddKnownType("System.Diagnostics.SwitchesDictionarySectionHandler", "SwitchesDictionarySectionHandler");
            feature.AddKnownType("System.Diagnostics.EntryWrittenEventArgs", "EntryWrittenEventArgs");
            feature.AddKnownType("System.Diagnostics.EventInstance", "EventInstance");
            feature.AddKnownType("System.Diagnostics.EventLog", "EventLog");
            feature.AddKnownType("System.Diagnostics.EventLogInternal", "EventLogInternal");
            feature.AddKnownType("System.Diagnostics.EventLogEntry", "EventLogEntry");
            feature.AddKnownType("System.Diagnostics.EventLogEntryCollection", "EventLogEntryCollection");
            feature.AddKnownType("System.Diagnostics.EventLogEntryType", "EventLogEntryType");
            feature.AddKnownType("System.Diagnostics.EventLogPermission", "EventLogPermission");
            feature.AddKnownType("System.Diagnostics.EventLogPermissionAccess", "EventLogPermissionAccess");
            feature.AddKnownType("System.Diagnostics.EventLogPermissionAttribute", "EventLogPermissionAttribute");
            feature.AddKnownType("System.Diagnostics.EventLogPermissionEntry", "EventLogPermissionEntry");
            feature.AddKnownType("System.Diagnostics.EventLogPermissionEntryCollection", "EventLogPermissionEntryCollection");
            feature.AddKnownType("System.Diagnostics.EventLogTraceListener", "EventLogTraceListener");
            feature.AddKnownType("System.Diagnostics.EventSourceCreationData", "EventSourceCreationData");
            feature.AddKnownType("System.Diagnostics.FileVersionInfo", "FileVersionInfo");
            feature.AddKnownType("System.Diagnostics.ICollectData", "ICollectData");
            feature.AddKnownType("System.Diagnostics.InstanceData", "InstanceData");
            feature.AddKnownType("System.Diagnostics.InstanceDataCollection", "InstanceDataCollection");
            feature.AddKnownType("System.Diagnostics.InstanceDataCollectionCollection", "InstanceDataCollectionCollection");
            feature.AddKnownType("System.Diagnostics.MonitoringDescriptionAttribute", "MonitoringDescriptionAttribute");
            feature.AddKnownType("System.Diagnostics.OverflowAction", "OverflowAction");
            feature.AddKnownType("System.Diagnostics.PerformanceCounter", "PerformanceCounter");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterCategory", "PerformanceCounterCategory");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterCategoryOptions", "PerformanceCounterCategoryOptions");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterCategoryType", "PerformanceCounterCategoryType");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterInstanceLifetime", "PerformanceCounterInstanceLifetime");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterLib", "PerformanceCounterLib");
            feature.AddKnownType("System.Diagnostics.PerformanceMonitor", "PerformanceMonitor");
            feature.AddKnownType("System.Diagnostics.CategoryEntry", "CategoryEntry");
            feature.AddKnownType("System.Diagnostics.CategorySample", "CategorySample");
            feature.AddKnownType("System.Diagnostics.CounterDefinitionSample", "CounterDefinitionSample");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterManager", "PerformanceCounterManager");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterPermission", "PerformanceCounterPermission");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterPermissionAccess", "PerformanceCounterPermissionAccess");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterPermissionAttribute", "PerformanceCounterPermissionAttribute");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterPermissionEntry", "PerformanceCounterPermissionEntry");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterPermissionEntryCollection", "PerformanceCounterPermissionEntryCollection");
            feature.AddKnownType("System.Diagnostics.PerformanceCounterType", "PerformanceCounterType");
            feature.AddKnownType("System.Diagnostics.Process", "Process");
            feature.AddKnownType("System.Diagnostics.ProcessInfo", "ProcessInfo");
            feature.AddKnownType("System.Diagnostics.ThreadInfo", "ThreadInfo");
            feature.AddKnownType("System.Diagnostics.ModuleInfo", "ModuleInfo");
            feature.AddKnownType("System.Diagnostics.OrdinalCaseInsensitiveComparer", "OrdinalCaseInsensitiveComparer");
            feature.AddKnownType("System.Diagnostics.ProcessThreadTimes", "ProcessThreadTimes");
            feature.AddKnownType("System.Diagnostics.ShellExecuteHelper", "ShellExecuteHelper");
            feature.AddKnownType("System.Diagnostics.MainWindowFinder", "MainWindowFinder");
            feature.AddKnownType("System.Diagnostics.NtProcessInfoHelper+SystemProcessInformation", "SystemProcessInformation");
            feature.AddKnownType("System.Diagnostics.NtProcessInfoHelper+SystemThreadInformation", "SystemThreadInformation");
            feature.AddKnownType("System.Diagnostics.ProcessModule", "ProcessModule");
            feature.AddKnownType("System.Diagnostics.ProcessModuleCollection", "ProcessModuleCollection");
            feature.AddKnownType("System.Diagnostics.ProcessPriorityClass", "ProcessPriorityClass");
            feature.AddKnownType("System.Diagnostics.ProcessStartInfo", "ProcessStartInfo");
            feature.AddKnownType("System.Diagnostics.ProcessThread", "ProcessThread");
            feature.AddKnownType("System.Diagnostics.ProcessThreadCollection", "ProcessThreadCollection");
            feature.AddKnownType("System.Diagnostics.ProcessWaitHandle", "ProcessWaitHandle");
            feature.AddKnownType("System.Diagnostics.ProcessWindowStyle", "ProcessWindowStyle");
            feature.AddKnownType("System.Diagnostics.SharedPerformanceCounter", "SharedPerformanceCounter");
            feature.AddKnownType("System.Diagnostics.ProcessData", "ProcessData");
            feature.AddKnownType("System.Diagnostics.Stopwatch", "Stopwatch");
            feature.AddKnownType("System.Diagnostics.ThreadPriorityLevel", "ThreadPriorityLevel");
            feature.AddKnownType("System.Diagnostics.ThreadState", "ThreadState");
            feature.AddKnownType("System.Diagnostics.ThreadWaitReason", "ThreadWaitReason");
            feature.AddKnownType("System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute", "ExcludeFromCodeCoverageAttribute");
            feature.AddKnownType("System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute", "BitmapSuffixInSatelliteAssemblyAttribute");
            feature.AddKnownType("System.IO.InvalidDataException", "InvalidDataException");
            feature.AddKnownType("System.IO.NotifyFilters", "NotifyFilters");
            feature.AddKnownType("System.IO.ErrorEventArgs", "ErrorEventArgs");
            feature.AddKnownType("System.IO.FileSystemEventArgs", "FileSystemEventArgs");
            feature.AddKnownType("System.IO.FileSystemWatcher", "FileSystemWatcher");
            feature.AddKnownType("System.IO.InternalBufferOverflowException", "InternalBufferOverflowException");
            feature.AddKnownType("System.IO.IODescriptionAttribute", "IODescriptionAttribute");
            feature.AddKnownType("System.IO.RenamedEventArgs", "RenamedEventArgs");
            feature.AddKnownType("System.IO.WaitForChangedResult", "WaitForChangedResult");
            feature.AddKnownType("System.IO.WatcherChangeTypes", "WatcherChangeTypes");
            feature.AddKnownType("System.IO.Compression.BlockType", "BlockType");
            feature.AddKnownType("System.IO.Compression.CompressionMode", "CompressionMode");
            feature.AddKnownType("System.IO.Compression.CompressionTracingSwitchLevel", "CompressionTracingSwitchLevel");
            feature.AddKnownType("System.IO.Compression.CompressionTracingSwitch", "CompressionTracingSwitch");
            feature.AddKnownType("System.IO.Compression.CompressionLevel", "CompressionLevel");
            feature.AddKnownType("System.IO.Compression.CopyEncoder", "CopyEncoder");
            feature.AddKnownType("System.IO.Compression.DeflateInput", "DeflateInput");
            feature.AddKnownType("System.IO.Compression.DeflateInput+InputState", "InputState");
            feature.AddKnownType("System.IO.Compression.IDeflater", "IDeflater");
            feature.AddKnownType("System.IO.Compression.IInflater", "IInflater");
            feature.AddKnownType("System.IO.Compression.DeflaterManaged", "DeflaterManaged");
            feature.AddKnownType("System.IO.Compression.DeflaterZLib", "DeflaterZLib");
            feature.AddKnownType("System.IO.Compression.InflaterZlib", "InflaterZlib");
            feature.AddKnownType("System.IO.Compression.ZLibNative+FlushCode", "ZLibNative.FlushCode");
            feature.AddKnownType("System.IO.Compression.ZLibNative+ErrorCode", "ZLibNative.ErrorCode");
            feature.AddKnownType("System.IO.Compression.ZLibNative+CompressionLevel", "ZLibNative.CompressionLevel");
            feature.AddKnownType("System.IO.Compression.ZLibNative+CompressionStrategy", "ZLibNative.CompressionStrategy");
            feature.AddKnownType("System.IO.Compression.ZLibNative+CompressionMethod", "ZLibNative.CompressionMethod");
            feature.AddKnownType("System.IO.Compression.ZLibNative+ZStream", "ZStream");
            feature.AddKnownType("System.IO.Compression.ZLibNative+ZLibStreamHandle", "ZLibNative.ZLibStreamHandle");
            feature.AddKnownType("System.IO.Compression.ZLibNative+ZLibStreamHandle+State", "ZLibNative.ZLibStreamHandle.State");
            feature.AddKnownType("System.IO.Compression.ZLibException", "ZLibException");
            feature.AddKnownType("System.IO.Compression.DeflateStream", "DeflateStream");
            feature.AddKnownType("System.IO.Compression.DeflateStreamAsyncResult", "DeflateStreamAsyncResult");
            feature.AddKnownType("System.IO.Compression.FastEncoder", "FastEncoder");
            feature.AddKnownType("System.IO.Compression.FastEncoderWindow", "FastEncoderWindow");
            feature.AddKnownType("System.IO.Compression.IFileFormatWriter", "IFileFormatWriter");
            feature.AddKnownType("System.IO.Compression.IFileFormatReader", "IFileFormatReader");
            feature.AddKnownType("System.IO.Compression.GZipDecoder", "GZipDecoder");
            feature.AddKnownType("System.IO.Compression.GZipDecoder+GzipHeaderState", "GzipHeaderState");
            feature.AddKnownType("System.IO.Compression.GZipDecoder+GZipOptionalHeaderFlags", "GZipOptionalHeaderFlags");
            feature.AddKnownType("System.IO.Compression.GZipStream", "GZipStream");
            feature.AddKnownType("System.IO.Compression.GZipFormatter", "GZipFormatter");
            feature.AddKnownType("System.IO.Compression.HuffmanTree", "HuffmanTree");
            feature.AddKnownType("System.IO.Compression.Inflater", "Inflater");
            feature.AddKnownType("System.IO.Compression.InflaterState", "InflaterState");
            feature.AddKnownType("System.IO.Compression.InputBuffer", "InputBuffer");
            feature.AddKnownType("System.IO.Compression.Match", "Match");
            feature.AddKnownType("System.IO.Compression.OutputBuffer", "OutputBuffer");
            feature.AddKnownType("System.IO.Compression.OutputBuffer+BufferState", "BufferState");
            feature.AddKnownType("System.IO.Compression.OutputWindow", "OutputWindow");
            feature.AddKnownType("System.IO.Ports.Handshake", "Handshake");
            feature.AddKnownType("System.IO.Ports.Parity", "Parity");
            feature.AddKnownType("System.IO.Ports.SerialError", "SerialError");
            feature.AddKnownType("System.IO.Ports.SerialErrorReceivedEventArgs", "SerialErrorReceivedEventArgs");
            feature.AddKnownType("System.IO.Ports.SerialPinChange", "SerialPinChange");
            feature.AddKnownType("System.IO.Ports.SerialPinChangedEventArgs", "SerialPinChangedEventArgs");
            feature.AddKnownType("System.IO.Ports.SerialPort", "SerialPort");
            feature.AddKnownType("System.IO.Ports.SerialData", "SerialData");
            feature.AddKnownType("System.IO.Ports.SerialDataReceivedEventArgs", "SerialDataReceivedEventArgs");
            feature.AddKnownType("System.IO.Ports.SerialStream", "SerialStream");
            feature.AddKnownType("System.IO.Ports.SerialStream+EventLoopRunner", "EventLoopRunner");
            feature.AddKnownType("System.IO.Ports.SerialStream+SerialStreamAsyncResult", "SerialStreamAsyncResult");
            feature.AddKnownType("System.IO.Ports.StopBits", "StopBits");
            feature.AddKnownType("System.Media.SoundPlayer", "SoundPlayer");
            feature.AddKnownType("System.Media.SystemSounds", "SystemSounds");
            feature.AddKnownType("System.Media.SystemSound", "SystemSound");
            feature.AddKnownType("System.Net.IAuthenticationManager", "IAuthenticationManager");
            feature.AddKnownType("System.Net.ICredentialPolicy", "ICredentialPolicy");
            feature.AddKnownType("System.Net.AuthenticationManager", "AuthenticationManager");
            feature.AddKnownType("System.Net.AuthenticationManagerBase", "AuthenticationManagerBase");
            feature.AddKnownType("System.Net.AuthenticationManagerDefault", "AuthenticationManagerDefault");
            feature.AddKnownType("System.Net.AuthenticationManager2", "AuthenticationManager2");
            feature.AddKnownType("System.Net.AuthenticationSchemes", "AuthenticationSchemes");
            feature.AddKnownType("System.Net.Authorization", "Authorization");
            feature.AddKnownType("System.Net.BaseWebProxyFinder", "BaseWebProxyFinder");
            feature.AddKnownType("System.Net.BaseWebProxyFinder+AutoWebProxyState", "AutoWebProxyState");
            feature.AddKnownType("System.Net.CertPolicyValidationCallback", "CertPolicyValidationCallback");
            feature.AddKnownType("System.Net.ServerCertValidationCallback", "ServerCertValidationCallback");
            feature.AddKnownType("System.Net.ConnectionModes", "ConnectionModes");
            feature.AddKnownType("System.Net.ConnectionPool", "ConnectionPool");
            feature.AddKnownType("System.Net.InterlockedStack", "InterlockedStack");
            feature.AddKnownType("System.Net.ConnectionPoolManager", "ConnectionPoolManager");
            feature.AddKnownType("System.Net.CookieVariant", "CookieVariant");
            feature.AddKnownType("System.Net.Cookie", "Cookie");
            feature.AddKnownType("System.Net.CookieToken", "CookieToken");
            feature.AddKnownType("System.Net.CookieTokenizer", "CookieTokenizer");
            feature.AddKnownType("System.Net.CookieParser", "CookieParser");
            feature.AddKnownType("System.Net.Comparer", "Comparer");
            feature.AddKnownType("System.Net.CookieCollection", "CookieCollection");
            feature.AddKnownType("System.Net.CookieCollection+Stamp", "Stamp");
            feature.AddKnownType("System.Net.HeaderVariantInfo", "HeaderVariantInfo");
            feature.AddKnownType("System.Net.CookieContainer", "CookieContainer");
            feature.AddKnownType("System.Net.PathList", "PathList");
            feature.AddKnownType("System.Net.CookieException", "CookieException");
            feature.AddKnownType("System.Net.CredentialCache", "CredentialCache");
            feature.AddKnownType("System.Net.SystemNetworkCredential", "SystemNetworkCredential");
            feature.AddKnownType("System.Net.CredentialHostKey", "CredentialHostKey");
            feature.AddKnownType("System.Net.CredentialKey", "CredentialKey");
            feature.AddKnownType("System.Net.DnsEndPoint", "DnsEndPoint");
            feature.AddKnownType("System.Net.DnsPermissionAttribute", "DnsPermissionAttribute");
            feature.AddKnownType("System.Net.DnsPermission", "DnsPermission");
            feature.AddKnownType("System.Net.EndPoint", "EndPoint");
            feature.AddKnownType("System.Net.EntitySendFormat", "EntitySendFormat");
            feature.AddKnownType("System.Net.BoundaryType", "BoundaryType");
            feature.AddKnownType("System.Net.FileWebRequest", "FileWebRequest");
            feature.AddKnownType("System.Net.FileWebRequestCreator", "FileWebRequestCreator");
            feature.AddKnownType("System.Net.FileWebStream", "FileWebStream");
            feature.AddKnownType("System.Net.FileWebResponse", "FileWebResponse");
            feature.AddKnownType("System.Net.FtpStatusCode", "FtpStatusCode");
            feature.AddKnownType("System.Net.FtpOperation", "FtpOperation");
            feature.AddKnownType("System.Net.FtpMethodFlags", "FtpMethodFlags");
            feature.AddKnownType("System.Net.FtpMethodInfo", "FtpMethodInfo");
            feature.AddKnownType("System.Net.FtpWebRequest", "FtpWebRequest");
            feature.AddKnownType("System.Net.FtpWebRequestCreator", "FtpWebRequestCreator");
            feature.AddKnownType("System.Net.FtpWebResponse", "FtpWebResponse");
            feature.AddKnownType("System.Net.FtpWebResponse+EmptyStream", "EmptyStream");
            feature.AddKnownType("System.Net.GlobalProxySelection", "GlobalProxySelection");
            feature.AddKnownType("System.Net.HttpListenerBasicIdentity", "HttpListenerBasicIdentity");
            feature.AddKnownType("System.Net.RequestContextBase", "RequestContextBase");
            feature.AddKnownType("System.Net.AsyncRequestContext", "AsyncRequestContext");
            feature.AddKnownType("System.Net.SyncRequestContext", "SyncRequestContext");
            feature.AddKnownType("System.Net.HttpListener", "HttpListener");
            feature.AddKnownType("System.Net.HttpListenerContext", "HttpListenerContext");
            feature.AddKnownType("System.Net.HttpListenerException", "HttpListenerException");
            feature.AddKnownType("System.Net.ListenerPrefixEnumerator", "ListenerPrefixEnumerator");
            feature.AddKnownType("System.Net.HttpListenerPrefixCollection", "HttpListenerPrefixCollection");
            feature.AddKnownType("System.Net.ListenerClientCertState", "ListenerClientCertState");
            feature.AddKnownType("System.Net.ListenerClientCertAsyncResult", "ListenerClientCertAsyncResult");
            feature.AddKnownType("System.Net.HttpListenerRequest", "HttpListenerRequest");
            feature.AddKnownType("System.Net.HttpListenerRequestUriBuilder", "HttpListenerRequestUriBuilder");
            feature.AddKnownType("System.Net.HttpListenerResponse", "HttpListenerResponse");
            feature.AddKnownType("System.Net.HttpListenerTimeoutManager", "HttpListenerTimeoutManager");
            feature.AddKnownType("System.Net.HttpRequestHeader", "HttpRequestHeader");
            feature.AddKnownType("System.Net.HttpResponseHeader", "HttpResponseHeader");
            feature.AddKnownType("System.Net.HttpStatusCode", "HttpStatusCode");
            feature.AddKnownType("System.Net.HttpVersion", "HttpVersion");
            feature.AddKnownType("System.Net.DecompressionMethods", "DecompressionMethods");
            feature.AddKnownType("System.Net.HttpWebRequest", "HttpWebRequest");
            feature.AddKnownType("System.Net.RtcState", "RtcState");
            feature.AddKnownType("System.Net.RtcState+ControlChannelTriggerStatus", "ControlChannelTriggerStatus");
            feature.AddKnownType("System.Net.HttpWebResponse", "HttpWebResponse");
            feature.AddKnownType("System.Net.GZipWrapperStream", "GZipWrapperStream");
            feature.AddKnownType("System.Net.DeflateWrapperStream", "DeflateWrapperStream");
            feature.AddKnownType("System.Net.HybridWebProxyFinder", "HybridWebProxyFinder");
            feature.AddKnownType("System.Net.IAuthenticationModule", "IAuthenticationModule");
            feature.AddKnownType("System.Net.ICertificatePolicy", "ICertificatePolicy");
            feature.AddKnownType("System.Net.ICredentials", "ICredentials");
            feature.AddKnownType("System.Net.ICredentialsByHost", "ICredentialsByHost");
            feature.AddKnownType("System.Net.InternalException", "InternalException");
            feature.AddKnownType("System.Net.InterlockedGate", "InterlockedGate");
            feature.AddKnownType("System.Net.NetworkAddressChangePolled", "NetworkAddressChangePolled");
            feature.AddKnownType("System.Net.WindowsInstallationType", "WindowsInstallationType");
            feature.AddKnownType("System.Net.SecurityStatus", "SecurityStatus");
            feature.AddKnownType("System.Net.ContentTypeValues", "ContentTypeValues");
            feature.AddKnownType("System.Net.ContextAttribute", "ContextAttribute");
            feature.AddKnownType("System.Net.Endianness", "Endianness");
            feature.AddKnownType("System.Net.CredentialUse", "CredentialUse");
            feature.AddKnownType("System.Net.BufferType", "BufferType");
            feature.AddKnownType("System.Net.ChainPolicyType", "ChainPolicyType");
            feature.AddKnownType("System.Net.IgnoreCertProblem", "IgnoreCertProblem");
            feature.AddKnownType("System.Net.CertUsage", "CertUsage");
            feature.AddKnownType("System.Net.ChainPolicyParameter", "ChainPolicyParameter");
            feature.AddKnownType("System.Net.SSL_EXTRA_CERT_CHAIN_POLICY_PARA", "SSL_EXTRA_CERT_CHAIN_POLICY_PARA");
            feature.AddKnownType("System.Net.SSL_EXTRA_CERT_CHAIN_POLICY_PARA+U", "U");
            feature.AddKnownType("System.Net.ChainPolicyStatus", "ChainPolicyStatus");
            feature.AddKnownType("System.Net.CertEnhKeyUse", "CertEnhKeyUse");
            feature.AddKnownType("System.Net.CertUsageMatch", "CertUsageMatch");
            feature.AddKnownType("System.Net.ChainParameters", "ChainParameters");
            feature.AddKnownType("System.Net._CERT_CHAIN_ELEMENT", "_CERT_CHAIN_ELEMENT");
            feature.AddKnownType("System.Net.IssuerListInfoEx", "IssuerListInfoEx");
            feature.AddKnownType("System.Net.SecureCredential", "SecureCredential");
            feature.AddKnownType("System.Net.SecureCredential+Flags", "SecureCredential.Flags");
            feature.AddKnownType("System.Net.SecurityBufferStruct", "SecurityBufferStruct");
            feature.AddKnownType("System.Net.SecurityBuffer", "SecurityBuffer");
            feature.AddKnownType("System.Net.SecurityBufferDescriptor", "SecurityBufferDescriptor");
            feature.AddKnownType("System.Net.CertificateEncoding", "CertificateEncoding");
            feature.AddKnownType("System.Net.CertificateProblem", "CertificateProblem");
            feature.AddKnownType("System.Net.SecChannelBindings", "SecChannelBindings");
            feature.AddKnownType("System.Net.WebRequestPrefixElement", "WebRequestPrefixElement");
            feature.AddKnownType("System.Net.HttpRequestCreator", "HttpRequestCreator");
            feature.AddKnownType("System.Net.WebSocketHttpRequestCreator", "WebSocketHttpRequestCreator");
            feature.AddKnownType("System.Net.CoreResponseData", "CoreResponseData");
            feature.AddKnownType("System.Net.HttpWriteMode", "HttpWriteMode");
            feature.AddKnownType("System.Net.HttpBehaviour", "HttpBehaviour");
            feature.AddKnownType("System.Net.HttpProcessingResult", "HttpProcessingResult");
            feature.AddKnownType("System.Net.KnownHttpVerb", "KnownHttpVerb");
            feature.AddKnownType("System.Net.HttpProtocolUtils", "HttpProtocolUtils");
            feature.AddKnownType("System.Net.PolicyWrapper", "PolicyWrapper");
            feature.AddKnownType("System.Net.DefaultCertPolicy", "DefaultCertPolicy");
            feature.AddKnownType("System.Net.TriState", "TriState");
            feature.AddKnownType("System.Net.DefaultPorts", "DefaultPorts");
            feature.AddKnownType("System.Net.hostent", "hostent");
            feature.AddKnownType("System.Net.Blob", "Blob");
            feature.AddKnownType("System.Net.SplitWritesState", "SplitWritesState");
            feature.AddKnownType("System.Net.IPAddress", "IPAddress");
            feature.AddKnownType("System.Net.IPEndPoint", "IPEndPoint");
            feature.AddKnownType("System.Net.IPHostEntry", "IPHostEntry");
            feature.AddKnownType("System.Net.IWebProxy", "IWebProxy");
            feature.AddKnownType("System.Net.IWebProxyFinder", "IWebProxyFinder");
            feature.AddKnownType("System.Net.IWebRequestCreate", "IWebRequestCreate");
            feature.AddKnownType("System.Net.Logging", "Logging");
            feature.AddKnownType("System.Net.NetWebProxyFinder", "NetWebProxyFinder");
            feature.AddKnownType("System.Net.NetworkAccess", "NetworkAccess");
            feature.AddKnownType("System.Net.NetworkCredential", "NetworkCredential");
            feature.AddKnownType("System.Net.ProtocolViolationException", "ProtocolViolationException");
            feature.AddKnownType("System.Net.TransportContext", "TransportContext");
            feature.AddKnownType("System.Net.ConnectStreamContext", "ConnectStreamContext");
            feature.AddKnownType("System.Net.SslStreamContext", "SslStreamContext");
            feature.AddKnownType("System.Net.HttpListenerRequestContext", "HttpListenerRequestContext");
            feature.AddKnownType("System.Net.CachedTransportContext", "CachedTransportContext");
            feature.AddKnownType("System.Net.SecurityProtocolType", "SecurityProtocolType");
            feature.AddKnownType("System.Net.ServicePoint", "ServicePoint");
            feature.AddKnownType("System.Net.ServicePointManager", "ServicePointManager");
            feature.AddKnownType("System.Net.SocketAddress", "SocketAddress");
            feature.AddKnownType("System.Net.SocketPermissionAttribute", "SocketPermissionAttribute");
            feature.AddKnownType("System.Net.SocketPermission", "SocketPermission");
            feature.AddKnownType("System.Net.EndpointPermission", "EndpointPermission");
            feature.AddKnownType("System.Net.TransportType", "TransportType");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+FileCompletionNotificationModes", "FileCompletionNotificationModes");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+RasHelper", "RasHelper");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+WSAPROTOCOLCHAIN", "WSAPROTOCOLCHAIN");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+WSAPROTOCOL_INFO", "WSAPROTOCOL_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+ControlData", "ControlData");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+ControlDataIPv6", "ControlDataIPv6");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+WSAMsg", "WSAMsg");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+TransmitPacketsElementFlags", "TransmitPacketsElementFlags");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+TransmitPacketsElement", "TransmitPacketsElement");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+SOCKET_ADDRESS", "SOCKET_ADDRESS");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+SOCKET_ADDRESS_LIST", "SOCKET_ADDRESS_LIST");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+OSSOCK+TransmitFileBuffersStruct", "TransmitFileBuffersStruct");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+NativePKI+CRYPT_OBJID_BLOB", "CRYPT_OBJID_BLOB");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+NativePKI+CERT_EXTENSION", "CERT_EXTENSION");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+NativePKI+CERT_SELECT_CRITERIA", "CERT_SELECT_CRITERIA");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+WinHttp+WINHTTP_CURRENT_USER_IE_PROXY_CONFIG", "WINHTTP_CURRENT_USER_IE_PROXY_CONFIG");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+WinHttp+AutoProxyFlags", "AutoProxyFlags");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+WinHttp+AccessType", "AccessType");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+WinHttp+AutoDetectType", "AutoDetectType");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+WinHttp+WINHTTP_AUTOPROXY_OPTIONS", "WINHTTP_AUTOPROXY_OPTIONS");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+WinHttp+WINHTTP_PROXY_INFO", "WINHTTP_PROXY_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+WinHttp+ErrorCodes", "ErrorCodes");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HeapAllocHandle", "HeapAllocHandle");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_API_VERSION", "HTTP_API_VERSION");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SERVER_PROPERTY", "HTTP_SERVER_PROPERTY");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_INFO_TYPE", "HTTP_REQUEST_INFO_TYPE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_INFO_TYPE", "HTTP_RESPONSE_INFO_TYPE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_TIMEOUT_TYPE", "HTTP_TIMEOUT_TYPE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_VERSION", "HTTP_VERSION");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_KNOWN_HEADER", "HTTP_KNOWN_HEADER");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_DATA_CHUNK", "HTTP_DATA_CHUNK");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTPAPI_VERSION", "HTTPAPI_VERSION");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_COOKED_URL", "HTTP_COOKED_URL");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+SOCKADDR", "SOCKADDR");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_TRANSPORT_ADDRESS", "HTTP_TRANSPORT_ADDRESS");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SSL_CLIENT_CERT_INFO", "HTTP_SSL_CLIENT_CERT_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SERVICE_BINDING_TYPE", "HTTP_SERVICE_BINDING_TYPE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SERVICE_BINDING_BASE", "HTTP_SERVICE_BINDING_BASE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_CHANNEL_BIND_STATUS", "HTTP_REQUEST_CHANNEL_BIND_STATUS");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_UNKNOWN_HEADER", "HTTP_UNKNOWN_HEADER");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_SSL_INFO", "HTTP_SSL_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_HEADERS", "HTTP_RESPONSE_HEADERS");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_HEADERS", "HTTP_REQUEST_HEADERS");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_VERB", "HTTP_VERB");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_DATA_CHUNK_TYPE", "HTTP_DATA_CHUNK_TYPE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_INFO", "HTTP_RESPONSE_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE", "HTTP_RESPONSE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_INFO", "HTTP_REQUEST_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST", "HTTP_REQUEST");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_V2", "HTTP_REQUEST_V2");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_TIMEOUT_LIMIT_INFO", "HTTP_TIMEOUT_LIMIT_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_BINDING_INFO", "HTTP_BINDING_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_TOKEN_BINDING_INFO", "HTTP_REQUEST_TOKEN_BINDING_INFO");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_REQUEST_TOKEN_BINDING_INFO_V1", "HTTP_REQUEST_TOKEN_BINDING_INFO_V1");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_HASH_ALGORITHM_V1", "TOKENBINDING_HASH_ALGORITHM_V1");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_SIGNATURE_ALGORITHM_V1", "TOKENBINDING_SIGNATURE_ALGORITHM_V1");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_TYPE", "TOKENBINDING_TYPE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_EXTENSION_FORMAT", "TOKENBINDING_EXTENSION_FORMAT");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_KEY_PARAMETERS_TYPE", "TOKENBINDING_KEY_PARAMETERS_TYPE");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_IDENTIFIER", "TOKENBINDING_IDENTIFIER");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_IDENTIFIER_V1", "TOKENBINDING_IDENTIFIER_V1");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_RESULT_DATA", "TOKENBINDING_RESULT_DATA");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_RESULT_DATA_V1", "TOKENBINDING_RESULT_DATA_V1");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_RESULT_LIST", "TOKENBINDING_RESULT_LIST");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+TOKENBINDING_RESULT_LIST_V1", "TOKENBINDING_RESULT_LIST_V1");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_FLAGS", "HTTP_FLAGS");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+HttpApi+HTTP_RESPONSE_HEADER_ID+Enum", "Enum");
            feature.AddKnownType("System.Net.UnsafeNclNativeMethods+AppXHelper", "AppXHelper");
            feature.AddKnownType("System.Net.WebClient", "WebClient");
            feature.AddKnownType("System.Net.OpenReadCompletedEventArgs", "OpenReadCompletedEventArgs");
            feature.AddKnownType("System.Net.OpenWriteCompletedEventArgs", "OpenWriteCompletedEventArgs");
            feature.AddKnownType("System.Net.DownloadStringCompletedEventArgs", "DownloadStringCompletedEventArgs");
            feature.AddKnownType("System.Net.DownloadDataCompletedEventArgs", "DownloadDataCompletedEventArgs");
            feature.AddKnownType("System.Net.UploadStringCompletedEventArgs", "UploadStringCompletedEventArgs");
            feature.AddKnownType("System.Net.UploadDataCompletedEventArgs", "UploadDataCompletedEventArgs");
            feature.AddKnownType("System.Net.UploadFileCompletedEventArgs", "UploadFileCompletedEventArgs");
            feature.AddKnownType("System.Net.UploadValuesCompletedEventArgs", "UploadValuesCompletedEventArgs");
            feature.AddKnownType("System.Net.DownloadProgressChangedEventArgs", "DownloadProgressChangedEventArgs");
            feature.AddKnownType("System.Net.UploadProgressChangedEventArgs", "UploadProgressChangedEventArgs");
            feature.AddKnownType("System.Net.WebException", "WebException");
            feature.AddKnownType("System.Net.WebExceptionInternalStatus", "WebExceptionInternalStatus");
            feature.AddKnownType("System.Net.WebExceptionStatus", "WebExceptionStatus");
            feature.AddKnownType("System.Net.WebHeaderCollectionType", "WebHeaderCollectionType");
            feature.AddKnownType("System.Net.WebHeaderCollection", "WebHeaderCollection");
            feature.AddKnownType("System.Net.CaseInsensitiveAscii", "CaseInsensitiveAscii");
            feature.AddKnownType("System.Net.HostHeaderString", "HostHeaderString");
            feature.AddKnownType("System.Net.WebPermissionAttribute", "WebPermissionAttribute");
            feature.AddKnownType("System.Net.DelayedRegex", "DelayedRegex");
            feature.AddKnownType("System.Net.WebPermission", "WebPermission");
            feature.AddKnownType("System.Net.WebProxyData", "WebProxyData");
            feature.AddKnownType("System.Net.WebProxy", "WebProxy");
            feature.AddKnownType("System.Net.WebRequest", "WebRequest");
            feature.AddKnownType("System.Net.WebRequest+DesignerWebRequestCreate", "DesignerWebRequestCreate");
            feature.AddKnownType("System.Net.WebRequest+WebProxyWrapperOpaque", "WebProxyWrapperOpaque");
            feature.AddKnownType("System.Net.WebRequest+WebProxyWrapper", "WebProxyWrapper");
            feature.AddKnownType("System.Net.WebResponse", "WebResponse");
            feature.AddKnownType("System.Net.WinHttpWebProxyFinder", "WinHttpWebProxyFinder");
            feature.AddKnownType("System.Net.WriteStreamClosedEventArgs", "WriteStreamClosedEventArgs");
            feature.AddKnownType("System.Net.AuthenticationState", "AuthenticationState");
            feature.AddKnownType("System.Net.AutoWebProxyScriptEngine", "AutoWebProxyScriptEngine");
            feature.AddKnownType("System.Net.WebProxyScriptHelper", "WebProxyScriptHelper");
            feature.AddKnownType("System.Net.IWebProxyScript", "IWebProxyScript");
            feature.AddKnownType("System.Net.AutoWebProxyScriptWrapper", "AutoWebProxyScriptWrapper");
            feature.AddKnownType("System.Net.BasicClient", "BasicClient");
            feature.AddKnownType("System.Net.BufferOffsetSize", "BufferOffsetSize");
            feature.AddKnownType("System.Net.ChunkParser", "ChunkParser");
            feature.AddKnownType("System.Net.CommandStream", "CommandStream");
            feature.AddKnownType("System.Net.CommandStream+PipelineInstruction", "PipelineInstruction");
            feature.AddKnownType("System.Net.CommandStream+PipelineEntryFlags", "PipelineEntryFlags");
            feature.AddKnownType("System.Net.CommandStream+PipelineEntry", "PipelineEntry");
            feature.AddKnownType("System.Net.ResponseDescription", "ResponseDescription");
            feature.AddKnownType("System.Net.ReceiveState", "ReceiveState");
            feature.AddKnownType("System.Net.ReadState", "ReadState");
            feature.AddKnownType("System.Net.DataParseStatus", "DataParseStatus");
            feature.AddKnownType("System.Net.WriteBufferState", "WriteBufferState");
            feature.AddKnownType("System.Net.WebParseErrorSection", "WebParseErrorSection");
            feature.AddKnownType("System.Net.WebParseErrorCode", "WebParseErrorCode");
            feature.AddKnownType("System.Net.WebParseError", "WebParseError");
            feature.AddKnownType("System.Net.TunnelStateObject", "TunnelStateObject");
            feature.AddKnownType("System.Net.ConnectionReturnResult", "ConnectionReturnResult");
            feature.AddKnownType("System.Net.Connection", "Connection");
            feature.AddKnownType("System.Net.ConnectionGroup", "ConnectionGroup");
            feature.AddKnownType("System.Net.WriteHeadersCallbackState", "WriteHeadersCallbackState");
            feature.AddKnownType("System.Net.ConnectStream", "ConnectStream");
            feature.AddKnownType("System.Net.SyncMemoryStream", "SyncMemoryStream");
            feature.AddKnownType("System.Net.CallbackClosure", "CallbackClosure");
            feature.AddKnownType("System.Net.ContextAwareResult", "ContextAwareResult");
            feature.AddKnownType("System.Net.DigestClient", "DigestClient");
            feature.AddKnownType("System.Net.HttpDigestChallenge", "HttpDigestChallenge");
            feature.AddKnownType("System.Net.EmptyWebProxy", "EmptyWebProxy");
            feature.AddKnownType("System.Net.FtpPrimitive", "FtpPrimitive");
            feature.AddKnownType("System.Net.FtpLoginState", "FtpLoginState");
            feature.AddKnownType("System.Net.FtpControlStream", "FtpControlStream");
            feature.AddKnownType("System.Net.FtpDataStream", "FtpDataStream");
            feature.AddKnownType("System.Net.HeaderInfo", "HeaderInfo");
            feature.AddKnownType("System.Net.HeaderInfoTable", "HeaderInfoTable");
            feature.AddKnownType("System.Net.IRequestLifetimeTracker", "IRequestLifetimeTracker");
            feature.AddKnownType("System.Net.ISessionAuthenticationModule", "ISessionAuthenticationModule");
            feature.AddKnownType("System.Net.CloseExState", "CloseExState");
            feature.AddKnownType("System.Net.ICloseEx", "ICloseEx");
            feature.AddKnownType("System.Net.KerberosClient", "KerberosClient");
            feature.AddKnownType("System.Net.LazyAsyncResult", "LazyAsyncResult");
            feature.AddKnownType("System.Net.ListenerAsyncResult", "ListenerAsyncResult");
            feature.AddKnownType("System.Net.HttpRequestStream", "HttpRequestStream");
            feature.AddKnownType("System.Net.HttpResponseStream", "HttpResponseStream");
            feature.AddKnownType("System.Net.HttpResponseStreamAsyncResult", "HttpResponseStreamAsyncResult");
            feature.AddKnownType("System.Net.BaseLoggingObject", "BaseLoggingObject");
            feature.AddKnownType("System.Net.ThreadKinds", "ThreadKinds");
            feature.AddKnownType("System.Net.SSPIInterface", "SSPIInterface");
            feature.AddKnownType("System.Net.SSPISecureChannelType", "SSPISecureChannelType");
            feature.AddKnownType("System.Net.SSPIAuthType", "SSPIAuthType");
            feature.AddKnownType("System.Net.NegotiateClient", "NegotiateClient");
            feature.AddKnownType("System.Net.NestedMultipleAsyncResult", "NestedMultipleAsyncResult");
            feature.AddKnownType("System.Net.NestedSingleAsyncResult", "NestedSingleAsyncResult");
            feature.AddKnownType("System.Net.NetRes", "NetRes");
            feature.AddKnownType("System.Net.NetworkingPerfCounterName", "NetworkingPerfCounterName");
            feature.AddKnownType("System.Net.NetworkingPerfCounters", "NetworkingPerfCounters");
            feature.AddKnownType("System.Net.ContextFlags", "ContextFlags");
            feature.AddKnownType("System.Net.NTAuthentication", "NTAuthentication");
            feature.AddKnownType("System.Net.AuthIdentity", "AuthIdentity");
            feature.AddKnownType("System.Net.NtlmClient", "NtlmClient");
            feature.AddKnownType("System.Net.IPMulticastRequest", "IPMulticastRequest");
            feature.AddKnownType("System.Net.Linger", "Linger");
            feature.AddKnownType("System.Net.WSABuffer", "WSABuffer");
            feature.AddKnownType("System.Net.TransmitFileBuffers", "TransmitFileBuffers");
            feature.AddKnownType("System.Net.WSAData", "WSAData");
            feature.AddKnownType("System.Net.AddressInfo", "AddressInfo");
            feature.AddKnownType("System.Net.AddressInfoHints", "AddressInfoHints");
            feature.AddKnownType("System.Net.NameInfoFlags", "NameInfoFlags");
            feature.AddKnownType("System.Net.IPv6MulticastRequest", "IPv6MulticastRequest");
            feature.AddKnownType("System.Net.SocketConstructorFlags", "SocketConstructorFlags");
            feature.AddKnownType("System.Net.PooledStream", "PooledStream");
            feature.AddKnownType("System.Net.PrefixLookup", "PrefixLookup");
            feature.AddKnownType("System.Net.IAutoWebProxy", "IAutoWebProxy");
            feature.AddKnownType("System.Net.ProxyChain", "ProxyChain");
            feature.AddKnownType("System.Net.ProxyScriptChain", "ProxyScriptChain");
            feature.AddKnownType("System.Net.DirectProxy", "DirectProxy");
            feature.AddKnownType("System.Net.StaticProxy", "StaticProxy");
            feature.AddKnownType("System.Net.WebProxyDataBuilder", "WebProxyDataBuilder");
            feature.AddKnownType("System.Net.RegBlobWebProxyDataBuilder", "RegBlobWebProxyDataBuilder");
            feature.AddKnownType("System.Net.RequestLifetimeSetter", "RequestLifetimeSetter");
            feature.AddKnownType("System.Net.WinHttpWebProxyBuilder", "WinHttpWebProxyBuilder");
            feature.AddKnownType("System.Net.SafeFreeAddrInfo", "SafeFreeAddrInfo");
            feature.AddKnownType("System.Net.SafeCloseHandle", "SafeCloseHandle");
            feature.AddKnownType("System.Net.HttpRequestQueueV2Handle", "HttpRequestQueueV2Handle");
            feature.AddKnownType("System.Net.HttpServerSessionHandle", "HttpServerSessionHandle");
            feature.AddKnownType("System.Net.SafeCloseIcmpHandle", "SafeCloseIcmpHandle");
            feature.AddKnownType("System.Net.SafeInternetHandle", "SafeInternetHandle");
            feature.AddKnownType("System.Net.SafeSspiAuthDataHandle", "SafeSspiAuthDataHandle");
            feature.AddKnownType("System.Net.SecurDll", "SecurDll");
            feature.AddKnownType("System.Net.SafeFreeContextBuffer", "SafeFreeContextBuffer");
            feature.AddKnownType("System.Net.SafeFreeContextBuffer_SECURITY", "SafeFreeContextBuffer_SECURITY");
            feature.AddKnownType("System.Net.SafeLocalFree", "SafeLocalFree");
            feature.AddKnownType("System.Net.SafeGlobalFree", "SafeGlobalFree");
            feature.AddKnownType("System.Net.SafeOverlappedFree", "SafeOverlappedFree");
            feature.AddKnownType("System.Net.SafeLoadLibrary", "SafeLoadLibrary");
            feature.AddKnownType("System.Net.SafeFreeCertChain", "SafeFreeCertChain");
            feature.AddKnownType("System.Net.SafeFreeCertChainList", "SafeFreeCertChainList");
            feature.AddKnownType("System.Net.SafeCertSelectCritera", "SafeCertSelectCritera");
            feature.AddKnownType("System.Net.SafeFreeCertContext", "SafeFreeCertContext");
            feature.AddKnownType("System.Net.SSPIHandle", "SSPIHandle");
            feature.AddKnownType("System.Net.SafeFreeCredentials", "SafeFreeCredentials");
            feature.AddKnownType("System.Net.SafeCredentialReference", "SafeCredentialReference");
            feature.AddKnownType("System.Net.SafeFreeCredential_SECURITY", "SafeFreeCredential_SECURITY");
            feature.AddKnownType("System.Net.SafeDeleteContext", "SafeDeleteContext");
            feature.AddKnownType("System.Net.SafeDeleteContext_SECURITY", "SafeDeleteContext_SECURITY");
            feature.AddKnownType("System.Net.SafeNativeOverlapped", "SafeNativeOverlapped");
            feature.AddKnownType("System.Net.SafeCloseSocket", "SafeCloseSocket");
            feature.AddKnownType("System.Net.SafeCloseSocket+InnerSafeCloseSocket", "InnerSafeCloseSocket");
            feature.AddKnownType("System.Net.SafeCloseSocketAndEvent", "SafeCloseSocketAndEvent");
            feature.AddKnownType("System.Net.SafeLocalFreeChannelBinding", "SafeLocalFreeChannelBinding");
            feature.AddKnownType("System.Net.SafeFreeContextBufferChannelBinding", "SafeFreeContextBufferChannelBinding");
            feature.AddKnownType("System.Net.SafeFreeContextBufferChannelBinding_SECURITY", "SafeFreeContextBufferChannelBinding_SECURITY");
            feature.AddKnownType("System.Net.SafeUnlockUrlCacheEntryFile", "SafeUnlockUrlCacheEntryFile");
            feature.AddKnownType("System.Net.SafeRegistryHandle", "SafeRegistryHandle");
            feature.AddKnownType("System.Net.SafeWebSocketHandle", "SafeWebSocketHandle");
            feature.AddKnownType("System.Net.ScatterGatherBuffers", "ScatterGatherBuffers");
            feature.AddKnownType("System.Net.ServiceNameStore", "ServiceNameStore");
            feature.AddKnownType("System.Net.Semaphore", "Semaphore");
            feature.AddKnownType("System.Net.ShellExpression", "ShellExpression");
            feature.AddKnownType("System.Net.ShellExpression+ShExpTokens", "ShExpTokens");
            feature.AddKnownType("System.Net.SpnDictionary", "SpnDictionary");
            feature.AddKnownType("System.Net.SpnToken", "SpnToken");
            feature.AddKnownType("System.Net.StreamSizes", "StreamSizes");
            feature.AddKnownType("System.Net.SecSizes", "SecSizes");
            feature.AddKnownType("System.Net.SchProtocols", "SchProtocols");
            feature.AddKnownType("System.Net.Alg", "Alg");
            feature.AddKnownType("System.Net.SslConnectionInfo", "SslConnectionInfo");
            feature.AddKnownType("System.Net.NegotiationInfo", "NegotiationInfo");
            feature.AddKnownType("System.Net.NegotiationInfoClass", "NegotiationInfoClass");
            feature.AddKnownType("System.Net.SecurityPackageInfo", "SecurityPackageInfo");
            feature.AddKnownType("System.Net.SecurityPackageInfoClass", "SecurityPackageInfoClass");
            feature.AddKnownType("System.Net.Bindings", "Bindings");
            feature.AddKnownType("System.Net.StreamFramer", "StreamFramer");
            feature.AddKnownType("System.Net.WorkerAsyncResult", "WorkerAsyncResult");
            feature.AddKnownType("System.Net.FrameHeader", "FrameHeader");
            feature.AddKnownType("System.Net.TimerThread+Queue", "Queue");
            feature.AddKnownType("System.Net.TimerThread+Timer", "Timer");
            feature.AddKnownType("System.Net.TlsStream", "TlsStream");
            feature.AddKnownType("System.Net.FixedSizeReader", "FixedSizeReader");
            feature.AddKnownType("System.Net.BufferAsyncResult", "BufferAsyncResult");
            feature.AddKnownType("System.Net.AsyncProtocolRequest", "AsyncProtocolRequest");
            feature.AddKnownType("System.Net.TimeoutValidator", "TimeoutValidator");
            feature.AddKnownType("System.Net.Base64Stream", "Base64Stream");
            feature.AddKnownType("System.Net.BufferedReadStream", "BufferedReadStream");
            feature.AddKnownType("System.Net.ClosableStream", "ClosableStream");
            feature.AddKnownType("System.Net.DelegatedStream", "DelegatedStream");
            feature.AddKnownType("System.Net.TrackingStringDictionary", "TrackingStringDictionary");
            feature.AddKnownType("System.Net.TrackingValidationObjectDictionary", "TrackingValidationObjectDictionary");
            feature.AddKnownType("System.Net.Cache.HttpRequestCacheValidator", "HttpRequestCacheValidator");
            feature.AddKnownType("System.Net.Cache.HttpMethod", "HttpMethod");
            feature.AddKnownType("System.Net.Cache.ResponseCacheControl", "ResponseCacheControl");
            feature.AddKnownType("System.Net.Cache.FtpRequestCacheValidator", "FtpRequestCacheValidator");
            feature.AddKnownType("System.Net.Cache.RequestCache", "RequestCache");
            feature.AddKnownType("System.Net.Cache.RequestCacheEntry", "RequestCacheEntry");
            feature.AddKnownType("System.Net.Cache.RequestCacheManager", "RequestCacheManager");
            feature.AddKnownType("System.Net.Cache.RequestCacheBinding", "RequestCacheBinding");
            feature.AddKnownType("System.Net.Cache.RequestCacheLevel", "RequestCacheLevel");
            feature.AddKnownType("System.Net.Cache.RequestCachePolicy", "RequestCachePolicy");
            feature.AddKnownType("System.Net.Cache.HttpRequestCacheLevel", "HttpRequestCacheLevel");
            feature.AddKnownType("System.Net.Cache.HttpCacheAgeControl", "HttpCacheAgeControl");
            feature.AddKnownType("System.Net.Cache.HttpRequestCachePolicy", "HttpRequestCachePolicy");
            feature.AddKnownType("System.Net.Cache.CacheFreshnessStatus", "CacheFreshnessStatus");
            feature.AddKnownType("System.Net.Cache.CacheValidationStatus", "CacheValidationStatus");
            feature.AddKnownType("System.Net.Cache.RequestCacheValidator", "RequestCacheValidator");
            feature.AddKnownType("System.Net.Cache._WinInetCache+EntryType", "EntryType");
            feature.AddKnownType("System.Net.Cache._WinInetCache+Entry_FC", "Entry_FC");
            feature.AddKnownType("System.Net.Cache._WinInetCache+Status", "Status");
            feature.AddKnownType("System.Net.Cache._WinInetCache+FILETIME", "FILETIME");
            feature.AddKnownType("System.Net.Cache._WinInetCache+EntryBuffer", "EntryBuffer");
            feature.AddKnownType("System.Net.Cache._WinInetCache+EntryBuffer+Rsv", "EntryBuffer.Rsv");
            feature.AddKnownType("System.Net.Cache._WinInetCache+Entry", "Entry");
            feature.AddKnownType("System.Net.Cache.BaseWrapperStream", "BaseWrapperStream");
            feature.AddKnownType("System.Net.Cache.CombinedReadStream", "CombinedReadStream");
            feature.AddKnownType("System.Net.Cache.ForwardingReadStream", "ForwardingReadStream");
            feature.AddKnownType("System.Net.Cache.MetadataUpdateStream", "MetadataUpdateStream");
            feature.AddKnownType("System.Net.Cache.RangeStream", "RangeStream");
            feature.AddKnownType("System.Net.Cache.RequestCacheProtocol", "RequestCacheProtocol");
            feature.AddKnownType("System.Net.Cache.Rfc2616", "Rfc2616");
            feature.AddKnownType("System.Net.Cache.Rfc2616+TriState", "TriState");
            feature.AddKnownType("System.Net.Cache.SingleItemRequestCache", "SingleItemRequestCache");
            feature.AddKnownType("System.Net.Cache.SingleItemRequestCache+ReadOnlyStream", "ReadOnlyStream");
            feature.AddKnownType("System.Net.Configuration.UnicodeDecodingConformance", "UnicodeDecodingConformance");
            feature.AddKnownType("System.Net.Configuration.UnicodeEncodingConformance", "UnicodeEncodingConformance");
            feature.AddKnownType("System.Net.Configuration.AuthenticationModuleElement", "AuthenticationModuleElement");
            feature.AddKnownType("System.Net.Configuration.AuthenticationModuleElementCollection", "AuthenticationModuleElementCollection");
            feature.AddKnownType("System.Net.Configuration.AuthenticationModulesSection", "AuthenticationModulesSection");
            feature.AddKnownType("System.Net.Configuration.AuthenticationModulesSectionInternal", "AuthenticationModulesSectionInternal");
            feature.AddKnownType("System.Net.Configuration.BypassElement", "BypassElement");
            feature.AddKnownType("System.Net.Configuration.BypassElementCollection", "BypassElementCollection");
            feature.AddKnownType("System.Net.Configuration.ConnectionManagementElement", "ConnectionManagementElement");
            feature.AddKnownType("System.Net.Configuration.ConnectionManagementElementCollection", "ConnectionManagementElementCollection");
            feature.AddKnownType("System.Net.Configuration.ConnectionManagementSection", "ConnectionManagementSection");
            feature.AddKnownType("System.Net.Configuration.ConnectionManagementSectionInternal", "ConnectionManagementSectionInternal");
            feature.AddKnownType("System.Net.Configuration.DefaultProxySection", "DefaultProxySection");
            feature.AddKnownType("System.Net.Configuration.DefaultProxySectionInternal", "DefaultProxySectionInternal");
            feature.AddKnownType("System.Net.Configuration.HttpWebRequestElement", "HttpWebRequestElement");
            feature.AddKnownType("System.Net.Configuration.HttpListenerElement", "HttpListenerElement");
            feature.AddKnownType("System.Net.Configuration.HttpListenerTimeoutsElement", "HttpListenerTimeoutsElement");
            feature.AddKnownType("System.Net.Configuration.HttpCachePolicyElement", "HttpCachePolicyElement");
            feature.AddKnownType("System.Net.Configuration.FtpCachePolicyElement", "FtpCachePolicyElement");
            feature.AddKnownType("System.Net.Configuration.Ipv6Element", "Ipv6Element");
            feature.AddKnownType("System.Net.Configuration.MailSettingsSectionGroup", "MailSettingsSectionGroup");
            feature.AddKnownType("System.Net.Configuration.MailSettingsSectionGroupInternal", "MailSettingsSectionGroupInternal");
            feature.AddKnownType("System.Net.Configuration.ModuleElement", "ModuleElement");
            feature.AddKnownType("System.Net.Configuration.NetSectionGroup", "NetSectionGroup");
            feature.AddKnownType("System.Net.Configuration.PerformanceCountersElement", "PerformanceCountersElement");
            feature.AddKnownType("System.Net.Configuration.ProxyElement", "ProxyElement");
            feature.AddKnownType("System.Net.Configuration.ProxyElement+BypassOnLocalValues", "ProxyElement.BypassOnLocalValues");
            feature.AddKnownType("System.Net.Configuration.ProxyElement+UseSystemDefaultValues", "ProxyElement.UseSystemDefaultValues");
            feature.AddKnownType("System.Net.Configuration.ProxyElement+AutoDetectValues", "ProxyElement.AutoDetectValues");
            feature.AddKnownType("System.Net.Configuration.RequestCachingSection", "RequestCachingSection");
            feature.AddKnownType("System.Net.Configuration.RequestCachingSectionInternal", "RequestCachingSectionInternal");
            feature.AddKnownType("System.Net.Configuration.SettingsSection", "SettingsSection");
            feature.AddKnownType("System.Net.Configuration.SettingsSectionInternal", "SettingsSectionInternal");
            feature.AddKnownType("System.Net.Configuration.ServicePointManagerElement", "ServicePointManagerElement");
            feature.AddKnownType("System.Net.Configuration.SmtpSection", "SmtpSection");
            feature.AddKnownType("System.Net.Configuration.SmtpSectionInternal", "SmtpSectionInternal");
            feature.AddKnownType("System.Net.Configuration.SmtpNetworkElement", "SmtpNetworkElement");
            feature.AddKnownType("System.Net.Configuration.SmtpNetworkElementInternal", "SmtpNetworkElementInternal");
            feature.AddKnownType("System.Net.Configuration.SmtpSpecifiedPickupDirectoryElement", "SmtpSpecifiedPickupDirectoryElement");
            feature.AddKnownType("System.Net.Configuration.SmtpSpecifiedPickupDirectoryElementInternal", "SmtpSpecifiedPickupDirectoryElementInternal");
            feature.AddKnownType("System.Net.Configuration.SocketElement", "SocketElement");
            feature.AddKnownType("System.Net.Configuration.WebProxyScriptElement", "WebProxyScriptElement");
            feature.AddKnownType("System.Net.Configuration.WebRequestModuleElement", "WebRequestModuleElement");
            feature.AddKnownType("System.Net.Configuration.WebRequestModuleElement+TypeTypeConverter", "TypeTypeConverter");
            feature.AddKnownType("System.Net.Configuration.WebRequestModuleElementCollection", "WebRequestModuleElementCollection");
            feature.AddKnownType("System.Net.Configuration.WebRequestModulesSection", "WebRequestModulesSection");
            feature.AddKnownType("System.Net.Configuration.WebRequestModulesSectionInternal", "WebRequestModulesSectionInternal");
            feature.AddKnownType("System.Net.Configuration.WebUtilityElement", "WebUtilityElement");
            feature.AddKnownType("System.Net.Mail.AlternateView", "AlternateView");
            feature.AddKnownType("System.Net.Mail.AlternateViewCollection", "AlternateViewCollection");
            feature.AddKnownType("System.Net.Mail.AttachmentBase", "AttachmentBase");
            feature.AddKnownType("System.Net.Mail.Attachment", "Attachment");
            feature.AddKnownType("System.Net.Mail.AttachmentCollection", "AttachmentCollection");
            feature.AddKnownType("System.Net.Mail.BufferBuilder", "BufferBuilder");
            feature.AddKnownType("System.Net.Mail.PropertyName", "PropertyName");
            feature.AddKnownType("System.Net.Mail.ServerState", "ServerState");
            feature.AddKnownType("System.Net.Mail.MBErrors", "MBErrors");
            feature.AddKnownType("System.Net.Mail.MBKeyAccess", "MBKeyAccess");
            feature.AddKnownType("System.Net.Mail.MetadataRecord", "MetadataRecord");
            feature.AddKnownType("System.Net.Mail._METADATA_HANDLE_INFO", "_METADATA_HANDLE_INFO");
            feature.AddKnownType("System.Net.Mail.IMSAdminBase", "IMSAdminBase");
            feature.AddKnownType("System.Net.Mail.MSAdminBase", "MSAdminBase");
            feature.AddKnownType("System.Net.Mail.MBDataType", "MBDataType");
            feature.AddKnownType("System.Net.Mail.MBUserType", "MBUserType");
            feature.AddKnownType("System.Net.Mail.ISmtpAuthenticationModule", "ISmtpAuthenticationModule");
            feature.AddKnownType("System.Net.Mail.LinkedResource", "LinkedResource");
            feature.AddKnownType("System.Net.Mail.LinkedResourceCollection", "LinkedResourceCollection");
            feature.AddKnownType("System.Net.Mail.MailAddress", "MailAddress");
            feature.AddKnownType("System.Net.Mail.MailAddressCollection", "MailAddressCollection");
            feature.AddKnownType("System.Net.Mail.MailHeaderID", "MailHeaderID");
            feature.AddKnownType("System.Net.Mail.DeliveryNotificationOptions", "DeliveryNotificationOptions");
            feature.AddKnownType("System.Net.Mail.MailMessage", "MailMessage");
            feature.AddKnownType("System.Net.Mail.MailWriter", "MailWriter");
            feature.AddKnownType("System.Net.Mail.MailPriority", "MailPriority");
            feature.AddKnownType("System.Net.Mail.Message", "Message");
            feature.AddKnownType("System.Net.Mail.Message+EmptySendContext", "EmptySendContext");
            feature.AddKnownType("System.Net.Mail.RecipientLocationType", "RecipientLocationType");
            feature.AddKnownType("System.Net.Mail.SmtpDeliveryMethod", "SmtpDeliveryMethod");
            feature.AddKnownType("System.Net.Mail.SmtpDeliveryFormat", "SmtpDeliveryFormat");
            feature.AddKnownType("System.Net.Mail.SmtpClient", "SmtpClient");
            feature.AddKnownType("System.Net.Mail.LineInfo", "LineInfo");
            feature.AddKnownType("System.Net.Mail.SmtpConnection", "SmtpConnection");
            feature.AddKnownType("System.Net.Mail.SmtpDigestAuthenticationModule", "SmtpDigestAuthenticationModule");
            feature.AddKnownType("System.Net.Mail.SmtpException", "SmtpException");
            feature.AddKnownType("System.Net.Mail.SmtpFailedRecipientException", "SmtpFailedRecipientException");
            feature.AddKnownType("System.Net.Mail.SmtpFailedRecipientsException", "SmtpFailedRecipientsException");
            feature.AddKnownType("System.Net.Mail.SmtpLoginAuthenticationModule", "SmtpLoginAuthenticationModule");
            feature.AddKnownType("System.Net.Mail.SmtpNegotiateAuthenticationModule", "SmtpNegotiateAuthenticationModule");
            feature.AddKnownType("System.Net.Mail.SmtpNtlmAuthenticationModule", "SmtpNtlmAuthenticationModule");
            feature.AddKnownType("System.Net.Mail.SmtpAccess", "SmtpAccess");
            feature.AddKnownType("System.Net.Mail.SmtpPermissionAttribute", "SmtpPermissionAttribute");
            feature.AddKnownType("System.Net.Mail.SmtpPermission", "SmtpPermission");
            feature.AddKnownType("System.Net.Mail.SmtpReplyReader", "SmtpReplyReader");
            feature.AddKnownType("System.Net.Mail.SmtpReplyReaderFactory", "SmtpReplyReaderFactory");
            feature.AddKnownType("System.Net.Mail.SmtpStatusCode", "SmtpStatusCode");
            feature.AddKnownType("System.Net.Mail.SupportedAuth", "SupportedAuth");
            feature.AddKnownType("System.Net.Mail.SmtpPooledStream", "SmtpPooledStream");
            feature.AddKnownType("System.Net.Mail.SmtpTransport", "SmtpTransport");
            feature.AddKnownType("System.Net.Mail.SendMailAsyncResult", "SendMailAsyncResult");
            feature.AddKnownType("System.Net.Mime.Base64WriteStateInfo", "Base64WriteStateInfo");
            feature.AddKnownType("System.Net.Mime.BaseWriter", "BaseWriter");
            feature.AddKnownType("System.Net.Mime.ContentDisposition", "ContentDisposition");
            feature.AddKnownType("System.Net.Mime.ContentTransferEncoding", "ContentTransferEncoding");
            feature.AddKnownType("System.Net.Mime.ContentType", "ContentType");
            feature.AddKnownType("System.Net.Mime.EightBitStream", "EightBitStream");
            feature.AddKnownType("System.Net.Mime.EncodedStreamFactory", "EncodedStreamFactory");
            feature.AddKnownType("System.Net.Mime.HeaderCollection", "HeaderCollection");
            feature.AddKnownType("System.Net.Mime.IEncodableStream", "IEncodableStream");
            feature.AddKnownType("System.Net.Mime.MimeBasePart", "MimeBasePart");
            feature.AddKnownType("System.Net.Mime.MimeBasePart+MimePartAsyncResult", "MimePartAsyncResult");
            feature.AddKnownType("System.Net.Mime.MimeMultiPart", "MimeMultiPart");
            feature.AddKnownType("System.Net.Mime.MimeMultiPart+MimePartContext", "MimePartContext");
            feature.AddKnownType("System.Net.Mime.MimeMultiPartType", "MimeMultiPartType");
            feature.AddKnownType("System.Net.Mime.MimePart", "MimePart");
            feature.AddKnownType("System.Net.Mime.MimePart+MimePartContext", "MimePartContext");
            feature.AddKnownType("System.Net.Mime.MimeWriter", "MimeWriter");
            feature.AddKnownType("System.Net.Mime.MultiAsyncResult", "MultiAsyncResult");
            feature.AddKnownType("System.Net.Mime.QEncodedStream", "QEncodedStream");
            feature.AddKnownType("System.Net.Mime.QuotedPrintableStream", "QuotedPrintableStream");
            feature.AddKnownType("System.Net.Mime.SmtpDateTime", "SmtpDateTime");
            feature.AddKnownType("System.Net.Mime.TransferEncoding", "TransferEncoding");
            feature.AddKnownType("System.Net.Mime.WriteStateInfoBase", "WriteStateInfoBase");
            feature.AddKnownType("System.Net.NetworkInformation.DuplicateAddressDetectionState", "DuplicateAddressDetectionState");
            feature.AddKnownType("System.Net.NetworkInformation.IcmpV4Statistics", "IcmpV4Statistics");
            feature.AddKnownType("System.Net.NetworkInformation.IcmpV6Statistics", "IcmpV6Statistics");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInterfaceType", "NetworkInterfaceType");
            feature.AddKnownType("System.Net.NetworkInformation.IPAddressInformation", "IPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.IPAddressInformationCollection", "IPAddressInformationCollection");
            feature.AddKnownType("System.Net.NetworkInformation.IPGlobalProperties", "IPGlobalProperties");
            feature.AddKnownType("System.Net.NetworkInformation.IPGlobalStatistics", "IPGlobalStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.ScopeLevel", "ScopeLevel");
            feature.AddKnownType("System.Net.NetworkInformation.IPInterfaceProperties", "IPInterfaceProperties");
            feature.AddKnownType("System.Net.NetworkInformation.IPInterfaceStatistics", "IPInterfaceStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.IPv4InterfaceStatistics", "IPv4InterfaceStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.IcmpV4Type", "IcmpV4Type");
            feature.AddKnownType("System.Net.NetworkInformation.IcmpV4Code", "IcmpV4Code");
            feature.AddKnownType("System.Net.NetworkInformation.IPStatus", "IPStatus");
            feature.AddKnownType("System.Net.NetworkInformation.UnicastIPAddressInformation", "UnicastIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.UnicastIPAddressInformationCollection", "UnicastIPAddressInformationCollection");
            feature.AddKnownType("System.Net.NetworkInformation.MulticastIPAddressInformation", "MulticastIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.MulticastIPAddressInformationCollection", "MulticastIPAddressInformationCollection");
            feature.AddKnownType("System.Net.NetworkInformation.IPAddressCollection", "IPAddressCollection");
            feature.AddKnownType("System.Net.NetworkInformation.SystemGatewayIPAddressInformation", "SystemGatewayIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.GatewayIPAddressInformation", "GatewayIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.GatewayIPAddressInformationCollection", "GatewayIPAddressInformationCollection");
            feature.AddKnownType("System.Net.NetworkInformation.IPv4InterfaceProperties", "IPv4InterfaceProperties");
            feature.AddKnownType("System.Net.NetworkInformation.IPv6InterfaceProperties", "IPv6InterfaceProperties");
            feature.AddKnownType("System.Net.NetworkInformation.IpHelperErrors", "IpHelperErrors");
            feature.AddKnownType("System.Net.NetworkInformation.AdapterFlags", "AdapterFlags");
            feature.AddKnownType("System.Net.NetworkInformation.AdapterAddressFlags", "AdapterAddressFlags");
            feature.AddKnownType("System.Net.NetworkInformation.OldOperationalStatus", "OldOperationalStatus");
            feature.AddKnownType("System.Net.NetworkInformation.GetAdaptersAddressesFlags", "GetAdaptersAddressesFlags");
            feature.AddKnownType("System.Net.NetworkInformation.IpAddrString", "IpAddrString");
            feature.AddKnownType("System.Net.NetworkInformation.FIXED_INFO", "FIXED_INFO");
            feature.AddKnownType("System.Net.NetworkInformation.IpSocketAddress", "IpSocketAddress");
            feature.AddKnownType("System.Net.NetworkInformation.IpAdapterAddress", "IpAdapterAddress");
            feature.AddKnownType("System.Net.NetworkInformation.IpAdapterUnicastAddress", "IpAdapterUnicastAddress");
            feature.AddKnownType("System.Net.NetworkInformation.IpAdapterAddresses", "IpAdapterAddresses");
            feature.AddKnownType("System.Net.NetworkInformation.InterfaceConnectionType", "InterfaceConnectionType");
            feature.AddKnownType("System.Net.NetworkInformation.InterfaceTunnelType", "InterfaceTunnelType");
            feature.AddKnownType("System.Net.NetworkInformation.IpPerAdapterInfo", "IpPerAdapterInfo");
            feature.AddKnownType("System.Net.NetworkInformation.MibIfRow2", "MibIfRow2");
            feature.AddKnownType("System.Net.NetworkInformation.MibUdpStats", "MibUdpStats");
            feature.AddKnownType("System.Net.NetworkInformation.MibTcpStats", "MibTcpStats");
            feature.AddKnownType("System.Net.NetworkInformation.MibIpStats", "MibIpStats");
            feature.AddKnownType("System.Net.NetworkInformation.MibIcmpInfo", "MibIcmpInfo");
            feature.AddKnownType("System.Net.NetworkInformation.MibIcmpStats", "MibIcmpStats");
            feature.AddKnownType("System.Net.NetworkInformation.MibIcmpInfoEx", "MibIcmpInfoEx");
            feature.AddKnownType("System.Net.NetworkInformation.MibIcmpStatsEx", "MibIcmpStatsEx");
            feature.AddKnownType("System.Net.NetworkInformation.MibTcpTable", "MibTcpTable");
            feature.AddKnownType("System.Net.NetworkInformation.MibTcpRow", "MibTcpRow");
            feature.AddKnownType("System.Net.NetworkInformation.MibTcp6TableOwnerPid", "MibTcp6TableOwnerPid");
            feature.AddKnownType("System.Net.NetworkInformation.MibTcp6RowOwnerPid", "MibTcp6RowOwnerPid");
            feature.AddKnownType("System.Net.NetworkInformation.TcpTableClass", "TcpTableClass");
            feature.AddKnownType("System.Net.NetworkInformation.MibUdpTable", "MibUdpTable");
            feature.AddKnownType("System.Net.NetworkInformation.MibUdpRow", "MibUdpRow");
            feature.AddKnownType("System.Net.NetworkInformation.UdpTableClass", "UdpTableClass");
            feature.AddKnownType("System.Net.NetworkInformation.MibUdp6TableOwnerPid", "MibUdp6TableOwnerPid");
            feature.AddKnownType("System.Net.NetworkInformation.MibUdp6RowOwnerPid", "MibUdp6RowOwnerPid");
            feature.AddKnownType("System.Net.NetworkInformation.IPOptions", "IPOptions");
            feature.AddKnownType("System.Net.NetworkInformation.IcmpEchoReply", "IcmpEchoReply");
            feature.AddKnownType("System.Net.NetworkInformation.Ipv6Address", "Ipv6Address");
            feature.AddKnownType("System.Net.NetworkInformation.Icmp6EchoReply", "Icmp6EchoReply");
            feature.AddKnownType("System.Net.NetworkInformation.StartIPOptions", "StartIPOptions");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkAvailabilityEventArgs", "NetworkAvailabilityEventArgs");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkChange", "NetworkChange");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInformationException", "NetworkInformationException");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInformationAccess", "NetworkInformationAccess");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInformationPermissionAttribute", "NetworkInformationPermissionAttribute");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInformationPermission", "NetworkInformationPermission");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInterface", "NetworkInterface");
            feature.AddKnownType("System.Net.NetworkInformation.NetworkInterfaceComponent", "NetworkInterfaceComponent");
            feature.AddKnownType("System.Net.NetworkInformation.NetBiosNodeType", "NetBiosNodeType");
            feature.AddKnownType("System.Net.NetworkInformation.OperationalStatus", "OperationalStatus");
            feature.AddKnownType("System.Net.NetworkInformation.PhysicalAddress", "PhysicalAddress");
            feature.AddKnownType("System.Net.NetworkInformation.PingCompletedEventArgs", "PingCompletedEventArgs");
            feature.AddKnownType("System.Net.NetworkInformation.Ping", "Ping");
            feature.AddKnownType("System.Net.NetworkInformation.Ping+AsyncStateObject", "AsyncStateObject");
            feature.AddKnownType("System.Net.NetworkInformation.PingException", "PingException");
            feature.AddKnownType("System.Net.NetworkInformation.PingOptions", "PingOptions");
            feature.AddKnownType("System.Net.NetworkInformation.PingReply", "PingReply");
            feature.AddKnownType("System.Net.NetworkInformation.PrefixOrigin", "PrefixOrigin");
            feature.AddKnownType("System.Net.NetworkInformation.SafeCancelMibChangeNotify", "SafeCancelMibChangeNotify");
            feature.AddKnownType("System.Net.NetworkInformation.SafeFreeMibTable", "SafeFreeMibTable");
            feature.AddKnownType("System.Net.NetworkInformation.SuffixOrigin", "SuffixOrigin");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIcmpV4Statistics", "SystemIcmpV4Statistics");
            feature.AddKnownType("System.Net.NetworkInformation.IcmpV6StatType", "IcmpV6StatType");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIcmpV6Statistics", "SystemIcmpV6Statistics");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPAddressInformation", "SystemIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPGlobalProperties", "SystemIPGlobalProperties");
            feature.AddKnownType("System.Net.NetworkInformation.FixedInfo", "FixedInfo");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPInterfaceProperties", "SystemIPInterfaceProperties");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPInterfaceStatistics", "SystemIPInterfaceStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPv4InterfaceStatistics", "SystemIPv4InterfaceStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPGlobalStatistics", "SystemIPGlobalStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.SystemMulticastIPAddressInformation", "SystemMulticastIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.SystemUnicastIPAddressInformation", "SystemUnicastIPAddressInformation");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPv4InterfaceProperties", "SystemIPv4InterfaceProperties");
            feature.AddKnownType("System.Net.NetworkInformation.SystemIPv6InterfaceProperties", "SystemIPv6InterfaceProperties");
            feature.AddKnownType("System.Net.NetworkInformation.SystemNetworkInterface", "SystemNetworkInterface");
            feature.AddKnownType("System.Net.NetworkInformation.SystemTcpConnectionInformation", "SystemTcpConnectionInformation");
            feature.AddKnownType("System.Net.NetworkInformation.SystemTcpStatistics", "SystemTcpStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.SystemUdpStatistics", "SystemUdpStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.TeredoHelper", "TeredoHelper");
            feature.AddKnownType("System.Net.NetworkInformation.TcpConnectionInformation", "TcpConnectionInformation");
            feature.AddKnownType("System.Net.NetworkInformation.TcpState", "TcpState");
            feature.AddKnownType("System.Net.NetworkInformation.TcpStatistics", "TcpStatistics");
            feature.AddKnownType("System.Net.NetworkInformation.UdpStatistics", "UdpStatistics");
            feature.AddKnownType("System.Net.Security.SecureChannel", "SecureChannel");
            feature.AddKnownType("System.Net.Security.ProtocolToken", "ProtocolToken");
            feature.AddKnownType("System.Net.Security.AuthenticatedStream", "AuthenticatedStream");
            feature.AddKnownType("System.Net.Security.AuthenticationLevel", "AuthenticationLevel");
            feature.AddKnownType("System.Net.Security.ProtectionLevel", "ProtectionLevel");
            feature.AddKnownType("System.Net.Security.NegotiateStream", "NegotiateStream");
            feature.AddKnownType("System.Net.Security.SslPolicyErrors", "SslPolicyErrors");
            feature.AddKnownType("System.Net.Security.EncryptionPolicy", "EncryptionPolicy");
            feature.AddKnownType("System.Net.Security.SslStream", "SslStream");
            feature.AddKnownType("System.Net.Security.NegoState", "NegoState");
            feature.AddKnownType("System.Net.Security.SslState", "SslState");
            feature.AddKnownType("System.Net.Security._SslStream", "_SslStream");
            feature.AddKnownType("System.Net.Security.TlsAlertMessage", "TlsAlertMessage");
            feature.AddKnownType("System.Net.Security.TlsAlertType", "TlsAlertType");
            feature.AddKnownType("System.Net.Sockets.SocketException", "SocketException");
            feature.AddKnownType("System.Net.Sockets.AddressFamily", "AddressFamily");
            feature.AddKnownType("System.Net.Sockets.AsyncEventBits", "AsyncEventBits");
            feature.AddKnownType("System.Net.Sockets.AsyncEventBitsPos", "AsyncEventBitsPos");
            feature.AddKnownType("System.Net.Sockets.NetworkEvents", "NetworkEvents");
            feature.AddKnownType("System.Net.Sockets.TimeValue", "TimeValue");
            feature.AddKnownType("System.Net.Sockets.IOControlCode", "IOControlCode");
            feature.AddKnownType("System.Net.Sockets.IPProtectionLevel", "IPProtectionLevel");
            feature.AddKnownType("System.Net.Sockets.LingerOption", "LingerOption");
            feature.AddKnownType("System.Net.Sockets.MulticastOption", "MulticastOption");
            feature.AddKnownType("System.Net.Sockets.IPv6MulticastOption", "IPv6MulticastOption");
            feature.AddKnownType("System.Net.Sockets.NetworkStream", "NetworkStream");
            feature.AddKnownType("System.Net.Sockets.ProtocolFamily", "ProtocolFamily");
            feature.AddKnownType("System.Net.Sockets.ProtocolType", "ProtocolType");
            feature.AddKnownType("System.Net.Sockets.SelectMode", "SelectMode");
            feature.AddKnownType("System.Net.Sockets.SocketInformationOptions", "SocketInformationOptions");
            feature.AddKnownType("System.Net.Sockets.SocketInformation", "SocketInformation");
            feature.AddKnownType("System.Net.Sockets.Socket", "Socket");
            feature.AddKnownType("System.Net.Sockets.ConnectAsyncResult", "ConnectAsyncResult");
            feature.AddKnownType("System.Net.Sockets.AcceptAsyncResult", "AcceptAsyncResult");
            feature.AddKnownType("System.Net.Sockets.SocketAsyncOperation", "SocketAsyncOperation");
            feature.AddKnownType("System.Net.Sockets.SendPacketsElement", "SendPacketsElement");
            feature.AddKnownType("System.Net.Sockets.SocketClientAccessPolicyProtocol", "SocketClientAccessPolicyProtocol");
            feature.AddKnownType("System.Net.Sockets.SocketAsyncEventArgs", "SocketAsyncEventArgs");
            feature.AddKnownType("System.Net.Sockets.SocketError", "SocketError");
            feature.AddKnownType("System.Net.Sockets.SocketFlags", "SocketFlags");
            feature.AddKnownType("System.Net.Sockets.SocketOptionLevel", "SocketOptionLevel");
            feature.AddKnownType("System.Net.Sockets.SocketOptionName", "SocketOptionName");
            feature.AddKnownType("System.Net.Sockets.SocketShutdown", "SocketShutdown");
            feature.AddKnownType("System.Net.Sockets.SocketReceiveFromResult", "SocketReceiveFromResult");
            feature.AddKnownType("System.Net.Sockets.SocketReceiveMessageFromResult", "SocketReceiveMessageFromResult");
            feature.AddKnownType("System.Net.Sockets.SocketType", "SocketType");
            feature.AddKnownType("System.Net.Sockets.TcpClient", "TcpClient");
            feature.AddKnownType("System.Net.Sockets.TcpListener", "TcpListener");
            feature.AddKnownType("System.Net.Sockets.TransmitFileOptions", "TransmitFileOptions");
            feature.AddKnownType("System.Net.Sockets.UdpClient", "UdpClient");
            feature.AddKnownType("System.Net.Sockets.UdpReceiveResult", "UdpReceiveResult");
            feature.AddKnownType("System.Net.Sockets.AcceptOverlappedAsyncResult", "AcceptOverlappedAsyncResult");
            feature.AddKnownType("System.Net.Sockets.BaseOverlappedAsyncResult", "BaseOverlappedAsyncResult");
            feature.AddKnownType("System.Net.Sockets.OverlappedCache", "OverlappedCache");
            feature.AddKnownType("System.Net.Sockets.ConnectOverlappedAsyncResult", "ConnectOverlappedAsyncResult");
            feature.AddKnownType("System.Net.Sockets.DisconnectOverlappedAsyncResult", "DisconnectOverlappedAsyncResult");
            feature.AddKnownType("System.Net.Sockets.DynamicWinsockMethods", "DynamicWinsockMethods");
            feature.AddKnownType("System.Net.Sockets.MultipleConnectAsync", "MultipleConnectAsync");
            feature.AddKnownType("System.Net.Sockets.SingleSocketMultipleConnectAsync", "SingleSocketMultipleConnectAsync");
            feature.AddKnownType("System.Net.Sockets.MultipleSocketMultipleConnectAsync", "MultipleSocketMultipleConnectAsync");
            feature.AddKnownType("System.Net.Sockets.OverlappedAsyncResult", "OverlappedAsyncResult");
            feature.AddKnownType("System.Net.Sockets.TransmitFileOverlappedAsyncResult", "TransmitFileOverlappedAsyncResult");
            feature.AddKnownType("System.Net.Sockets.ReceiveMessageOverlappedAsyncResult", "ReceiveMessageOverlappedAsyncResult");
            feature.AddKnownType("System.Net.Sockets.IPPacketInformation", "IPPacketInformation");
            feature.AddKnownType("System.Net.WebSockets.ClientWebSocket", "ClientWebSocket");
            feature.AddKnownType("System.Net.WebSockets.ClientWebSocketOptions", "ClientWebSocketOptions");
            feature.AddKnownType("System.Net.WebSockets.InternalClientWebSocket", "InternalClientWebSocket");
            feature.AddKnownType("System.Net.WebSockets.HttpListenerWebSocketContext", "HttpListenerWebSocketContext");
            feature.AddKnownType("System.Net.WebSockets.ServerWebSocket", "ServerWebSocket");
            feature.AddKnownType("System.Net.WebSockets.WebSocket", "WebSocket");
            feature.AddKnownType("System.Net.WebSockets.WebSocketBase", "WebSocketBase");
            feature.AddKnownType("System.Net.WebSockets.WebSocketBase+IWebSocketStream", "IWebSocketStream");
            feature.AddKnownType("System.Net.WebSockets.WebSocketBuffer", "WebSocketBuffer");
            feature.AddKnownType("System.Net.WebSockets.WebSocketCloseStatus", "WebSocketCloseStatus");
            feature.AddKnownType("System.Net.WebSockets.WebSocketConnectionStream", "WebSocketConnectionStream");
            feature.AddKnownType("System.Net.WebSockets.WebSocketContext", "WebSocketContext");
            feature.AddKnownType("System.Net.WebSockets.WebSocketError", "WebSocketError");
            feature.AddKnownType("System.Net.WebSockets.WebSocketException", "WebSocketException");
            feature.AddKnownType("System.Net.WebSockets.WebSocketHttpListenerDuplexStream", "WebSocketHttpListenerDuplexStream");
            feature.AddKnownType("System.Net.WebSockets.WebSocketHttpListenerDuplexStream+HttpListenerAsyncEventArgs", "HttpListenerAsyncEventArgs");
            feature.AddKnownType("System.Net.WebSockets.WebSocketHttpListenerDuplexStream+HttpListenerAsyncEventArgs+HttpListenerAsyncOperation", "HttpListenerAsyncEventArgs.HttpListenerAsyncOperation");
            feature.AddKnownType("System.Net.WebSockets.WebSocketMessageType", "WebSocketMessageType");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+Action", "Action");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+BufferType", "BufferType");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+PropertyType", "PropertyType");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+ActionQueue", "ActionQueue");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+Property", "Property");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+Buffer", "Buffer");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+DataBuffer", "DataBuffer");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+CloseBuffer", "CloseBuffer");
            feature.AddKnownType("System.Net.WebSockets.WebSocketProtocolComponent+HttpHeader", "HttpHeader");
            feature.AddKnownType("System.Net.WebSockets.WebSocketReceiveResult", "WebSocketReceiveResult");
            feature.AddKnownType("System.Net.WebSockets.WebSocketState", "WebSocketState");
            feature.AddKnownType("System.Reflection.ICustomTypeProvider", "ICustomTypeProvider");
            feature.AddKnownType("System.Runtime.InteropServices.HandleCollector", "HandleCollector");
            feature.AddKnownType("System.Runtime.InteropServices.DefaultParameterValueAttribute", "DefaultParameterValueAttribute");
            feature.AddKnownType("System.Runtime.InteropServices.StandardOleMarshalObject", "StandardOleMarshalObject");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.ADVF", "ADVF");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.DATADIR", "DATADIR");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.DVASPECT", "DVASPECT");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.FORMATETC", "FORMATETC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IAdviseSink", "IAdviseSink");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IDataObject", "IDataObject");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumFORMATETC", "IEnumFORMATETC");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.IEnumSTATDATA", "IEnumSTATDATA");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.STATDATA", "STATDATA");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.STGMEDIUM", "STGMEDIUM");
            feature.AddKnownType("System.Runtime.InteropServices.ComTypes.TYMED", "TYMED");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.INotifyCollectionChangedEventArgs", "INotifyCollectionChangedEventArgs");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.IPropertyChangedEventArgs", "IPropertyChangedEventArgs");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.INotifyCollectionChanged_WinRT", "INotifyCollectionChanged_WinRT");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.INotifyPropertyChanged_WinRT", "INotifyPropertyChanged_WinRT");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ICommand_WinRT", "ICommand_WinRT");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.NotifyCollectionChangedToManagedAdapter", "NotifyCollectionChangedToManagedAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.NotifyCollectionChangedToWinRTAdapter", "NotifyCollectionChangedToWinRTAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.NotifyPropertyChangedToManagedAdapter", "NotifyPropertyChangedToManagedAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.NotifyPropertyChangedToWinRTAdapter", "NotifyPropertyChangedToWinRTAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ICommandToManagedAdapter", "ICommandToManagedAdapter");
            feature.AddKnownType("System.Runtime.InteropServices.WindowsRuntime.ICommandToWinRTAdapter", "ICommandToWinRTAdapter");
            feature.AddKnownType("System.Runtime.Versioning.FrameworkName", "FrameworkName");
            feature.AddKnownType("System.Security.AccessControl.SemaphoreRights", "SemaphoreRights");
            feature.AddKnownType("System.Security.AccessControl.SemaphoreAccessRule", "SemaphoreAccessRule");
            feature.AddKnownType("System.Security.AccessControl.SemaphoreAuditRule", "SemaphoreAuditRule");
            feature.AddKnownType("System.Security.AccessControl.SemaphoreSecurity", "SemaphoreSecurity");
            feature.AddKnownType("System.Security.Authentication.AuthenticationException", "AuthenticationException");
            feature.AddKnownType("System.Security.Authentication.InvalidCredentialException", "InvalidCredentialException");
            feature.AddKnownType("System.Security.Authentication.SslProtocols", "SslProtocols");
            feature.AddKnownType("System.Security.Authentication.ExchangeAlgorithmType", "ExchangeAlgorithmType");
            feature.AddKnownType("System.Security.Authentication.CipherAlgorithmType", "CipherAlgorithmType");
            feature.AddKnownType("System.Security.Authentication.HashAlgorithmType", "HashAlgorithmType");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ChannelBinding", "ChannelBinding");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ChannelBindingKind", "ChannelBindingKind");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy", "ExtendedProtectionPolicy");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter", "ExtendedProtectionPolicyTypeConverter");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.PolicyEnforcement", "PolicyEnforcement");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ProtectionScenario", "ProtectionScenario");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.ServiceNameCollection", "ServiceNameCollection");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.TokenBindingType", "TokenBindingType");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.TokenBinding", "TokenBinding");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement", "ExtendedProtectionPolicyElement");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection", "ServiceNameElementCollection");
            feature.AddKnownType("System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement", "ServiceNameElement");
            feature.AddKnownType("System.Security.Cryptography.AsnEncodedData", "AsnEncodedData");
            feature.AddKnownType("System.Security.Cryptography.AsnEncodedDataCollection", "AsnEncodedDataCollection");
            feature.AddKnownType("System.Security.Cryptography.AsnEncodedDataEnumerator", "AsnEncodedDataEnumerator");
            feature.AddKnownType("System.Security.Cryptography.BigInt", "BigInt");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase", "CAPIBase");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+BLOBHEADER", "BLOBHEADER");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_ALT_NAME_INFO", "CERT_ALT_NAME_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_ALT_NAME_ENTRY", "CERT_ALT_NAME_ENTRY");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_ALT_NAME_ENTRY_UNION", "CERT_ALT_NAME_ENTRY_UNION");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_BASIC_CONSTRAINTS_INFO", "CERT_BASIC_CONSTRAINTS_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_BASIC_CONSTRAINTS2_INFO", "CERT_BASIC_CONSTRAINTS2_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_CHAIN_CONTEXT", "CERT_CHAIN_CONTEXT");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_CHAIN_ELEMENT", "CERT_CHAIN_ELEMENT");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_CHAIN_PARA", "CERT_CHAIN_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_CHAIN_POLICY_PARA", "CERT_CHAIN_POLICY_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_CHAIN_POLICY_STATUS", "CERT_CHAIN_POLICY_STATUS");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_CONTEXT", "CERT_CONTEXT");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_DSS_PARAMETERS", "CERT_DSS_PARAMETERS");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_ENHKEY_USAGE", "CERT_ENHKEY_USAGE");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_EXTENSION", "CERT_EXTENSION");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_ID", "CERT_ID");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_ID_UNION", "CERT_ID_UNION");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_ISSUER_SERIAL_NUMBER", "CERT_ISSUER_SERIAL_NUMBER");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_INFO", "CERT_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_KEY_USAGE_RESTRICTION_INFO", "CERT_KEY_USAGE_RESTRICTION_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_NAME_INFO", "CERT_NAME_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_NAME_VALUE", "CERT_NAME_VALUE");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_OTHER_NAME", "CERT_OTHER_NAME");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_POLICY_ID", "CERT_POLICY_ID");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_POLICIES_INFO", "CERT_POLICIES_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_POLICY_INFO", "CERT_POLICY_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_POLICY_QUALIFIER_INFO", "CERT_POLICY_QUALIFIER_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_PUBLIC_KEY_INFO", "CERT_PUBLIC_KEY_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_PUBLIC_KEY_INFO2", "CERT_PUBLIC_KEY_INFO2");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_RDN", "CERT_RDN");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_RDN_ATTR", "CERT_RDN_ATTR");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_SIMPLE_CHAIN", "CERT_SIMPLE_CHAIN");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_TEMPLATE_EXT", "CERT_TEMPLATE_EXT");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_TRUST_STATUS", "CERT_TRUST_STATUS");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CERT_USAGE_MATCH", "CERT_USAGE_MATCH");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CMS_RECIPIENT_INFO", "CMSG_CMS_RECIPIENT_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CMS_SIGNER_INFO", "CMSG_CMS_SIGNER_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA", "CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CTRL_DECRYPT_PARA", "CMSG_CTRL_DECRYPT_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA", "CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CTRL_KEY_TRANS_DECRYPT_PARA", "CMSG_CTRL_KEY_TRANS_DECRYPT_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO", "CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO", "CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_RC2_AUX_INFO", "CMSG_RC2_AUX_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_RECIPIENT_ENCODE_INFO", "CMSG_RECIPIENT_ENCODE_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO", "CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_ENVELOPED_ENCODE_INFO", "CMSG_ENVELOPED_ENCODE_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CTRL_KEY_AGREE_DECRYPT_PARA", "CMSG_CTRL_KEY_AGREE_DECRYPT_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_RECIPIENT_INFO", "CMSG_KEY_AGREE_RECIPIENT_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_CERT_ID_RECIPIENT_INFO", "CMSG_KEY_AGREE_CERT_ID_RECIPIENT_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_KEY_AGREE_PUBLIC_KEY_RECIPIENT_INFO", "CMSG_KEY_AGREE_PUBLIC_KEY_RECIPIENT_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_RECIPIENT_ENCRYPTED_KEY_INFO", "CMSG_RECIPIENT_ENCRYPTED_KEY_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA", "CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_KEY_TRANS_RECIPIENT_INFO", "CMSG_KEY_TRANS_RECIPIENT_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_SIGNED_ENCODE_INFO", "CMSG_SIGNED_ENCODE_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_SIGNER_ENCODE_INFO", "CMSG_SIGNER_ENCODE_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_SIGNER_INFO", "CMSG_SIGNER_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CMSG_STREAM_INFO", "CMSG_STREAM_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_ALGORITHM_IDENTIFIER", "CRYPT_ALGORITHM_IDENTIFIER");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_ALGORITHM_IDENTIFIER2", "CRYPT_ALGORITHM_IDENTIFIER2");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_ATTRIBUTE", "CRYPT_ATTRIBUTE");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_ATTRIBUTES", "CRYPT_ATTRIBUTES");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_ATTRIBUTE_TYPE_VALUE", "CRYPT_ATTRIBUTE_TYPE_VALUE");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_BIT_BLOB", "CRYPT_BIT_BLOB");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_KEY_PROV_INFO", "CRYPT_KEY_PROV_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_OID_INFO", "CRYPT_OID_INFO");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPT_RC2_CBC_PARAMETERS", "CRYPT_RC2_CBC_PARAMETERS");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+CRYPTOAPI_BLOB", "CRYPTOAPI_BLOB");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+DSSPUBKEY", "DSSPUBKEY");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+KEY_USAGE_STRUCT", "KEY_USAGE_STRUCT");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+PROV_ENUMALGS_EX", "PROV_ENUMALGS_EX");
            feature.AddKnownType("System.Security.Cryptography.CAPIBase+RSAPUBKEY", "RSAPUBKEY");
            feature.AddKnownType("System.Security.Cryptography.CAPINative", "CAPINative");
            feature.AddKnownType("System.Security.Cryptography.CAPISafe", "CAPISafe");
            feature.AddKnownType("System.Security.Cryptography.CAPIUnsafe", "CAPIUnsafe");
            feature.AddKnownType("System.Security.Cryptography.CAPIMethods", "CAPIMethods");
            feature.AddKnownType("System.Security.Cryptography.CAPI", "CAPI");
            feature.AddKnownType("System.Security.Cryptography.SafeLibraryHandle", "SafeLibraryHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeLocalAllocHandle", "SafeLocalAllocHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeCryptProvHandle", "SafeCryptProvHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeCertContextHandle", "SafeCertContextHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeCertStoreHandle", "SafeCertStoreHandle");
            feature.AddKnownType("System.Security.Cryptography.SafeCryptMsgHandle", "SafeCryptMsgHandle");
            feature.AddKnownType("System.Security.Cryptography.OidGroup", "OidGroup");
            feature.AddKnownType("System.Security.Cryptography.Oid", "Oid");
            feature.AddKnownType("System.Security.Cryptography.OidCollection", "OidCollection");
            feature.AddKnownType("System.Security.Cryptography.OidEnumerator", "OidEnumerator");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags", "X500DistinguishedNameFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X500DistinguishedName", "X500DistinguishedName");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509NameType", "X509NameType");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509IncludeOption", "X509IncludeOption");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.PublicKey", "PublicKey");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Certificate2", "X509Certificate2");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509FindType", "X509FindType");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Certificate2Collection", "X509Certificate2Collection");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator", "X509Certificate2Enumerator");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainStatusFlags", "X509ChainStatusFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainStatus", "X509ChainStatus");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Chain", "X509Chain");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainElement", "X509ChainElement");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainElementCollection", "X509ChainElementCollection");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator", "X509ChainElementEnumerator");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509RevocationMode", "X509RevocationMode");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509RevocationFlag", "X509RevocationFlag");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509VerificationFlags", "X509VerificationFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ChainPolicy", "X509ChainPolicy");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Extension", "X509Extension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509KeyUsageFlags", "X509KeyUsageFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509KeyUsageExtension", "X509KeyUsageExtension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension", "X509BasicConstraintsExtension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension", "X509EnhancedKeyUsageExtension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm", "X509SubjectKeyIdentifierHashAlgorithm");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension", "X509SubjectKeyIdentifierExtension");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ExtensionCollection", "X509ExtensionCollection");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator", "X509ExtensionEnumerator");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.StoreLocation", "StoreLocation");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.OpenFlags", "OpenFlags");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.StoreName", "StoreName");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Store", "X509Store");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509Utils", "X509Utils");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509CertificateCollection", "X509CertificateCollection");
            feature.AddKnownType("System.Security.Cryptography.X509Certificates.X509CertificateCollection+X509CertificateEnumerator", "X509CertificateCollection.X509CertificateEnumerator");
            feature.AddKnownType("System.Security.Permissions.StorePermission", "StorePermission");
            feature.AddKnownType("System.Security.Permissions.StorePermissionAttribute", "StorePermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.StorePermissionFlags", "StorePermissionFlags");
            feature.AddKnownType("System.Security.Permissions.TypeDescriptorPermissionFlags", "TypeDescriptorPermissionFlags");
            feature.AddKnownType("System.Security.Permissions.TypeDescriptorPermission", "TypeDescriptorPermission");
            feature.AddKnownType("System.Security.Permissions.TypeDescriptorPermissionAttribute", "TypeDescriptorPermissionAttribute");
            feature.AddKnownType("System.Security.Permissions.ResourcePermissionBase", "ResourcePermissionBase");
            feature.AddKnownType("System.Security.Permissions.ResourcePermissionBaseEntry", "ResourcePermissionBaseEntry");
            feature.AddKnownType("System.Text.RegularExpressions.Regex", "Regex");
            feature.AddKnownType("System.Text.RegularExpressions.CachedCodeEntry", "CachedCodeEntry");
            feature.AddKnownType("System.Text.RegularExpressions.ExclusiveReference", "ExclusiveReference");
            feature.AddKnownType("System.Text.RegularExpressions.SharedReference", "SharedReference");
            feature.AddKnownType("System.Text.RegularExpressions.RegexBoyerMoore", "RegexBoyerMoore");
            feature.AddKnownType("System.Text.RegularExpressions.Capture", "Capture");
            feature.AddKnownType("System.Text.RegularExpressions.CaptureCollection", "CaptureCollection");
            feature.AddKnownType("System.Text.RegularExpressions.CaptureEnumerator", "CaptureEnumerator");
            feature.AddKnownType("System.Text.RegularExpressions.RegexCharClass", "RegexCharClass");
            feature.AddKnownType("System.Text.RegularExpressions.RegexCode", "RegexCode");
            feature.AddKnownType("System.Text.RegularExpressions.RegexCompilationInfo", "RegexCompilationInfo");
            feature.AddKnownType("System.Text.RegularExpressions.RegexCompiler", "RegexCompiler");
            feature.AddKnownType("System.Text.RegularExpressions.RegexCompiler+BacktrackNote", "BacktrackNote");
            feature.AddKnownType("System.Text.RegularExpressions.RegexTypeCompiler", "RegexTypeCompiler");
            feature.AddKnownType("System.Text.RegularExpressions.RegexLWCGCompiler", "RegexLWCGCompiler");
            feature.AddKnownType("System.Text.RegularExpressions.RegexFCD", "RegexFCD");
            feature.AddKnownType("System.Text.RegularExpressions.RegexFC", "RegexFC");
            feature.AddKnownType("System.Text.RegularExpressions.RegexPrefix", "RegexPrefix");
            feature.AddKnownType("System.Text.RegularExpressions.Group", "Group");
            feature.AddKnownType("System.Text.RegularExpressions.GroupCollection", "GroupCollection");
            feature.AddKnownType("System.Text.RegularExpressions.GroupEnumerator", "GroupEnumerator");
            feature.AddKnownType("System.Text.RegularExpressions.RegexInterpreter", "RegexInterpreter");
            feature.AddKnownType("System.Text.RegularExpressions.Match", "Match");
            feature.AddKnownType("System.Text.RegularExpressions.MatchSparse", "MatchSparse");
            feature.AddKnownType("System.Text.RegularExpressions.MatchCollection", "MatchCollection");
            feature.AddKnownType("System.Text.RegularExpressions.MatchEnumerator", "MatchEnumerator");
            feature.AddKnownType("System.Text.RegularExpressions.RegexMatchTimeoutException", "RegexMatchTimeoutException");
            feature.AddKnownType("System.Text.RegularExpressions.RegexNode", "RegexNode");
            feature.AddKnownType("System.Text.RegularExpressions.RegexOptions", "RegexOptions");
            feature.AddKnownType("System.Text.RegularExpressions.RegexParser", "RegexParser");
            feature.AddKnownType("System.Text.RegularExpressions.RegexReplacement", "RegexReplacement");
            feature.AddKnownType("System.Text.RegularExpressions.RegexRunner", "RegexRunner");
            feature.AddKnownType("System.Text.RegularExpressions.RegexRunnerFactory", "RegexRunnerFactory");
            feature.AddKnownType("System.Text.RegularExpressions.RegexTree", "RegexTree");
            feature.AddKnownType("System.Text.RegularExpressions.RegexWriter", "RegexWriter");
            feature.AddKnownType("System.Text.RegularExpressions.CompiledRegexRunner", "CompiledRegexRunner");
            feature.AddKnownType("System.Text.RegularExpressions.CompiledRegexRunnerFactory", "CompiledRegexRunnerFactory");
            feature.AddKnownType("System.Threading.Semaphore", "Semaphore");
            feature.AddKnownType("System.Threading.BarrierPostPhaseException", "BarrierPostPhaseException");
            feature.AddKnownType("System.Threading.Barrier", "Barrier");
            feature.AddKnownType("System.Threading.ThreadExceptionEventArgs", "ThreadExceptionEventArgs");
            feature.AddKnownType("System.Timers.ElapsedEventArgs", "ElapsedEventArgs");
            feature.AddKnownType("System.Timers.Timer", "Timer");
            feature.AddKnownType("System.Timers.Timer+FILE_TIME", "FILE_TIME");
            feature.AddKnownType("System.Timers.TimersDescriptionAttribute", "TimersDescriptionAttribute");
            feature.AddKnownType("System.Web.AspNetHostingPermissionLevel", "AspNetHostingPermissionLevel");
            feature.AddKnownType("System.Web.AspNetHostingPermissionAttribute", "AspNetHostingPermissionAttribute");
            feature.AddKnownType("System.Web.AspNetHostingPermission", "AspNetHostingPermission");
            feature.AddKnownType("System.Windows.Input.BuildInfo", "BuildInfo");
            feature.AddKnownType("System.Windows.Input.ICommand", "ICommand");
            feature.AddKnownType("System.Windows.Markup.ValueSerializerAttribute", "ValueSerializerAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Memory", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.SequencePosition", "SequencePosition");
            feature.AddKnownType("System.ExceptionArgument", "ExceptionArgument");
            feature.AddKnownType("System.NumberBuffer", "NumberBuffer");
            feature.AddKnownType("System.Memory`1", "Memory`1'1");
            feature.AddKnownType("System.MemoryDebugView`1", "MemoryDebugView`1'1");
            feature.AddKnownType("System.ReadOnlyMemory`1", "ReadOnlyMemory`1'1");
            feature.AddKnownType("System.ReadOnlySpan`1", "ReadOnlySpan`1'1");
            feature.AddKnownType("System.ReadOnlySpan`1+Enumerator", "ReadOnlySpan`1'1.Enumerator'1");
            feature.AddKnownType("System.Span`1", "Span`1'1");
            feature.AddKnownType("System.Span`1+Enumerator", "Span`1'1.Enumerator'1");
            feature.AddKnownType("System.SpanDebugView`1", "SpanDebugView`1'1");
            feature.AddKnownType("System.SpanHelpers+ComparerComparable`2", "ComparerComparable`2'2");
            feature.AddKnownType("System.SpanHelpers+Reg64", "Reg64");
            feature.AddKnownType("System.SpanHelpers+Reg32", "Reg32");
            feature.AddKnownType("System.SpanHelpers+Reg16", "Reg16");
            feature.AddKnownType("System.NUInt", "NUInt");
            feature.AddKnownType("System.Pinnable`1", "Pinnable`1'1");
            feature.AddKnownType("System.MutableDecimal", "MutableDecimal");
            feature.AddKnownType("System.Buffers.ArrayMemoryPool`1", "ArrayMemoryPool`1'1");
            feature.AddKnownType("System.Buffers.ArrayMemoryPool`1+ArrayMemoryPoolBuffer", "ArrayMemoryPoolBuffer'1");
            feature.AddKnownType("System.Buffers.IBufferWriter`1", "IBufferWriter`1'1");
            feature.AddKnownType("System.Buffers.MemoryPool`1", "MemoryPool`1'1");
            feature.AddKnownType("System.Buffers.OperationStatus", "OperationStatus");
            feature.AddKnownType("System.Buffers.ReadOnlySequence`1", "ReadOnlySequence`1'1");
            feature.AddKnownType("System.Buffers.ReadOnlySequence`1+Enumerator", "ReadOnlySequence`1'1.Enumerator'1");
            feature.AddKnownType("System.Buffers.ReadOnlySequence`1+SequenceType", "SequenceType'1");
            feature.AddKnownType("System.Buffers.ReadOnlySequenceDebugView`1", "ReadOnlySequenceDebugView`1'1");
            feature.AddKnownType("System.Buffers.ReadOnlySequenceDebugView`1+ReadOnlySequenceDebugViewSegments", "ReadOnlySequenceDebugView`1'1.ReadOnlySequenceDebugViewSegments'1");
            feature.AddKnownType("System.Buffers.ReadOnlySequenceSegment`1", "ReadOnlySequenceSegment`1'1");
            feature.AddKnownType("System.Buffers.StandardFormat", "StandardFormat");
            feature.AddKnownType("System.Buffers.IPinnable", "IPinnable");
            feature.AddKnownType("System.Buffers.IMemoryOwner`1", "IMemoryOwner`1'1");
            feature.AddKnownType("System.Buffers.MemoryHandle", "MemoryHandle");
            feature.AddKnownType("System.Buffers.MemoryManager`1", "MemoryManager`1'1");
            feature.AddKnownType("System.Buffers.Text.FormattingHelpers+HexCasing", "FormattingHelpers.HexCasing");
            feature.AddKnownType("System.Buffers.Text.Utf8Formatter+DecomposedGuid", "DecomposedGuid");
            feature.AddKnownType("System.Buffers.Text.Utf8Parser+ParseNumberOptions", "ParseNumberOptions");
            feature.AddKnownType("System.Buffers.Text.Utf8Parser+ComponentParseResult", "ComponentParseResult");
            feature.AddKnownType("System.Buffers.Text.Utf8Parser+TimeSpanSplitter", "TimeSpanSplitter");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute", "IsReadOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IsByRefLikeAttribute", "IsByRefLikeAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.__BlockReflectionAttribute", "__BlockReflectionAttribute");
            feature.AddKnownType("System.Net.Http.SR", "SR");
            feature.AddKnownType("System.Net.Http.FormUrlEncodedContent", "FormUrlEncodedContent");
            feature.AddKnownType("System.Net.Http.MultipartContent", "MultipartContent");
            feature.AddKnownType("System.Net.Http.MultipartFormDataContent", "MultipartFormDataContent");
            feature.AddKnownType("System.Net.Http.HttpClientHandler", "HttpClientHandler");
            feature.AddKnownType("System.Net.Http.HttpParseResult", "HttpParseResult");
            feature.AddKnownType("System.Net.Http.HttpCompletionOption", "HttpCompletionOption");
            feature.AddKnownType("System.Net.Http.ByteArrayContent", "ByteArrayContent");
            feature.AddKnownType("System.Net.Http.DelegatingHandler", "DelegatingHandler");
            feature.AddKnownType("System.Net.Http.HttpRequestException", "HttpRequestException");
            feature.AddKnownType("System.Net.Http.HttpMessageHandler", "HttpMessageHandler");
            feature.AddKnownType("System.Net.Http.HttpMessageInvoker", "HttpMessageInvoker");
            feature.AddKnownType("System.Net.Http.HttpClient", "HttpClient");
            feature.AddKnownType("System.Net.Http.HttpContent", "HttpContent");
            feature.AddKnownType("System.Net.Http.HttpMethod", "HttpMethod");
            feature.AddKnownType("System.Net.Http.HttpRequestMessage", "HttpRequestMessage");
            feature.AddKnownType("System.Net.Http.HttpResponseMessage", "HttpResponseMessage");
            feature.AddKnownType("System.Net.Http.MessageProcessingHandler", "MessageProcessingHandler");
            feature.AddKnownType("System.Net.Http.StreamContent", "StreamContent");
            feature.AddKnownType("System.Net.Http.StreamToStreamCopy", "StreamToStreamCopy");
            feature.AddKnownType("System.Net.Http.StringContent", "StringContent");
            feature.AddKnownType("System.Net.Http.ClientCertificateOption", "ClientCertificateOption");
            feature.AddKnownType("System.Net.Http.DelegatingStream", "DelegatingStream");
            feature.AddKnownType("System.Net.Http.RtcRequestMessage", "RtcRequestMessage");
            feature.AddKnownType("System.Net.Http.INetworkTransportSettings", "INetworkTransportSettings");
            feature.AddKnownType("System.Net.Http.TRANSPORT_SETTING_ID", "TRANSPORT_SETTING_ID");
            feature.AddKnownType("System.Net.Http.INotificationTransportSync", "INotificationTransportSync");
            feature.AddKnownType("System.Net.Http.Headers.AuthenticationHeaderValue", "AuthenticationHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.BaseHeaderParser", "BaseHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.ByteArrayHeaderParser", "ByteArrayHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.CacheControlHeaderParser", "CacheControlHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.CacheControlHeaderValue", "CacheControlHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.ContentDispositionHeaderValue", "ContentDispositionHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.ContentRangeHeaderValue", "ContentRangeHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.DateHeaderParser", "DateHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.EntityTagHeaderValue", "EntityTagHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.GenericHeaderParser", "GenericHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.HttpContentHeaders", "HttpContentHeaders");
            feature.AddKnownType("System.Net.Http.Headers.HttpGeneralHeaders", "HttpGeneralHeaders");
            feature.AddKnownType("System.Net.Http.Headers.HttpHeaderParser", "HttpHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.HttpHeaders", "HttpHeaders");
            feature.AddKnownType("System.Net.Http.Headers.HttpHeaderValueCollection`1", "HttpHeaderValueCollection`1'1");
            feature.AddKnownType("System.Net.Http.Headers.HttpRequestHeaders", "HttpRequestHeaders");
            feature.AddKnownType("System.Net.Http.Headers.HttpResponseHeaders", "HttpResponseHeaders");
            feature.AddKnownType("System.Net.Http.Headers.Int32NumberHeaderParser", "Int32NumberHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.Int64NumberHeaderParser", "Int64NumberHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.MediaTypeHeaderParser", "MediaTypeHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.MediaTypeHeaderValue", "MediaTypeHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.MediaTypeWithQualityHeaderValue", "MediaTypeWithQualityHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.NameValueHeaderValue", "NameValueHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.NameValueWithParametersHeaderValue", "NameValueWithParametersHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.ObjectCollection`1", "ObjectCollection`1'1");
            feature.AddKnownType("System.Net.Http.Headers.ProductHeaderValue", "ProductHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.ProductInfoHeaderParser", "ProductInfoHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.ProductInfoHeaderValue", "ProductInfoHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.RangeConditionHeaderValue", "RangeConditionHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.RangeHeaderValue", "RangeHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.RangeItemHeaderValue", "RangeItemHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.RetryConditionHeaderValue", "RetryConditionHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.StringWithQualityHeaderValue", "StringWithQualityHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.TimeSpanHeaderParser", "TimeSpanHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.TransferCodingHeaderParser", "TransferCodingHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.TransferCodingHeaderValue", "TransferCodingHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.TransferCodingWithQualityHeaderValue", "TransferCodingWithQualityHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.UriHeaderParser", "UriHeaderParser");
            feature.AddKnownType("System.Net.Http.Headers.ViaHeaderValue", "ViaHeaderValue");
            feature.AddKnownType("System.Net.Http.Headers.WarningHeaderValue", "WarningHeaderValue");
            feature.AddKnownType("System.Numerics.BigInteger", "BigInteger");
            feature.AddKnownType("System.Numerics.Complex", "Complex");
            feature.AddKnownType("System.Numerics.JitIntrinsicAttribute", "JitIntrinsicAttribute");
            feature.AddKnownType("System.Numerics.Matrix3x2", "Matrix3x2");
            feature.AddKnownType("System.Numerics.Matrix4x4", "Matrix4x4");
            feature.AddKnownType("System.Numerics.Plane", "Plane");
            feature.AddKnownType("System.Numerics.Quaternion", "Quaternion");
            feature.AddKnownType("System.Numerics.Vector2", "Vector2");
            feature.AddKnownType("System.Numerics.Vector3", "Vector3");
            feature.AddKnownType("System.Numerics.Vector4", "Vector4");
            feature.AddKnownType("System.Numerics.ConstantHelper", "ConstantHelper");
            feature.AddKnownType("System.Numerics.JitIntrinsicAttribute", "JitIntrinsicAttribute");
            feature.AddKnownType("System.Numerics.Register", "Register");
            feature.AddKnownType("System.Numerics.Vector`1", "Vector`1'1");
            feature.AddKnownType("System.Numerics.Vector`1+VectorSizeHelper", "VectorSizeHelper'1");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute", "IsReadOnlyAttribute");
            feature.AddKnownType("System.Runtime.Versioning.NonVersionableAttribute", "NonVersionableAttribute");
            feature.AddKnownType("Microsoft.CodeAnalysis.EmbeddedAttribute,System.Threading.Tasks.Extensions", "Microsoft.CodeAnalysis.EmbeddedAttribute");
            feature.AddKnownType("System.ExceptionArgument", "ExceptionArgument");
            feature.AddKnownType("System.Diagnostics.StackTraceHiddenAttribute", "StackTraceHiddenAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.IsReadOnlyAttribute", "IsReadOnlyAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncMethodBuilderAttribute", "AsyncMethodBuilderAttribute");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder", "AsyncValueTaskMethodBuilder");
            feature.AddKnownType("System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1", "AsyncValueTaskMethodBuilder`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable", "ConfiguredValueTaskAwaitable");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable+ConfiguredValueTaskAwaiter", "ConfiguredValueTaskAwaitable.ConfiguredValueTaskAwaiter");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1", "ConfiguredValueTaskAwaitable`1'1");
            feature.AddKnownType("System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1+ConfiguredValueTaskAwaiter", "ConfiguredValueTaskAwaitable`1'1.ConfiguredValueTaskAwaiter'1");
            feature.AddKnownType("System.Runtime.CompilerServices.ValueTaskAwaiter", "ValueTaskAwaiter");
            feature.AddKnownType("System.Runtime.CompilerServices.ValueTaskAwaiter`1", "ValueTaskAwaiter`1'1");
            feature.AddKnownType("System.Threading.Tasks.ValueTask", "ValueTask");
            feature.AddKnownType("System.Threading.Tasks.ValueTask+ValueTaskSourceAsTask", "ValueTaskSourceAsTask");
            feature.AddKnownType("System.Threading.Tasks.ValueTask`1", "ValueTask`1'1");
            feature.AddKnownType("System.Threading.Tasks.ValueTask`1+ValueTaskSourceAsTask", "ValueTaskSourceAsTask'1");
            feature.AddKnownType("System.Threading.Tasks.Sources.ValueTaskSourceOnCompletedFlags", "ValueTaskSourceOnCompletedFlags");
            feature.AddKnownType("System.Threading.Tasks.Sources.ValueTaskSourceStatus", "ValueTaskSourceStatus");
            feature.AddKnownType("System.Threading.Tasks.Sources.IValueTaskSource", "IValueTaskSource");
            feature.AddKnownType("System.Threading.Tasks.Sources.IValueTaskSource`1", "IValueTaskSource`1'1");
            feature.AddKnownType("MS.Internal.Xml.Cache.TextBlockType,System.Xml", "MS.Internal.Xml.Cache.TextBlockType");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathDocumentBuilder,System.Xml", "MS.Internal.Xml.Cache.XPathDocumentBuilder");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathDocumentBaseIterator,System.Xml", "MS.Internal.Xml.Cache.XPathDocumentBaseIterator");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathDocumentElementChildIterator,System.Xml", "MS.Internal.Xml.Cache.XPathDocumentElementChildIterator");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathDocumentKindChildIterator,System.Xml", "MS.Internal.Xml.Cache.XPathDocumentKindChildIterator");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathDocumentElementDescendantIterator,System.Xml", "MS.Internal.Xml.Cache.XPathDocumentElementDescendantIterator");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathDocumentKindDescendantIterator,System.Xml", "MS.Internal.Xml.Cache.XPathDocumentKindDescendantIterator");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathDocumentNavigator,System.Xml", "MS.Internal.Xml.Cache.XPathDocumentNavigator");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathNode,System.Xml", "MS.Internal.Xml.Cache.XPathNode");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathNodeRef,System.Xml", "MS.Internal.Xml.Cache.XPathNodeRef");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathNodeHelper,System.Xml", "MS.Internal.Xml.Cache.XPathNodeHelper");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathNodePageInfo,System.Xml", "MS.Internal.Xml.Cache.XPathNodePageInfo");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathNodeInfoAtom,System.Xml", "MS.Internal.Xml.Cache.XPathNodeInfoAtom");
            feature.AddKnownType("MS.Internal.Xml.Cache.XPathNodeInfoTable,System.Xml", "MS.Internal.Xml.Cache.XPathNodeInfoTable");
            feature.AddKnownType("MS.Internal.Xml.XPath.AbsoluteQuery,System.Xml", "MS.Internal.Xml.XPath.AbsoluteQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.AstNode,System.Xml", "MS.Internal.Xml.XPath.AstNode");
            feature.AddKnownType("MS.Internal.Xml.XPath.AstNode+AstType,System.Xml", "MS.Internal.Xml.XPath.MS.Internal.Xml.XPath.AstNode.AstType");
            feature.AddKnownType("MS.Internal.Xml.XPath.AttributeQuery,System.Xml", "MS.Internal.Xml.XPath.AttributeQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.Axis,System.Xml", "MS.Internal.Xml.XPath.Axis");
            feature.AddKnownType("MS.Internal.Xml.XPath.Axis+AxisType,System.Xml", "MS.Internal.Xml.XPath.MS.Internal.Xml.XPath.Axis.AxisType");
            feature.AddKnownType("MS.Internal.Xml.XPath.BaseAxisQuery,System.Xml", "MS.Internal.Xml.XPath.BaseAxisQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.BooleanExpr,System.Xml", "MS.Internal.Xml.XPath.BooleanExpr");
            feature.AddKnownType("MS.Internal.Xml.XPath.BooleanFunctions,System.Xml", "MS.Internal.Xml.XPath.BooleanFunctions");
            feature.AddKnownType("MS.Internal.Xml.XPath.CacheAxisQuery,System.Xml", "MS.Internal.Xml.XPath.CacheAxisQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.CacheChildrenQuery,System.Xml", "MS.Internal.Xml.XPath.CacheChildrenQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.CacheOutputQuery,System.Xml", "MS.Internal.Xml.XPath.CacheOutputQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.ChildrenQuery,System.Xml", "MS.Internal.Xml.XPath.ChildrenQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.ClonableStack`1,System.Xml", "MS.Internal.Xml.XPath.ClonableStack`1'1");
            feature.AddKnownType("MS.Internal.Xml.XPath.CompiledXpathExpr,System.Xml", "MS.Internal.Xml.XPath.CompiledXpathExpr");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathComparerHelper,System.Xml", "MS.Internal.Xml.XPath.XPathComparerHelper");
            feature.AddKnownType("MS.Internal.Xml.XPath.ContextQuery,System.Xml", "MS.Internal.Xml.XPath.ContextQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.DescendantBaseQuery,System.Xml", "MS.Internal.Xml.XPath.DescendantBaseQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.DescendantQuery,System.Xml", "MS.Internal.Xml.XPath.DescendantQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.DescendantOverDescendantQuery,System.Xml", "MS.Internal.Xml.XPath.DescendantOverDescendantQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.DocumentOrderQuery,System.Xml", "MS.Internal.Xml.XPath.DocumentOrderQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.EmptyQuery,System.Xml", "MS.Internal.Xml.XPath.EmptyQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.ExtensionQuery,System.Xml", "MS.Internal.Xml.XPath.ExtensionQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.FunctionQuery,System.Xml", "MS.Internal.Xml.XPath.FunctionQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.Filter,System.Xml", "MS.Internal.Xml.XPath.Filter");
            feature.AddKnownType("MS.Internal.Xml.XPath.FilterQuery,System.Xml", "MS.Internal.Xml.XPath.FilterQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.FollowingQuery,System.Xml", "MS.Internal.Xml.XPath.FollowingQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.FollSiblingQuery,System.Xml", "MS.Internal.Xml.XPath.FollSiblingQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.ForwardPositionQuery,System.Xml", "MS.Internal.Xml.XPath.ForwardPositionQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.Function,System.Xml", "MS.Internal.Xml.XPath.Function");
            feature.AddKnownType("MS.Internal.Xml.XPath.Function+FunctionType,System.Xml", "MS.Internal.Xml.XPath.MS.Internal.Xml.XPath.Function.FunctionType");
            feature.AddKnownType("MS.Internal.Xml.XPath.Group,System.Xml", "MS.Internal.Xml.XPath.Group");
            feature.AddKnownType("MS.Internal.Xml.XPath.GroupQuery,System.Xml", "MS.Internal.Xml.XPath.GroupQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.IDQuery,System.Xml", "MS.Internal.Xml.XPath.IDQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.IteratorFilter,System.Xml", "MS.Internal.Xml.XPath.IteratorFilter");
            feature.AddKnownType("MS.Internal.Xml.XPath.QueryProps,System.Xml", "MS.Internal.Xml.XPath.QueryProps");
            feature.AddKnownType("MS.Internal.Xml.XPath.Query,System.Xml", "MS.Internal.Xml.XPath.Query");
            feature.AddKnownType("MS.Internal.Xml.XPath.LogicalExpr,System.Xml", "MS.Internal.Xml.XPath.LogicalExpr");
            feature.AddKnownType("MS.Internal.Xml.XPath.MergeFilterQuery,System.Xml", "MS.Internal.Xml.XPath.MergeFilterQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.NamespaceQuery,System.Xml", "MS.Internal.Xml.XPath.NamespaceQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.NodeFunctions,System.Xml", "MS.Internal.Xml.XPath.NodeFunctions");
            feature.AddKnownType("MS.Internal.Xml.XPath.NumberFunctions,System.Xml", "MS.Internal.Xml.XPath.NumberFunctions");
            feature.AddKnownType("MS.Internal.Xml.XPath.NumericExpr,System.Xml", "MS.Internal.Xml.XPath.NumericExpr");
            feature.AddKnownType("MS.Internal.Xml.XPath.Operand,System.Xml", "MS.Internal.Xml.XPath.Operand");
            feature.AddKnownType("MS.Internal.Xml.XPath.OperandQuery,System.Xml", "MS.Internal.Xml.XPath.OperandQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.Operator,System.Xml", "MS.Internal.Xml.XPath.Operator");
            feature.AddKnownType("MS.Internal.Xml.XPath.Operator+Op,System.Xml", "MS.Internal.Xml.XPath.MS.Internal.Xml.XPath.Operator.Op");
            feature.AddKnownType("MS.Internal.Xml.XPath.ParentQuery,System.Xml", "MS.Internal.Xml.XPath.ParentQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.PrecedingQuery,System.Xml", "MS.Internal.Xml.XPath.PrecedingQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.PreSiblingQuery,System.Xml", "MS.Internal.Xml.XPath.PreSiblingQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.QueryBuilder,System.Xml", "MS.Internal.Xml.XPath.QueryBuilder");
            feature.AddKnownType("MS.Internal.Xml.XPath.UnionExpr,System.Xml", "MS.Internal.Xml.XPath.UnionExpr");
            feature.AddKnownType("MS.Internal.Xml.XPath.ResetableIterator,System.Xml", "MS.Internal.Xml.XPath.ResetableIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.ReversePositionQuery,System.Xml", "MS.Internal.Xml.XPath.ReversePositionQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.Root,System.Xml", "MS.Internal.Xml.XPath.Root");
            feature.AddKnownType("MS.Internal.Xml.XPath.SortQuery,System.Xml", "MS.Internal.Xml.XPath.SortQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.SortKey,System.Xml", "MS.Internal.Xml.XPath.SortKey");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathSortComparer,System.Xml", "MS.Internal.Xml.XPath.XPathSortComparer");
            feature.AddKnownType("MS.Internal.Xml.XPath.StringFunctions,System.Xml", "MS.Internal.Xml.XPath.StringFunctions");
            feature.AddKnownType("MS.Internal.Xml.XPath.ValueQuery,System.Xml", "MS.Internal.Xml.XPath.ValueQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.Variable,System.Xml", "MS.Internal.Xml.XPath.Variable");
            feature.AddKnownType("MS.Internal.Xml.XPath.VariableQuery,System.Xml", "MS.Internal.Xml.XPath.VariableQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathAncestorIterator,System.Xml", "MS.Internal.Xml.XPath.XPathAncestorIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathAncestorQuery,System.Xml", "MS.Internal.Xml.XPath.XPathAncestorQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathArrayIterator,System.Xml", "MS.Internal.Xml.XPath.XPathArrayIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathAxisIterator,System.Xml", "MS.Internal.Xml.XPath.XPathAxisIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathChildIterator,System.Xml", "MS.Internal.Xml.XPath.XPathChildIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathDescendantIterator,System.Xml", "MS.Internal.Xml.XPath.XPathDescendantIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathEmptyIterator,System.Xml", "MS.Internal.Xml.XPath.XPathEmptyIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathMultyIterator,System.Xml", "MS.Internal.Xml.XPath.XPathMultyIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathParser,System.Xml", "MS.Internal.Xml.XPath.XPathParser");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathScanner,System.Xml", "MS.Internal.Xml.XPath.XPathScanner");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathScanner+LexKind,System.Xml", "MS.Internal.Xml.XPath.MS.Internal.Xml.XPath.XPathScanner.LexKind");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathSelectionIterator,System.Xml", "MS.Internal.Xml.XPath.XPathSelectionIterator");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathSelfQuery,System.Xml", "MS.Internal.Xml.XPath.XPathSelfQuery");
            feature.AddKnownType("MS.Internal.Xml.XPath.XPathSingletonIterator,System.Xml", "MS.Internal.Xml.XPath.XPathSingletonIterator");
            feature.AddKnownType("System.InvariantComparer", "InvariantComparer");
            feature.AddKnownType("System.Xml.Base64Decoder", "Base64Decoder");
            feature.AddKnownType("System.Xml.Base64Encoder", "Base64Encoder");
            feature.AddKnownType("System.Xml.XmlRawWriterBase64Encoder", "XmlRawWriterBase64Encoder");
            feature.AddKnownType("System.Xml.XmlTextWriterBase64Encoder", "XmlTextWriterBase64Encoder");
            feature.AddKnownType("System.Xml.BinHexDecoder", "BinHexDecoder");
            feature.AddKnownType("System.Xml.BitStack", "BitStack");
            feature.AddKnownType("System.Xml.ByteStack", "ByteStack");
            feature.AddKnownType("System.Xml.XmlNamedNodeMap", "XmlNamedNodeMap");
            feature.AddKnownType("System.Xml.XmlNamedNodeMap+SmallXmlNodeList", "SmallXmlNodeList");
            feature.AddKnownType("System.Xml.EmptyEnumerator", "EmptyEnumerator");
            feature.AddKnownType("System.Xml.HWStack", "HWStack");
            feature.AddKnownType("System.Xml.IApplicationResourceStreamResolver", "IApplicationResourceStreamResolver");
            feature.AddKnownType("System.Xml.IHasXmlNode", "IHasXmlNode");
            feature.AddKnownType("System.Xml.IXmlLineInfo", "IXmlLineInfo");
            feature.AddKnownType("System.Xml.PositionInfo", "PositionInfo");
            feature.AddKnownType("System.Xml.ReaderPositionInfo", "ReaderPositionInfo");
            feature.AddKnownType("System.Xml.IXmlNamespaceResolver", "IXmlNamespaceResolver");
            feature.AddKnownType("System.Xml.LineInfo", "LineInfo");
            feature.AddKnownType("System.Xml.NameTable", "NameTable");
            feature.AddKnownType("System.Xml.ValidateNames+Flags", "Flags");
            feature.AddKnownType("System.Xml.XmlCharType", "XmlCharType");
            feature.AddKnownType("System.Xml.ExceptionType", "ExceptionType");
            feature.AddKnownType("System.Xml.XmlDateTimeSerializationMode", "XmlDateTimeSerializationMode");
            feature.AddKnownType("System.Xml.XmlConvert", "XmlConvert");
            feature.AddKnownType("System.Xml.XmlDownloadManager", "XmlDownloadManager");
            feature.AddKnownType("System.Xml.OpenedHost", "OpenedHost");
            feature.AddKnownType("System.Xml.XmlRegisteredNonCachedStream", "XmlRegisteredNonCachedStream");
            feature.AddKnownType("System.Xml.XmlCachedStream", "XmlCachedStream");
            feature.AddKnownType("System.Xml.UTF16Decoder", "UTF16Decoder");
            feature.AddKnownType("System.Xml.SafeAsciiDecoder", "SafeAsciiDecoder");
            feature.AddKnownType("System.Xml.Ucs4Encoding", "Ucs4Encoding");
            feature.AddKnownType("System.Xml.Ucs4Encoding1234", "Ucs4Encoding1234");
            feature.AddKnownType("System.Xml.Ucs4Encoding4321", "Ucs4Encoding4321");
            feature.AddKnownType("System.Xml.Ucs4Encoding2143", "Ucs4Encoding2143");
            feature.AddKnownType("System.Xml.Ucs4Encoding3412", "Ucs4Encoding3412");
            feature.AddKnownType("System.Xml.Ucs4Decoder", "Ucs4Decoder");
            feature.AddKnownType("System.Xml.Ucs4Decoder4321", "Ucs4Decoder4321");
            feature.AddKnownType("System.Xml.Ucs4Decoder1234", "Ucs4Decoder1234");
            feature.AddKnownType("System.Xml.Ucs4Decoder2143", "Ucs4Decoder2143");
            feature.AddKnownType("System.Xml.Ucs4Decoder3412", "Ucs4Decoder3412");
            feature.AddKnownType("System.Xml.XmlException", "XmlException");
            feature.AddKnownType("System.Xml.XmlNamespaceManager", "XmlNamespaceManager");
            feature.AddKnownType("System.Xml.XmlNamespaceScope", "XmlNamespaceScope");
            feature.AddKnownType("System.Xml.XmlNameTable", "XmlNameTable");
            feature.AddKnownType("System.Xml.XmlNodeOrder", "XmlNodeOrder");
            feature.AddKnownType("System.Xml.XmlNodeType", "XmlNodeType");
            feature.AddKnownType("System.Xml.XmlNullResolver", "XmlNullResolver");
            feature.AddKnownType("System.Xml.XmlQualifiedName", "XmlQualifiedName");
            feature.AddKnownType("System.Xml.XmlResolver", "XmlResolver");
            feature.AddKnownType("System.Xml.XmlSecureResolver", "XmlSecureResolver");
            feature.AddKnownType("System.Xml.XmlUrlResolver", "XmlUrlResolver");
            feature.AddKnownType("System.Xml.XmlXapResolver", "XmlXapResolver");
            feature.AddKnownType("System.Xml.CharEntityEncoderFallback", "CharEntityEncoderFallback");
            feature.AddKnownType("System.Xml.CharEntityEncoderFallbackBuffer", "CharEntityEncoderFallbackBuffer");
            feature.AddKnownType("System.Xml.ConformanceLevel", "ConformanceLevel");
            feature.AddKnownType("System.Xml.DtdProcessing", "DtdProcessing");
            feature.AddKnownType("System.Xml.EntityHandling", "EntityHandling");
            feature.AddKnownType("System.Xml.HtmlEncodedRawTextWriter", "HtmlEncodedRawTextWriter");
            feature.AddKnownType("System.Xml.HtmlEncodedRawTextWriterIndent", "HtmlEncodedRawTextWriterIndent");
            feature.AddKnownType("System.Xml.HtmlTernaryTree", "HtmlTernaryTree");
            feature.AddKnownType("System.Xml.HtmlUtf8RawTextWriter", "HtmlUtf8RawTextWriter");
            feature.AddKnownType("System.Xml.HtmlUtf8RawTextWriterIndent", "HtmlUtf8RawTextWriterIndent");
            feature.AddKnownType("System.Xml.IDtdInfo", "IDtdInfo");
            feature.AddKnownType("System.Xml.IDtdAttributeListInfo", "IDtdAttributeListInfo");
            feature.AddKnownType("System.Xml.IDtdAttributeInfo", "IDtdAttributeInfo");
            feature.AddKnownType("System.Xml.IDtdDefaultAttributeInfo", "IDtdDefaultAttributeInfo");
            feature.AddKnownType("System.Xml.IDtdEntityInfo", "IDtdEntityInfo");
            feature.AddKnownType("System.Xml.IDtdParser", "IDtdParser");
            feature.AddKnownType("System.Xml.IDtdParserAdapter", "IDtdParserAdapter");
            feature.AddKnownType("System.Xml.IDtdParserAdapterWithValidation", "IDtdParserAdapterWithValidation");
            feature.AddKnownType("System.Xml.IDtdParserAdapterV1", "IDtdParserAdapterV1");
            feature.AddKnownType("System.Xml.IncrementalReadDecoder", "IncrementalReadDecoder");
            feature.AddKnownType("System.Xml.IncrementalReadDummyDecoder", "IncrementalReadDummyDecoder");
            feature.AddKnownType("System.Xml.IncrementalReadCharsDecoder", "IncrementalReadCharsDecoder");
            feature.AddKnownType("System.Xml.IValidationEventHandling", "IValidationEventHandling");
            feature.AddKnownType("System.Xml.NamespaceHandling", "NamespaceHandling");
            feature.AddKnownType("System.Xml.NewLineHandling", "NewLineHandling");
            feature.AddKnownType("System.Xml.IRemovableWriter", "IRemovableWriter");
            feature.AddKnownType("System.Xml.QueryOutputWriter", "QueryOutputWriter");
            feature.AddKnownType("System.Xml.QueryOutputWriterV1", "QueryOutputWriterV1");
            feature.AddKnownType("System.Xml.ReadContentAsBinaryHelper", "ReadContentAsBinaryHelper");
            feature.AddKnownType("System.Xml.TernaryTreeByte", "TernaryTreeByte");
            feature.AddKnownType("System.Xml.ElementProperties", "ElementProperties");
            feature.AddKnownType("System.Xml.AttributeProperties", "AttributeProperties");
            feature.AddKnownType("System.Xml.TernaryTreeReadOnly", "TernaryTreeReadOnly");
            feature.AddKnownType("System.Xml.ReadState", "ReadState");
            feature.AddKnownType("System.Xml.SecureStringHasher", "SecureStringHasher");
            feature.AddKnownType("System.Xml.TextEncodedRawTextWriter", "TextEncodedRawTextWriter");
            feature.AddKnownType("System.Xml.TextUtf8RawTextWriter", "TextUtf8RawTextWriter");
            feature.AddKnownType("System.Xml.ValidatingReaderNodeData", "ValidatingReaderNodeData");
            feature.AddKnownType("System.Xml.ValidationType", "ValidationType");
            feature.AddKnownType("System.Xml.WhitespaceHandling", "WhitespaceHandling");
            feature.AddKnownType("System.Xml.XmlAsyncCheckReader", "XmlAsyncCheckReader");
            feature.AddKnownType("System.Xml.XmlAsyncCheckReaderWithNS", "XmlAsyncCheckReaderWithNS");
            feature.AddKnownType("System.Xml.XmlAsyncCheckReaderWithLineInfo", "XmlAsyncCheckReaderWithLineInfo");
            feature.AddKnownType("System.Xml.XmlAsyncCheckReaderWithLineInfoNS", "XmlAsyncCheckReaderWithLineInfoNS");
            feature.AddKnownType("System.Xml.XmlAsyncCheckReaderWithLineInfoNSSchema", "XmlAsyncCheckReaderWithLineInfoNSSchema");
            feature.AddKnownType("System.Xml.XmlAsyncCheckWriter", "XmlAsyncCheckWriter");
            feature.AddKnownType("System.Xml.XmlAutoDetectWriter", "XmlAutoDetectWriter");
            feature.AddKnownType("System.Xml.XmlCharCheckingReader", "XmlCharCheckingReader");
            feature.AddKnownType("System.Xml.XmlCharCheckingReaderWithNS", "XmlCharCheckingReaderWithNS");
            feature.AddKnownType("System.Xml.XmlCharCheckingWriter", "XmlCharCheckingWriter");
            feature.AddKnownType("System.Xml.XmlEncodedRawTextWriter", "XmlEncodedRawTextWriter");
            feature.AddKnownType("System.Xml.XmlEncodedRawTextWriterIndent", "XmlEncodedRawTextWriterIndent");
            feature.AddKnownType("System.Xml.XmlEventCache", "XmlEventCache");
            feature.AddKnownType("System.Xml.XmlParserContext", "XmlParserContext");
            feature.AddKnownType("System.Xml.XmlRawWriter", "XmlRawWriter");
            feature.AddKnownType("System.Xml.XmlReader", "XmlReader");
            feature.AddKnownType("System.Xml.XmlReaderSettings", "XmlReaderSettings");
            feature.AddKnownType("System.Xml.XmlSpace", "XmlSpace");
            feature.AddKnownType("System.Xml.XmlSubtreeReader", "XmlSubtreeReader");
            feature.AddKnownType("System.Xml.XmlTextEncoder", "XmlTextEncoder");
            feature.AddKnownType("System.Xml.XmlTextReader", "XmlTextReader");
            feature.AddKnownType("System.Xml.XmlTextReaderImpl", "XmlTextReaderImpl");
            feature.AddKnownType("System.Xml.XmlTextReaderImpl+ParsingMode", "ParsingMode");
            feature.AddKnownType("System.Xml.XmlTextReaderImpl+EntityType", "EntityType");
            feature.AddKnownType("System.Xml.XmlTextReaderImpl+DtdParserProxy", "DtdParserProxy");
            feature.AddKnownType("System.Xml.XmlTextReaderImpl+NodeData", "NodeData");
            feature.AddKnownType("System.Xml.Formatting", "Formatting");
            feature.AddKnownType("System.Xml.XmlTextWriter", "XmlTextWriter");
            feature.AddKnownType("System.Xml.XmlUtf8RawTextWriter", "XmlUtf8RawTextWriter");
            feature.AddKnownType("System.Xml.XmlUtf8RawTextWriterIndent", "XmlUtf8RawTextWriterIndent");
            feature.AddKnownType("System.Xml.XmlValidatingReader", "XmlValidatingReader");
            feature.AddKnownType("System.Xml.XmlValidatingReaderImpl", "XmlValidatingReaderImpl");
            feature.AddKnownType("System.Xml.XmlValidatingReaderImpl+ValidationEventHandling", "ValidationEventHandling");
            feature.AddKnownType("System.Xml.XmlWellFormedWriter", "XmlWellFormedWriter");
            feature.AddKnownType("System.Xml.XmlWellFormedWriter+State", "State");
            feature.AddKnownType("System.Xml.XmlWrappingReader", "XmlWrappingReader");
            feature.AddKnownType("System.Xml.XmlWrappingWriter", "XmlWrappingWriter");
            feature.AddKnownType("System.Xml.WriteState", "WriteState");
            feature.AddKnownType("System.Xml.XmlWriter", "XmlWriter");
            feature.AddKnownType("System.Xml.XmlOutputMethod", "XmlOutputMethod");
            feature.AddKnownType("System.Xml.TriState", "TriState");
            feature.AddKnownType("System.Xml.XmlStandalone", "XmlStandalone");
            feature.AddKnownType("System.Xml.XmlWriterSettings", "XmlWriterSettings");
            feature.AddKnownType("System.Xml.AttributePSVIInfo", "AttributePSVIInfo");
            feature.AddKnownType("System.Xml.XsdValidatingReader", "XsdValidatingReader");
            feature.AddKnownType("System.Xml.XsdCachingReader", "XsdCachingReader");
            feature.AddKnownType("System.Xml.DocumentXmlWriterType", "DocumentXmlWriterType");
            feature.AddKnownType("System.Xml.DocumentXmlWriter", "DocumentXmlWriter");
            feature.AddKnownType("System.Xml.DocumentXPathNavigator", "DocumentXPathNavigator");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_Empty", "DocumentXPathNodeIterator_Empty");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_ElemDescendants", "DocumentXPathNodeIterator_ElemDescendants");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_AllElemChildren", "DocumentXPathNodeIterator_AllElemChildren");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_AllElemChildren_AndSelf", "DocumentXPathNodeIterator_AllElemChildren_AndSelf");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_ElemChildren_NoLocalName", "DocumentXPathNodeIterator_ElemChildren_NoLocalName");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_ElemChildren_AndSelf_NoLocalName", "DocumentXPathNodeIterator_ElemChildren_AndSelf_NoLocalName");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_ElemChildren", "DocumentXPathNodeIterator_ElemChildren");
            feature.AddKnownType("System.Xml.DocumentXPathNodeIterator_ElemChildren_AndSelf", "DocumentXPathNodeIterator_ElemChildren_AndSelf");
            feature.AddKnownType("System.Xml.DomNameTable", "DomNameTable");
            feature.AddKnownType("System.Xml.XmlAttribute", "XmlAttribute");
            feature.AddKnownType("System.Xml.XmlAttributeCollection", "XmlAttributeCollection");
            feature.AddKnownType("System.Xml.XmlCDataSection", "XmlCDataSection");
            feature.AddKnownType("System.Xml.XmlCharacterData", "XmlCharacterData");
            feature.AddKnownType("System.Xml.XmlChildEnumerator", "XmlChildEnumerator");
            feature.AddKnownType("System.Xml.XmlChildNodes", "XmlChildNodes");
            feature.AddKnownType("System.Xml.XmlComment", "XmlComment");
            feature.AddKnownType("System.Xml.XmlDeclaration", "XmlDeclaration");
            feature.AddKnownType("System.Xml.XmlDocument", "XmlDocument");
            feature.AddKnownType("System.Xml.XmlDocumentFragment", "XmlDocumentFragment");
            feature.AddKnownType("System.Xml.XmlDocumentType", "XmlDocumentType");
            feature.AddKnownType("System.Xml.DocumentSchemaValidator", "DocumentSchemaValidator");
            feature.AddKnownType("System.Xml.XmlDOMTextWriter", "XmlDOMTextWriter");
            feature.AddKnownType("System.Xml.XmlElement", "XmlElement");
            feature.AddKnownType("System.Xml.XmlElementList", "XmlElementList");
            feature.AddKnownType("System.Xml.XmlElementListEnumerator", "XmlElementListEnumerator");
            feature.AddKnownType("System.Xml.XmlEmptyElementListEnumerator", "XmlEmptyElementListEnumerator");
            feature.AddKnownType("System.Xml.XmlElementListListener", "XmlElementListListener");
            feature.AddKnownType("System.Xml.XmlEntity", "XmlEntity");
            feature.AddKnownType("System.Xml.XmlEntityReference", "XmlEntityReference");
            feature.AddKnownType("System.Xml.XmlNodeChangedAction", "XmlNodeChangedAction");
            feature.AddKnownType("System.Xml.XmlImplementation", "XmlImplementation");
            feature.AddKnownType("System.Xml.XmlLinkedNode", "XmlLinkedNode");
            feature.AddKnownType("System.Xml.XmlLoader", "XmlLoader");
            feature.AddKnownType("System.Xml.XmlName", "XmlName");
            feature.AddKnownType("System.Xml.XmlNameEx", "XmlNameEx");
            feature.AddKnownType("System.Xml.XmlNode", "XmlNode");
            feature.AddKnownType("System.Xml.DebuggerDisplayXmlNodeProxy", "DebuggerDisplayXmlNodeProxy");
            feature.AddKnownType("System.Xml.XmlNodeChangedEventArgs", "XmlNodeChangedEventArgs");
            feature.AddKnownType("System.Xml.XmlNodeList", "XmlNodeList");
            feature.AddKnownType("System.Xml.XmlNodeReaderNavigator", "XmlNodeReaderNavigator");
            feature.AddKnownType("System.Xml.XmlNodeReaderNavigator+VirtualAttribute", "VirtualAttribute");
            feature.AddKnownType("System.Xml.XmlNodeReader", "XmlNodeReader");
            feature.AddKnownType("System.Xml.XmlNotation", "XmlNotation");
            feature.AddKnownType("System.Xml.XmlProcessingInstruction", "XmlProcessingInstruction");
            feature.AddKnownType("System.Xml.XmlSignificantWhitespace", "XmlSignificantWhitespace");
            feature.AddKnownType("System.Xml.XmlText", "XmlText");
            feature.AddKnownType("System.Xml.XmlUnspecifiedAttribute", "XmlUnspecifiedAttribute");
            feature.AddKnownType("System.Xml.XmlWhitespace", "XmlWhitespace");
            feature.AddKnownType("System.Xml.XPathNodeList", "XPathNodeList");
            feature.AddKnownType("System.Xml.XmlNodeListEnumerator", "XmlNodeListEnumerator");
            feature.AddKnownType("System.Xml.BinXmlToken", "BinXmlToken");
            feature.AddKnownType("System.Xml.BinXmlSqlDecimal", "BinXmlSqlDecimal");
            feature.AddKnownType("System.Xml.BinXmlSqlMoney", "BinXmlSqlMoney");
            feature.AddKnownType("System.Xml.BinXmlDateTime", "BinXmlDateTime");
            feature.AddKnownType("System.Xml.XmlSqlBinaryReader", "XmlSqlBinaryReader");
            feature.AddKnownType("System.Xml.XmlSqlBinaryReader+QName", "QName");
            feature.AddKnownType("System.Xml.DtdParser", "DtdParser");
            feature.AddKnownType("System.Xml.XmlTokenizedType", "XmlTokenizedType");
            feature.AddKnownType("System.Xml.ResDescriptionAttribute", "ResDescriptionAttribute");
            feature.AddKnownType("System.Xml.ResCategoryAttribute", "ResCategoryAttribute");
            feature.AddKnownType("System.Xml.Res", "Res");
            feature.AddKnownType("System.Xml.Resolvers.XmlKnownDtds", "XmlKnownDtds");
            feature.AddKnownType("System.Xml.Resolvers.XmlPreloadedResolver", "XmlPreloadedResolver");
            feature.AddKnownType("System.Xml.Schema.AxisElement", "AxisElement");
            feature.AddKnownType("System.Xml.Schema.AxisStack", "AxisStack");
            feature.AddKnownType("System.Xml.Schema.ActiveAxis", "ActiveAxis");
            feature.AddKnownType("System.Xml.Schema.DoubleLinkAxis", "DoubleLinkAxis");
            feature.AddKnownType("System.Xml.Schema.ForwardAxis", "ForwardAxis");
            feature.AddKnownType("System.Xml.Schema.Asttree", "Asttree");
            feature.AddKnownType("System.Xml.Schema.AutoValidator", "AutoValidator");
            feature.AddKnownType("System.Xml.Schema.BaseProcessor", "BaseProcessor");
            feature.AddKnownType("System.Xml.Schema.BaseValidator", "BaseValidator");
            feature.AddKnownType("System.Xml.Schema.BitSet", "BitSet");
            feature.AddKnownType("System.Xml.Schema.ChameleonKey", "ChameleonKey");
            feature.AddKnownType("System.Xml.Schema.CompiledIdentityConstraint", "CompiledIdentityConstraint");
            feature.AddKnownType("System.Xml.Schema.CompiledIdentityConstraint+ConstraintRole", "CompiledIdentityConstraint.ConstraintRole");
            feature.AddKnownType("System.Xml.Schema.Compiler", "Compiler");
            feature.AddKnownType("System.Xml.Schema.ConstraintStruct", "ConstraintStruct");
            feature.AddKnownType("System.Xml.Schema.LocatedActiveAxis", "LocatedActiveAxis");
            feature.AddKnownType("System.Xml.Schema.SelectorActiveAxis", "SelectorActiveAxis");
            feature.AddKnownType("System.Xml.Schema.KSStruct", "KSStruct");
            feature.AddKnownType("System.Xml.Schema.TypedObject", "TypedObject");
            feature.AddKnownType("System.Xml.Schema.KeySequence", "KeySequence");
            feature.AddKnownType("System.Xml.Schema.UpaException", "UpaException");
            feature.AddKnownType("System.Xml.Schema.SymbolsDictionary", "SymbolsDictionary");
            feature.AddKnownType("System.Xml.Schema.Position", "Position");
            feature.AddKnownType("System.Xml.Schema.Positions", "Positions");
            feature.AddKnownType("System.Xml.Schema.SyntaxTreeNode", "SyntaxTreeNode");
            feature.AddKnownType("System.Xml.Schema.LeafNode", "LeafNode");
            feature.AddKnownType("System.Xml.Schema.NamespaceListNode", "NamespaceListNode");
            feature.AddKnownType("System.Xml.Schema.InteriorNode", "InteriorNode");
            feature.AddKnownType("System.Xml.Schema.SequenceNode", "SequenceNode");
            feature.AddKnownType("System.Xml.Schema.ChoiceNode", "ChoiceNode");
            feature.AddKnownType("System.Xml.Schema.PlusNode", "PlusNode");
            feature.AddKnownType("System.Xml.Schema.QmarkNode", "QmarkNode");
            feature.AddKnownType("System.Xml.Schema.StarNode", "StarNode");
            feature.AddKnownType("System.Xml.Schema.LeafRangeNode", "LeafRangeNode");
            feature.AddKnownType("System.Xml.Schema.ContentValidator", "ContentValidator");
            feature.AddKnownType("System.Xml.Schema.ParticleContentValidator", "ParticleContentValidator");
            feature.AddKnownType("System.Xml.Schema.DfaContentValidator", "DfaContentValidator");
            feature.AddKnownType("System.Xml.Schema.NfaContentValidator", "NfaContentValidator");
            feature.AddKnownType("System.Xml.Schema.RangePositionInfo", "RangePositionInfo");
            feature.AddKnownType("System.Xml.Schema.RangeContentValidator", "RangeContentValidator");
            feature.AddKnownType("System.Xml.Schema.AllElementsContentValidator", "AllElementsContentValidator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaDatatypeVariety", "XmlSchemaDatatypeVariety");
            feature.AddKnownType("System.Xml.Schema.XsdSimpleValue", "XsdSimpleValue");
            feature.AddKnownType("System.Xml.Schema.RestrictionFlags", "RestrictionFlags");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaWhiteSpace", "XmlSchemaWhiteSpace");
            feature.AddKnownType("System.Xml.Schema.RestrictionFacets", "RestrictionFacets");
            feature.AddKnownType("System.Xml.Schema.DatatypeImplementation", "DatatypeImplementation");
            feature.AddKnownType("System.Xml.Schema.Datatype_List", "Datatype_List");
            feature.AddKnownType("System.Xml.Schema.Datatype_union", "Datatype_union");
            feature.AddKnownType("System.Xml.Schema.Datatype_anySimpleType", "Datatype_anySimpleType");
            feature.AddKnownType("System.Xml.Schema.Datatype_anyAtomicType", "Datatype_anyAtomicType");
            feature.AddKnownType("System.Xml.Schema.Datatype_untypedAtomicType", "Datatype_untypedAtomicType");
            feature.AddKnownType("System.Xml.Schema.Datatype_string", "Datatype_string");
            feature.AddKnownType("System.Xml.Schema.Datatype_boolean", "Datatype_boolean");
            feature.AddKnownType("System.Xml.Schema.Datatype_float", "Datatype_float");
            feature.AddKnownType("System.Xml.Schema.Datatype_double", "Datatype_double");
            feature.AddKnownType("System.Xml.Schema.Datatype_decimal", "Datatype_decimal");
            feature.AddKnownType("System.Xml.Schema.Datatype_duration", "Datatype_duration");
            feature.AddKnownType("System.Xml.Schema.Datatype_yearMonthDuration", "Datatype_yearMonthDuration");
            feature.AddKnownType("System.Xml.Schema.Datatype_dayTimeDuration", "Datatype_dayTimeDuration");
            feature.AddKnownType("System.Xml.Schema.Datatype_dateTimeBase", "Datatype_dateTimeBase");
            feature.AddKnownType("System.Xml.Schema.Datatype_dateTimeNoTimeZone", "Datatype_dateTimeNoTimeZone");
            feature.AddKnownType("System.Xml.Schema.Datatype_dateTimeTimeZone", "Datatype_dateTimeTimeZone");
            feature.AddKnownType("System.Xml.Schema.Datatype_dateTime", "Datatype_dateTime");
            feature.AddKnownType("System.Xml.Schema.Datatype_timeNoTimeZone", "Datatype_timeNoTimeZone");
            feature.AddKnownType("System.Xml.Schema.Datatype_timeTimeZone", "Datatype_timeTimeZone");
            feature.AddKnownType("System.Xml.Schema.Datatype_time", "Datatype_time");
            feature.AddKnownType("System.Xml.Schema.Datatype_date", "Datatype_date");
            feature.AddKnownType("System.Xml.Schema.Datatype_yearMonth", "Datatype_yearMonth");
            feature.AddKnownType("System.Xml.Schema.Datatype_year", "Datatype_year");
            feature.AddKnownType("System.Xml.Schema.Datatype_monthDay", "Datatype_monthDay");
            feature.AddKnownType("System.Xml.Schema.Datatype_day", "Datatype_day");
            feature.AddKnownType("System.Xml.Schema.Datatype_month", "Datatype_month");
            feature.AddKnownType("System.Xml.Schema.Datatype_hexBinary", "Datatype_hexBinary");
            feature.AddKnownType("System.Xml.Schema.Datatype_base64Binary", "Datatype_base64Binary");
            feature.AddKnownType("System.Xml.Schema.Datatype_anyURI", "Datatype_anyURI");
            feature.AddKnownType("System.Xml.Schema.Datatype_QName", "Datatype_QName");
            feature.AddKnownType("System.Xml.Schema.Datatype_normalizedString", "Datatype_normalizedString");
            feature.AddKnownType("System.Xml.Schema.Datatype_normalizedStringV1Compat", "Datatype_normalizedStringV1Compat");
            feature.AddKnownType("System.Xml.Schema.Datatype_token", "Datatype_token");
            feature.AddKnownType("System.Xml.Schema.Datatype_tokenV1Compat", "Datatype_tokenV1Compat");
            feature.AddKnownType("System.Xml.Schema.Datatype_language", "Datatype_language");
            feature.AddKnownType("System.Xml.Schema.Datatype_NMTOKEN", "Datatype_NMTOKEN");
            feature.AddKnownType("System.Xml.Schema.Datatype_Name", "Datatype_Name");
            feature.AddKnownType("System.Xml.Schema.Datatype_NCName", "Datatype_NCName");
            feature.AddKnownType("System.Xml.Schema.Datatype_ID", "Datatype_ID");
            feature.AddKnownType("System.Xml.Schema.Datatype_IDREF", "Datatype_IDREF");
            feature.AddKnownType("System.Xml.Schema.Datatype_ENTITY", "Datatype_ENTITY");
            feature.AddKnownType("System.Xml.Schema.Datatype_NOTATION", "Datatype_NOTATION");
            feature.AddKnownType("System.Xml.Schema.Datatype_integer", "Datatype_integer");
            feature.AddKnownType("System.Xml.Schema.Datatype_nonPositiveInteger", "Datatype_nonPositiveInteger");
            feature.AddKnownType("System.Xml.Schema.Datatype_negativeInteger", "Datatype_negativeInteger");
            feature.AddKnownType("System.Xml.Schema.Datatype_long", "Datatype_long");
            feature.AddKnownType("System.Xml.Schema.Datatype_int", "Datatype_int");
            feature.AddKnownType("System.Xml.Schema.Datatype_short", "Datatype_short");
            feature.AddKnownType("System.Xml.Schema.Datatype_byte", "Datatype_byte");
            feature.AddKnownType("System.Xml.Schema.Datatype_nonNegativeInteger", "Datatype_nonNegativeInteger");
            feature.AddKnownType("System.Xml.Schema.Datatype_unsignedLong", "Datatype_unsignedLong");
            feature.AddKnownType("System.Xml.Schema.Datatype_unsignedInt", "Datatype_unsignedInt");
            feature.AddKnownType("System.Xml.Schema.Datatype_unsignedShort", "Datatype_unsignedShort");
            feature.AddKnownType("System.Xml.Schema.Datatype_unsignedByte", "Datatype_unsignedByte");
            feature.AddKnownType("System.Xml.Schema.Datatype_positiveInteger", "Datatype_positiveInteger");
            feature.AddKnownType("System.Xml.Schema.Datatype_doubleXdr", "Datatype_doubleXdr");
            feature.AddKnownType("System.Xml.Schema.Datatype_floatXdr", "Datatype_floatXdr");
            feature.AddKnownType("System.Xml.Schema.Datatype_QNameXdr", "Datatype_QNameXdr");
            feature.AddKnownType("System.Xml.Schema.Datatype_ENUMERATION", "Datatype_ENUMERATION");
            feature.AddKnownType("System.Xml.Schema.Datatype_char", "Datatype_char");
            feature.AddKnownType("System.Xml.Schema.Datatype_fixed", "Datatype_fixed");
            feature.AddKnownType("System.Xml.Schema.Datatype_uuid", "Datatype_uuid");
            feature.AddKnownType("System.Xml.Schema.DtdValidator", "DtdValidator");
            feature.AddKnownType("System.Xml.Schema.FacetsChecker", "FacetsChecker");
            feature.AddKnownType("System.Xml.Schema.Numeric10FacetsChecker", "Numeric10FacetsChecker");
            feature.AddKnownType("System.Xml.Schema.Numeric2FacetsChecker", "Numeric2FacetsChecker");
            feature.AddKnownType("System.Xml.Schema.DurationFacetsChecker", "DurationFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.DateTimeFacetsChecker", "DateTimeFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.StringFacetsChecker", "StringFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.QNameFacetsChecker", "QNameFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.MiscFacetsChecker", "MiscFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.BinaryFacetsChecker", "BinaryFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.ListFacetsChecker", "ListFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.UnionFacetsChecker", "UnionFacetsChecker");
            feature.AddKnownType("System.Xml.Schema.IXmlSchemaInfo", "IXmlSchemaInfo");
            feature.AddKnownType("System.Xml.Schema.NamespaceList", "NamespaceList");
            feature.AddKnownType("System.Xml.Schema.NamespaceList+ListType", "NamespaceList.ListType");
            feature.AddKnownType("System.Xml.Schema.NamespaceListV1Compat", "NamespaceListV1Compat");
            feature.AddKnownType("System.Xml.Schema.Parser", "Parser");
            feature.AddKnownType("System.Xml.Schema.Compositor", "Compositor");
            feature.AddKnownType("System.Xml.Schema.RedefineEntry", "RedefineEntry");
            feature.AddKnownType("System.Xml.Schema.Preprocessor", "Preprocessor");
            feature.AddKnownType("System.Xml.Schema.SchemaAttDef", "SchemaAttDef");
            feature.AddKnownType("System.Xml.Schema.SchemaAttDef+Reserve", "Reserve");
            feature.AddKnownType("System.Xml.Schema.SchemaBuilder", "SchemaBuilder");
            feature.AddKnownType("System.Xml.Schema.SchemaCollectionCompiler", "SchemaCollectionCompiler");
            feature.AddKnownType("System.Xml.Schema.SchemaCollectionPreprocessor", "SchemaCollectionPreprocessor");
            feature.AddKnownType("System.Xml.Schema.SchemaDeclBase", "SchemaDeclBase");
            feature.AddKnownType("System.Xml.Schema.SchemaDeclBase+Use", "Use");
            feature.AddKnownType("System.Xml.Schema.SchemaElementDecl", "SchemaElementDecl");
            feature.AddKnownType("System.Xml.Schema.SchemaEntity", "SchemaEntity");
            feature.AddKnownType("System.Xml.Schema.AttributeMatchState", "AttributeMatchState");
            feature.AddKnownType("System.Xml.Schema.SchemaInfo", "SchemaInfo");
            feature.AddKnownType("System.Xml.Schema.SchemaNames", "SchemaNames");
            feature.AddKnownType("System.Xml.Schema.SchemaNames+Token", "SchemaNames.Token");
            feature.AddKnownType("System.Xml.Schema.SchemaNamespaceManager", "SchemaNamespaceManager");
            feature.AddKnownType("System.Xml.Schema.SchemaNotation", "SchemaNotation");
            feature.AddKnownType("System.Xml.Schema.SchemaType", "SchemaType");
            feature.AddKnownType("System.Xml.Schema.ValidationEventArgs", "ValidationEventArgs");
            feature.AddKnownType("System.Xml.Schema.StateUnion", "StateUnion");
            feature.AddKnownType("System.Xml.Schema.ValidationState", "ValidationState");
            feature.AddKnownType("System.Xml.Schema.XdrBuilder", "XdrBuilder");
            feature.AddKnownType("System.Xml.Schema.XdrValidator", "XdrValidator");
            feature.AddKnownType("System.Xml.Schema.XmlAtomicValue", "XmlAtomicValue");
            feature.AddKnownType("System.Xml.Schema.XmlSchema", "XmlSchema");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAll", "XmlSchemaAll");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAnnotated", "XmlSchemaAnnotated");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAnnotation", "XmlSchemaAnnotation");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAny", "XmlSchemaAny");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAnyAttribute", "XmlSchemaAnyAttribute");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAppInfo", "XmlSchemaAppInfo");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAttribute", "XmlSchemaAttribute");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAttributeGroup", "XmlSchemaAttributeGroup");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaAttributeGroupRef", "XmlSchemaAttributeGroupRef");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaChoice", "XmlSchemaChoice");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaCollection", "XmlSchemaCollection");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaCollectionNode", "XmlSchemaCollectionNode");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaCollectionEnumerator", "XmlSchemaCollectionEnumerator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaComplexContent", "XmlSchemaComplexContent");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaComplexContentExtension", "XmlSchemaComplexContentExtension");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaComplexContentRestriction", "XmlSchemaComplexContentRestriction");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaComplexType", "XmlSchemaComplexType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaContent", "XmlSchemaContent");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaContentModel", "XmlSchemaContentModel");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaContentProcessing", "XmlSchemaContentProcessing");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaContentType", "XmlSchemaContentType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaDatatype", "XmlSchemaDatatype");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaDerivationMethod", "XmlSchemaDerivationMethod");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaDocumentation", "XmlSchemaDocumentation");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaElement", "XmlSchemaElement");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaException", "XmlSchemaException");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaExternal", "XmlSchemaExternal");
            feature.AddKnownType("System.Xml.Schema.FacetType", "FacetType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaFacet", "XmlSchemaFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaNumericFacet", "XmlSchemaNumericFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaLengthFacet", "XmlSchemaLengthFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMinLengthFacet", "XmlSchemaMinLengthFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMaxLengthFacet", "XmlSchemaMaxLengthFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaPatternFacet", "XmlSchemaPatternFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaEnumerationFacet", "XmlSchemaEnumerationFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMinExclusiveFacet", "XmlSchemaMinExclusiveFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMinInclusiveFacet", "XmlSchemaMinInclusiveFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMaxExclusiveFacet", "XmlSchemaMaxExclusiveFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaMaxInclusiveFacet", "XmlSchemaMaxInclusiveFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaTotalDigitsFacet", "XmlSchemaTotalDigitsFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaFractionDigitsFacet", "XmlSchemaFractionDigitsFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaWhiteSpaceFacet", "XmlSchemaWhiteSpaceFacet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaForm", "XmlSchemaForm");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaGroup", "XmlSchemaGroup");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaGroupBase", "XmlSchemaGroupBase");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaGroupRef", "XmlSchemaGroupRef");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaIdentityConstraint", "XmlSchemaIdentityConstraint");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaXPath", "XmlSchemaXPath");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaUnique", "XmlSchemaUnique");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaKey", "XmlSchemaKey");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaKeyref", "XmlSchemaKeyref");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaImport", "XmlSchemaImport");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaInclude", "XmlSchemaInclude");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaInfo", "XmlSchemaInfo");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaNotation", "XmlSchemaNotation");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObject", "XmlSchemaObject");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectCollection", "XmlSchemaObjectCollection");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectEnumerator", "XmlSchemaObjectEnumerator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectTable", "XmlSchemaObjectTable");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectTable+EnumeratorType", "EnumeratorType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectTable+XmlSchemaObjectEntry", "XmlSchemaObjectEntry");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectTable+NamesCollection", "NamesCollection");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectTable+ValuesCollection", "ValuesCollection");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectTable+XSOEnumerator", "XSOEnumerator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaObjectTable+XSODictionaryEnumerator", "XSODictionaryEnumerator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaParticle", "XmlSchemaParticle");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaRedefine", "XmlSchemaRedefine");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSequence", "XmlSchemaSequence");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSet", "XmlSchemaSet");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaCompilationSettings", "XmlSchemaCompilationSettings");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleContent", "XmlSchemaSimpleContent");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleContentExtension", "XmlSchemaSimpleContentExtension");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleContentRestriction", "XmlSchemaSimpleContentRestriction");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleType", "XmlSchemaSimpleType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleTypeContent", "XmlSchemaSimpleTypeContent");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleTypeList", "XmlSchemaSimpleTypeList");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleTypeRestriction", "XmlSchemaSimpleTypeRestriction");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSimpleTypeUnion", "XmlSchemaSimpleTypeUnion");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSubstitutionGroup", "XmlSchemaSubstitutionGroup");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaSubstitutionGroupV1Compat", "XmlSchemaSubstitutionGroupV1Compat");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaType", "XmlSchemaType");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaUse", "XmlSchemaUse");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaValidationException", "XmlSchemaValidationException");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaValidationFlags", "XmlSchemaValidationFlags");
            feature.AddKnownType("System.Xml.Schema.ValidatorState", "ValidatorState");
            feature.AddKnownType("System.Xml.Schema.IdRefNode", "IdRefNode");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaValidator", "XmlSchemaValidator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaValidity", "XmlSchemaValidity");
            feature.AddKnownType("System.Xml.Schema.XmlSeverityType", "XmlSeverityType");
            feature.AddKnownType("System.Xml.Schema.XmlTypeCode", "XmlTypeCode");
            feature.AddKnownType("System.Xml.Schema.XmlValueConverter", "XmlValueConverter");
            feature.AddKnownType("System.Xml.Schema.XmlBaseConverter", "XmlBaseConverter");
            feature.AddKnownType("System.Xml.Schema.XmlNumeric10Converter", "XmlNumeric10Converter");
            feature.AddKnownType("System.Xml.Schema.XmlNumeric2Converter", "XmlNumeric2Converter");
            feature.AddKnownType("System.Xml.Schema.XmlDateTimeConverter", "XmlDateTimeConverter");
            feature.AddKnownType("System.Xml.Schema.XmlBooleanConverter", "XmlBooleanConverter");
            feature.AddKnownType("System.Xml.Schema.XmlMiscConverter", "XmlMiscConverter");
            feature.AddKnownType("System.Xml.Schema.XmlStringConverter", "XmlStringConverter");
            feature.AddKnownType("System.Xml.Schema.XmlUntypedConverter", "XmlUntypedConverter");
            feature.AddKnownType("System.Xml.Schema.XmlNodeConverter", "XmlNodeConverter");
            feature.AddKnownType("System.Xml.Schema.XmlAnyConverter", "XmlAnyConverter");
            feature.AddKnownType("System.Xml.Schema.XmlAnyListConverter", "XmlAnyListConverter");
            feature.AddKnownType("System.Xml.Schema.XmlListConverter", "XmlListConverter");
            feature.AddKnownType("System.Xml.Schema.XmlUnionConverter", "XmlUnionConverter");
            feature.AddKnownType("System.Xml.Schema.XsdBuilder", "XsdBuilder");
            feature.AddKnownType("System.Xml.Schema.XsdDateTimeFlags", "XsdDateTimeFlags");
            feature.AddKnownType("System.Xml.Schema.XsdDateTime", "XsdDateTime");
            feature.AddKnownType("System.Xml.Schema.XsdDuration", "XsdDuration");
            feature.AddKnownType("System.Xml.Schema.XsdDuration+DurationType", "XsdDuration.DurationType");
            feature.AddKnownType("System.Xml.Schema.XsdValidator", "XsdValidator");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaInference", "XmlSchemaInference");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaInference+InferenceOption", "XmlSchemaInference.InferenceOption");
            feature.AddKnownType("System.Xml.Schema.XmlSchemaInferenceException", "XmlSchemaInferenceException");
            feature.AddKnownType("System.Xml.Serialization.CodeExporter", "CodeExporter");
            feature.AddKnownType("System.Xml.Serialization.CodeGenerationOptions", "CodeGenerationOptions");
            feature.AddKnownType("System.Xml.Serialization.CodeGenerator", "CodeGenerator");
            feature.AddKnownType("System.Xml.Serialization.CodeGenerator+WhileState", "WhileState");
            feature.AddKnownType("System.Xml.Serialization.ArgBuilder", "ArgBuilder");
            feature.AddKnownType("System.Xml.Serialization.ForState", "ForState");
            feature.AddKnownType("System.Xml.Serialization.Cmp", "Cmp");
            feature.AddKnownType("System.Xml.Serialization.IfState", "IfState");
            feature.AddKnownType("System.Xml.Serialization.LocalScope", "LocalScope");
            feature.AddKnownType("System.Xml.Serialization.MethodBuilderInfo", "MethodBuilderInfo");
            feature.AddKnownType("System.Xml.Serialization.CodeGeneratorConversionException", "CodeGeneratorConversionException");
            feature.AddKnownType("System.Xml.Serialization.CodeIdentifier", "CodeIdentifier");
            feature.AddKnownType("System.Xml.Serialization.CaseInsensitiveKeyComparer", "CaseInsensitiveKeyComparer");
            feature.AddKnownType("System.Xml.Serialization.CodeIdentifiers", "CodeIdentifiers");
            feature.AddKnownType("System.Xml.Serialization.TempAssembly", "TempAssembly");
            feature.AddKnownType("System.Xml.Serialization.TempAssembly+TempMethod", "TempMethod");
            feature.AddKnownType("System.Xml.Serialization.TempAssembly+TempMethodDictionary", "TempMethodDictionary");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerCompilerParameters", "XmlSerializerCompilerParameters");
            feature.AddKnownType("System.Xml.Serialization.TempAssemblyCacheKey", "TempAssemblyCacheKey");
            feature.AddKnownType("System.Xml.Serialization.TempAssemblyCache", "TempAssemblyCache");
            feature.AddKnownType("System.Xml.Serialization.Compiler", "Compiler");
            feature.AddKnownType("System.Xml.Serialization.ImportContext", "ImportContext");
            feature.AddKnownType("System.Xml.Serialization.SchemaObjectCache", "SchemaObjectCache");
            feature.AddKnownType("System.Xml.Serialization.SchemaGraph", "SchemaGraph");
            feature.AddKnownType("System.Xml.Serialization.IndentedWriter", "IndentedWriter");
            feature.AddKnownType("System.Xml.Serialization.IXmlSerializable", "IXmlSerializable");
            feature.AddKnownType("System.Xml.Serialization.IXmlTextParser", "IXmlTextParser");
            feature.AddKnownType("System.Xml.Serialization.Accessor", "Accessor");
            feature.AddKnownType("System.Xml.Serialization.ElementAccessor", "ElementAccessor");
            feature.AddKnownType("System.Xml.Serialization.ChoiceIdentifierAccessor", "ChoiceIdentifierAccessor");
            feature.AddKnownType("System.Xml.Serialization.TextAccessor", "TextAccessor");
            feature.AddKnownType("System.Xml.Serialization.XmlnsAccessor", "XmlnsAccessor");
            feature.AddKnownType("System.Xml.Serialization.AttributeAccessor", "AttributeAccessor");
            feature.AddKnownType("System.Xml.Serialization.Mapping", "Mapping");
            feature.AddKnownType("System.Xml.Serialization.TypeMapping", "TypeMapping");
            feature.AddKnownType("System.Xml.Serialization.PrimitiveMapping", "PrimitiveMapping");
            feature.AddKnownType("System.Xml.Serialization.NullableMapping", "NullableMapping");
            feature.AddKnownType("System.Xml.Serialization.ArrayMapping", "ArrayMapping");
            feature.AddKnownType("System.Xml.Serialization.EnumMapping", "EnumMapping");
            feature.AddKnownType("System.Xml.Serialization.ConstantMapping", "ConstantMapping");
            feature.AddKnownType("System.Xml.Serialization.StructMapping", "StructMapping");
            feature.AddKnownType("System.Xml.Serialization.AccessorMapping", "AccessorMapping");
            feature.AddKnownType("System.Xml.Serialization.AccessorMapping+AccessorComparer", "AccessorComparer");
            feature.AddKnownType("System.Xml.Serialization.MemberMappingComparer", "MemberMappingComparer");
            feature.AddKnownType("System.Xml.Serialization.MemberMapping", "MemberMapping");
            feature.AddKnownType("System.Xml.Serialization.MembersMapping", "MembersMapping");
            feature.AddKnownType("System.Xml.Serialization.SpecialMapping", "SpecialMapping");
            feature.AddKnownType("System.Xml.Serialization.SerializableMapping", "SerializableMapping");
            feature.AddKnownType("System.Xml.Serialization.ModelScope", "ModelScope");
            feature.AddKnownType("System.Xml.Serialization.TypeModel", "TypeModel");
            feature.AddKnownType("System.Xml.Serialization.ArrayModel", "ArrayModel");
            feature.AddKnownType("System.Xml.Serialization.PrimitiveModel", "PrimitiveModel");
            feature.AddKnownType("System.Xml.Serialization.SpecialModel", "SpecialModel");
            feature.AddKnownType("System.Xml.Serialization.StructModel", "StructModel");
            feature.AddKnownType("System.Xml.Serialization.SpecifiedAccessor", "SpecifiedAccessor");
            feature.AddKnownType("System.Xml.Serialization.FieldModel", "FieldModel");
            feature.AddKnownType("System.Xml.Serialization.ConstantModel", "ConstantModel");
            feature.AddKnownType("System.Xml.Serialization.EnumModel", "EnumModel");
            feature.AddKnownType("System.Xml.Serialization.NameKey", "NameKey");
            feature.AddKnownType("System.Xml.Serialization.INameScope", "INameScope");
            feature.AddKnownType("System.Xml.Serialization.NameTable", "NameTable");
            feature.AddKnownType("System.Xml.Serialization.SchemaImporter", "SchemaImporter");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributeComparer", "XmlAttributeComparer");
            feature.AddKnownType("System.Xml.Serialization.XmlFacetComparer", "XmlFacetComparer");
            feature.AddKnownType("System.Xml.Serialization.QNameComparer", "QNameComparer");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaObjectComparer", "XmlSchemaObjectComparer");
            feature.AddKnownType("System.Xml.Serialization.SchemaObjectWriter", "SchemaObjectWriter");
            feature.AddKnownType("System.Xml.Serialization.SoapAttributeAttribute", "SoapAttributeAttribute");
            feature.AddKnownType("System.Xml.Serialization.SoapAttributeOverrides", "SoapAttributeOverrides");
            feature.AddKnownType("System.Xml.Serialization.SoapAttributeFlags", "SoapAttributeFlags");
            feature.AddKnownType("System.Xml.Serialization.SoapAttributes", "SoapAttributes");
            feature.AddKnownType("System.Xml.Serialization.SoapCodeExporter", "SoapCodeExporter");
            feature.AddKnownType("System.Xml.Serialization.SoapElementAttribute", "SoapElementAttribute");
            feature.AddKnownType("System.Xml.Serialization.SoapEnumAttribute", "SoapEnumAttribute");
            feature.AddKnownType("System.Xml.Serialization.SoapIgnoreAttribute", "SoapIgnoreAttribute");
            feature.AddKnownType("System.Xml.Serialization.SoapIncludeAttribute", "SoapIncludeAttribute");
            feature.AddKnownType("System.Xml.Serialization.SoapReflectionImporter", "SoapReflectionImporter");
            feature.AddKnownType("System.Xml.Serialization.SoapSchemaExporter", "SoapSchemaExporter");
            feature.AddKnownType("System.Xml.Serialization.SoapSchemaImporter", "SoapSchemaImporter");
            feature.AddKnownType("System.Xml.Serialization.SoapSchemaMember", "SoapSchemaMember");
            feature.AddKnownType("System.Xml.Serialization.SoapTypeAttribute", "SoapTypeAttribute");
            feature.AddKnownType("System.Xml.Serialization.SourceInfo", "SourceInfo");
            feature.AddKnownType("System.Xml.Serialization.TypeKind", "TypeKind");
            feature.AddKnownType("System.Xml.Serialization.TypeFlags", "TypeFlags");
            feature.AddKnownType("System.Xml.Serialization.TypeDesc", "TypeDesc");
            feature.AddKnownType("System.Xml.Serialization.TypeScope", "TypeScope");
            feature.AddKnownType("System.Xml.Serialization.Soap", "Soap");
            feature.AddKnownType("System.Xml.Serialization.Soap12", "Soap12");
            feature.AddKnownType("System.Xml.Serialization.Wsdl", "Wsdl");
            feature.AddKnownType("System.Xml.Serialization.UrtTypes", "UrtTypes");
            feature.AddKnownType("System.Xml.Serialization.XmlAnyAttributeAttribute", "XmlAnyAttributeAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlAnyElementAttribute", "XmlAnyElementAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlAnyElementAttributes", "XmlAnyElementAttributes");
            feature.AddKnownType("System.Xml.Serialization.XmlArrayAttribute", "XmlArrayAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlArrayItemAttribute", "XmlArrayItemAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlArrayItemAttributes", "XmlArrayItemAttributes");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributeAttribute", "XmlAttributeAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributeOverrides", "XmlAttributeOverrides");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributeFlags", "XmlAttributeFlags");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributes", "XmlAttributes");
            feature.AddKnownType("System.Xml.Serialization.XmlChoiceIdentifierAttribute", "XmlChoiceIdentifierAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlCodeExporter", "XmlCodeExporter");
            feature.AddKnownType("System.Xml.Serialization.XmlCountingReader", "XmlCountingReader");
            feature.AddKnownType("System.Xml.Serialization.XmlCustomFormatter", "XmlCustomFormatter");
            feature.AddKnownType("System.Xml.Serialization.XmlElementAttribute", "XmlElementAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlElementAttributes", "XmlElementAttributes");
            feature.AddKnownType("System.Xml.Serialization.XmlEnumAttribute", "XmlEnumAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlIgnoreAttribute", "XmlIgnoreAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlIncludeAttribute", "XmlIncludeAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlMappingAccess", "XmlMappingAccess");
            feature.AddKnownType("System.Xml.Serialization.XmlMapping", "XmlMapping");
            feature.AddKnownType("System.Xml.Serialization.XmlMemberMapping", "XmlMemberMapping");
            feature.AddKnownType("System.Xml.Serialization.XmlMembersMapping", "XmlMembersMapping");
            feature.AddKnownType("System.Xml.Serialization.XmlNamespaceDeclarationsAttribute", "XmlNamespaceDeclarationsAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlReflectionImporter", "XmlReflectionImporter");
            feature.AddKnownType("System.Xml.Serialization.ImportStructWorkItem", "ImportStructWorkItem");
            feature.AddKnownType("System.Xml.Serialization.WorkItems", "WorkItems");
            feature.AddKnownType("System.Xml.Serialization.RecursionLimiter", "RecursionLimiter");
            feature.AddKnownType("System.Xml.Serialization.XmlReflectionMember", "XmlReflectionMember");
            feature.AddKnownType("System.Xml.Serialization.XmlRootAttribute", "XmlRootAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaExporter", "XmlSchemaExporter");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaImporter", "XmlSchemaImporter");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaImporter+ElementComparer", "ElementComparer");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaProviderAttribute", "XmlSchemaProviderAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemas", "XmlSchemas");
            feature.AddKnownType("System.Xml.Serialization.XmlSchemaEnumerator", "XmlSchemaEnumerator");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationGeneratedCode", "XmlSerializationGeneratedCode");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationCodeGen", "XmlSerializationCodeGen");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationILGen", "XmlSerializationILGen");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationReader", "XmlSerializationReader");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationReader+Fixup", "Fixup");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationReader+CollectionFixup", "CollectionFixup");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationReaderCodeGen", "XmlSerializationReaderCodeGen");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationReaderILGen", "XmlSerializationReaderILGen");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationWriter", "XmlSerializationWriter");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationWriter+TypeEntry", "TypeEntry");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationWriterCodeGen", "XmlSerializationWriterCodeGen");
            feature.AddKnownType("System.Xml.Serialization.ReflectionAwareCodeGen", "ReflectionAwareCodeGen");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationWriterILGen", "XmlSerializationWriterILGen");
            feature.AddKnownType("System.Xml.Serialization.ReflectionAwareILGen", "ReflectionAwareILGen");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerAssemblyAttribute", "XmlSerializerAssemblyAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlDeserializationEvents", "XmlDeserializationEvents");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerImplementation", "XmlSerializerImplementation");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializer", "XmlSerializer");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerFactory", "XmlSerializerFactory");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerNamespaces", "XmlSerializerNamespaces");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializerVersionAttribute", "XmlSerializerVersionAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlTextAttribute", "XmlTextAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlTypeAttribute", "XmlTypeAttribute");
            feature.AddKnownType("System.Xml.Serialization.XmlTypeMapping", "XmlTypeMapping");
            feature.AddKnownType("System.Xml.Serialization.XmlAttributeEventArgs", "XmlAttributeEventArgs");
            feature.AddKnownType("System.Xml.Serialization.XmlElementEventArgs", "XmlElementEventArgs");
            feature.AddKnownType("System.Xml.Serialization.XmlNodeEventArgs", "XmlNodeEventArgs");
            feature.AddKnownType("System.Xml.Serialization.UnreferencedObjectEventArgs", "UnreferencedObjectEventArgs");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationPrimitiveWriter", "XmlSerializationPrimitiveWriter");
            feature.AddKnownType("System.Xml.Serialization.XmlSerializationPrimitiveReader", "XmlSerializationPrimitiveReader");
            feature.AddKnownType("System.Xml.Serialization.Advanced.SchemaImporterExtension", "SchemaImporterExtension");
            feature.AddKnownType("System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection", "SchemaImporterExtensionCollection");
            feature.AddKnownType("System.Xml.Serialization.Advanced.MappedTypeDesc", "MappedTypeDesc");
            feature.AddKnownType("System.Xml.Serialization.Configuration.DateTimeSerializationSection", "DateTimeSerializationSection");
            feature.AddKnownType("System.Xml.Serialization.Configuration.DateTimeSerializationSection+DateTimeSerializationMode", "DateTimeSerializationSection.DateTimeSerializationMode");
            feature.AddKnownType("System.Xml.Serialization.Configuration.SchemaImporterExtensionElement", "SchemaImporterExtensionElement");
            feature.AddKnownType("System.Xml.Serialization.Configuration.SchemaImporterExtensionElement+TypeTypeConverter", "TypeTypeConverter");
            feature.AddKnownType("System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection", "SchemaImporterExtensionElementCollection");
            feature.AddKnownType("System.Xml.Serialization.Configuration.SchemaImporterExtensionsSection", "SchemaImporterExtensionsSection");
            feature.AddKnownType("System.Xml.Serialization.Configuration.SerializationSectionGroup", "SerializationSectionGroup");
            feature.AddKnownType("System.Xml.Serialization.Configuration.XmlSerializerSection", "XmlSerializerSection");
            feature.AddKnownType("System.Xml.Serialization.Configuration.RootedPathValidator", "RootedPathValidator");
            feature.AddKnownType("System.Xml.XPath.IXPathNavigable", "IXPathNavigable");
            feature.AddKnownType("System.Xml.XPath.XPathDocument", "XPathDocument");
            feature.AddKnownType("System.Xml.XPath.XPathDocument+LoadFlags", "LoadFlags");
            feature.AddKnownType("System.Xml.XPath.XPathException", "XPathException");
            feature.AddKnownType("System.Xml.XPath.XmlSortOrder", "XmlSortOrder");
            feature.AddKnownType("System.Xml.XPath.XmlCaseOrder", "XmlCaseOrder");
            feature.AddKnownType("System.Xml.XPath.XmlDataType", "XmlDataType");
            feature.AddKnownType("System.Xml.XPath.XPathResultType", "XPathResultType");
            feature.AddKnownType("System.Xml.XPath.XPathExpression", "XPathExpression");
            feature.AddKnownType("System.Xml.XPath.XPathItem", "XPathItem");
            feature.AddKnownType("System.Xml.XPath.XPathNamespaceScope", "XPathNamespaceScope");
            feature.AddKnownType("System.Xml.XPath.XPathNavigator", "XPathNavigator");
            feature.AddKnownType("System.Xml.XPath.XPathNavigator+DebuggerDisplayProxy", "DebuggerDisplayProxy");
            feature.AddKnownType("System.Xml.XPath.XPathNavigatorKeyComparer", "XPathNavigatorKeyComparer");
            feature.AddKnownType("System.Xml.XPath.XPathNavigatorReader", "XPathNavigatorReader");
            feature.AddKnownType("System.Xml.XPath.XPathNavigatorReaderWithSI", "XPathNavigatorReaderWithSI");
            feature.AddKnownType("System.Xml.XPath.XmlEmptyNavigator", "XmlEmptyNavigator");
            feature.AddKnownType("System.Xml.XPath.XPathNodeIterator", "XPathNodeIterator");
            feature.AddKnownType("System.Xml.XPath.XPathNodeType", "XPathNodeType");
            feature.AddKnownType("System.Xml.XmlConfiguration.XmlReaderSection", "XmlReaderSection");
            feature.AddKnownType("System.Xml.XmlConfiguration.XsltConfigSection", "XsltConfigSection");
            feature.AddKnownType("System.Xml.Xsl.XslCompiledTransform", "XslCompiledTransform");
            feature.AddKnownType("System.Xml.Xsl.XsltMessageEncounteredEventArgs", "XsltMessageEncounteredEventArgs");
            feature.AddKnownType("System.Xml.Xsl.XsltArgumentList", "XsltArgumentList");
            feature.AddKnownType("System.Xml.Xsl.IXsltContextFunction", "IXsltContextFunction");
            feature.AddKnownType("System.Xml.Xsl.IXsltContextVariable", "IXsltContextVariable");
            feature.AddKnownType("System.Xml.Xsl.XsltContext", "XsltContext");
            feature.AddKnownType("System.Xml.Xsl.XsltException", "XsltException");
            feature.AddKnownType("System.Xml.Xsl.XsltCompileException", "XsltCompileException");
            feature.AddKnownType("System.Xml.Xsl.XslTransform", "XslTransform");
            feature.AddKnownType("System.Xml.Xsl.XsltSettings", "XsltSettings");
            feature.AddKnownType("MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider`1,System.Xml.Linq", "MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider`1'1");
            feature.AddKnownType("System.Xml.Linq.XName", "XName");
            feature.AddKnownType("System.Xml.Linq.NameSerializer", "NameSerializer");
            feature.AddKnownType("System.Xml.Linq.XNamespace", "XNamespace");
            feature.AddKnownType("System.Xml.Linq.XObject", "XObject");
            feature.AddKnownType("System.Xml.Linq.XObjectChange", "XObjectChange");
            feature.AddKnownType("System.Xml.Linq.XObjectChangeEventArgs", "XObjectChangeEventArgs");
            feature.AddKnownType("System.Xml.Linq.XNode", "XNode");
            feature.AddKnownType("System.Xml.Linq.XNodeDocumentOrderComparer", "XNodeDocumentOrderComparer");
            feature.AddKnownType("System.Xml.Linq.XNodeEqualityComparer", "XNodeEqualityComparer");
            feature.AddKnownType("System.Xml.Linq.XText", "XText");
            feature.AddKnownType("System.Xml.Linq.XCData", "XCData");
            feature.AddKnownType("System.Xml.Linq.XContainer", "XContainer");
            feature.AddKnownType("System.Xml.Linq.XElement", "XElement");
            feature.AddKnownType("System.Xml.Linq.LoadOptions", "LoadOptions");
            feature.AddKnownType("System.Xml.Linq.SaveOptions", "SaveOptions");
            feature.AddKnownType("System.Xml.Linq.ReaderOptions", "ReaderOptions");
            feature.AddKnownType("System.Xml.Linq.XDocument", "XDocument");
            feature.AddKnownType("System.Xml.Linq.XComment", "XComment");
            feature.AddKnownType("System.Xml.Linq.XProcessingInstruction", "XProcessingInstruction");
            feature.AddKnownType("System.Xml.Linq.XDeclaration", "XDeclaration");
            feature.AddKnownType("System.Xml.Linq.XDocumentType", "XDocumentType");
            feature.AddKnownType("System.Xml.Linq.XAttribute", "XAttribute");
            feature.AddKnownType("System.Xml.Linq.XStreamingElement", "XStreamingElement");
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
